/*! For license information please see app.js.LICENSE.txt */
(()=>{var e={670:(e,t,n)=>{"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n.d(t,{Z:()=>r})},816:(e,t,n)=>{"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}n.d(t,{Z:()=>a})},949:(e,t,n)=>{"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,{Z:()=>r})},253:(e,t,n)=>{"use strict";t.Z=void 0;var r,a=n(283),o=(r=n(57))&&r.__esModule?r:{default:r};function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.validateProps(t),this.initProps(t),this.iframe=new o.default({baseurl:this._props.baseurl}),this._eventHandlers={},["sso","signinLocally","signup","signin","signout","signoutLocally"].forEach((function(e){return n[e]=n[e].bind(n)}))}var t,n;return t=e,(n=[{key:"get",value:function(e){return this._props[e]}},{key:"set",value:function(e){if((0,a.isNotObject)(e))throw new Error("Require props to be an Object");for(var t in e)this._props[t]=e[t];return this}},{key:"validateProps",value:function(e){if(!e.baseurl)throw new Error("missing prop: baseurl");if(!e.app)throw new Error("missing prop: app");if(!e.session)throw new Error("missing prop: session")}},{key:"initProps",value:function(e){this._props={},this.set(e),this.setDefaulProps()}},{key:"setDefaulProps",value:function(){this._props.timeout||(this._props.timeout=5e4),this._props.cookie||(this._props.cookie=!1)}},{key:"emit",value:function(e){for(var t=this,n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return this._eventHandlers[e]&&this._eventHandlers[e].forEach((function(e){return e.call.apply(e,[t].concat(r))})),this}},{key:"on",value:function(e,t){return this._eventHandlers[e]||(this._eventHandlers[e]=[]),this._eventHandlers[e].push(t),this}},{key:"sso",value:function(e){var t=this;return new Promise((function(n,r){t.emit("authenticating"),t._setTimeout(e,r),t.iframe.open({path:"/session",query:{app:t.get("app")},onLoaded:function(){return t._clearTimeout()},done:function(a){return t.onSSOFormResolved(a,e,n,r)}})}))}},{key:"onSSOFormResolved",value:function(e,t,n,r){e&&200==e.status?this.processSignedIn(e,t,n,r):e&&404==e.status?this.processSigningout(t,n,r):(t&&t("# Error in SSO: something wrong in account-server configuration"),r("# Error in SSO: something wrong in account-server configuration"))}},{key:"signup",value:function(e){var t=this;return new Promise((function(n,r){t._setTimeout(e,r),t.iframe.open({path:"/form",query:{name:"signup",app:t.get("app")},props:{display:"block"},onLoaded:function(){return t._clearTimeout()},done:function(a){return t.onAuthenFormResolved(a,e,n,r,"SIGN-UP")}})}))}},{key:"signin",value:function(e){var t=this;return new Promise((function(n,r){t._setTimeout(e,r),t.iframe.open({path:"/form",query:{name:"signin",app:t.get("app"),height:415},props:{display:"block"},onLoaded:function(){return t._clearTimeout()},done:function(a){return t.onAuthenFormResolved(a,e,n,r,"SIGN-IN")}})}))}},{key:"processSignedIn",value:function(e,t,n,r){var a=this;this.setLocalSession(e.session).then((function(){a.emit("authenticated",e.session.user),t&&t(null,e.session.user),n(e.session.user)})).catch((function(e){return r(e)}))}},{key:"onAuthenFormResolved",value:function(e,t,n,r,a){e&&200==e.status?this.processSignedIn(e,t,n,r):e&&"iframe.close"===e.code?(t&&t(null,!1),r(!1)):(t&&t("# Error in ".concat(a,": something wrong in account-server configuration")),r("# Error in ".concat(a,": something wrong in account-server configuration")))}},{key:"signout",value:function(e){var t=this;return new Promise((function(n,r){t._setTimeout(e,r),t.iframe.open({path:"/form",query:{name:"signout",app:t.get("app"),sid:t.getLocalSession().sid},onLoaded:function(){return t._clearTimeout()},done:function(a){return t.onSignoutFormResolved(a,e,n,r)}})}))}},{key:"onSignoutFormResolved",value:function(e,t,n,r){e&&200==e.status?this.processSigningout(t,n,r):(t&&t("# Error in SIGN-OUT: received ".concat(e&&e.status)),r("# Error in SIGN-OUT: received ".concat(e&&e.status)))}},{key:"signoutLocally",value:function(e){var t=this;return new Promise((function(n,r){return t.processSigningout(e,n,r)}))}},{key:"processSigningout",value:function(e,t,n){var r=this;this.clearLocalSession().then((function(){r.emit("unauthenticated"),e&&e(null,void 0),t(void 0)})).catch((function(t){e&&e(t),n(t)}))}},{key:"signinLocally",value:function(e){var t=this;return new Promise((function(n,r){"undefined"==typeof Storage&&(e&&e("No Web Storage support"),r("No Web Storage support"));var a=JSON.parse(localStorage.getItem(t.get("session")));a&&a.user&&a.token?t.processSignedIn({session:a},e,n,r):(t.emit("unauthenticated"),e&&e(404,void 0),n(void 0))}))}},{key:"clearLocalSession",value:function(){var e=this;return new Promise((function(t,n){e.set({user:void 0,token:void 0}),"undefined"==typeof Storage&&n("No Web Storage support"),localStorage.removeItem(e.get("session")),t()}))}},{key:"setLocalSession",value:function(e){var t=this;return new Promise((function(n,r){t.set(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e)),"undefined"==typeof Storage&&r("No Web Storage support"),localStorage.setItem(t.get("session"),JSON.stringify(e)),n()}))}},{key:"getLocalSession",value:function(){if("undefined"==typeof Storage)throw Error("No Web Storage support");return JSON.parse(localStorage.getItem(this.get("session")))}},{key:"_setTimeout",value:function(e,t){var n=this,r=this.get("timeout")||this.get("timeout");this._to=setTimeout((function(){n.iframe.close(),e&&e("503 Request Timeout. No response from the server",null),t&&t("503 Request Timeout. No response from the server")}),r)}},{key:"_clearTimeout",value:function(){clearTimeout(this._to)}}])&&u(t.prototype,n),e}();t.Z=s},57:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(283);function a(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t||!t.baseurl)throw new Error("Iframe instance requires baseurl!");var n=t.baseurl;this.baseurl=n.replace(/\/+$/,""),this._lazyFn=[],this._done=null,this._onIframeLoaded=null,this._iframeClosed=!0,this._iframe=null,this.messageHandler={"iframe.loaded":this.handleIframeMessage("Loaded"),"iframe.close":this.handleIframeMessage("Close"),"iframe.done":this.handleIframeMessage("Done")},document.addEventListener("DOMContentLoaded",this.processAfterDomReady.bind(this),!1),window.addEventListener("message",this.processIframeMessage.bind(this),!1)}var t,n;return t=e,(n=[{key:"processAfterDomReady",value:function(){this._domReady=!0,this._lazyFn.forEach((function(e){return e.fn.apply(e,a(e.args))})),this._lazyFn=[]}},{key:"processIframeMessage",value:function(e){if(e.origin===this.baseurl){var t=e.data;this.messageHandler[t.code](t)}}},{key:"handleIframeMessage",value:function(e){return this["handleMessageIframe".concat(e)].bind(this)}},{key:"handleMessageIframeLoaded",value:function(e){this._iframe&&(this._iframe.style.height=e.height+"px",this._iframe.style.width="95%",this._iframe.style["max-width"]=e.width+"px",this._onIframeLoaded&&this._onIframeLoaded())}},{key:"handleMessageIframeClose",value:function(e){this._closeIframe(),this._done&&this._done(e)}},{key:"handleMessageIframeDone",value:function(e){if(this._closeIframe(),this._done&&this._done(e),this._lazyFn.length>0){var t=this._lazyFn.pop();t.fn.apply(t,a(t.args))}}},{key:"open",value:function(e){var t=e.path,n=e.query,r=e.props,a=e.onLoaded,o=e.done;this._lazyExecute((function(e){var t=e.path,n=e.query,r=e.props,o=e.done,i=this._constructURL(t,n);this._openIframe(i,r),this._onIframeLoaded=a,this._done=o}),{path:t,query:n,props:r,done:o})}},{key:"close",value:function(){this._closeIframe()}},{key:"_openIframe",value:function(e,t){this._iframeClosed=!1;var n=document.getElementById("__".concat(this.baseurl,"__container__"));n||((n=document.createElement("div")).setAttribute("id","__".concat(this.baseurl,"__container__")),document.getElementsByTagName("body")[0].appendChild(n));var r=document.createElement("iframe");if(r.src=e,r.setAttribute("id","__".concat(this.baseurl,"__iframe__")),t)for(var a in t)"display"!==a&&(r.style[a]=t[a]);r.style.display=t&&t.display?t.display:"none",r.style.border="none",r.style.margin="45px auto",r.style.width=0,r.style.height=0;var o=document.createElement("div");o.style.position="fixed",o.style.width="100%",o.style.height="100%",o.style.top=0,o.style.zIndex=1,t&&t.display&&(o.style["background-color"]="rgba(0,0,0,0.5)"),o.style["-webkit-overflow-scrolling"]="touch",o.style["overflow-y"]="scroll",o.appendChild(r),n.appendChild(o),this._iframe=r}},{key:"_closeIframe",value:function(){document.getElementById("__".concat(this.baseurl,"__container__")).innerHTML="",this._iframeClosed=!0,this._iframe=null}},{key:"_lazyExecute",value:function(e){e=e.bind(this);for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];this._domReady&&this._iframeClosed?e.apply(void 0,n):this._lazyFn.push({fn:e,args:n})}},{key:"_constructURL",value:function(e,t){if(e=e.replace(/^\/+|\/+$/gm,"").replace(/\/\//gm,"/"),(0,r.isObject)(t)){var n="?";for(var a in t)n+="".concat(a,"=").concat(t[a],"&");return n=n.replace(/&+$/,""),"".concat(this.baseurl,"/").concat(e).concat(n)}return"".concat(this.baseurl,"/").concat(e)}}])&&i(t.prototype,n),e}();t.default=l},283:e=>{"use strict";function t(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var r={}.toString,a={};["Arguments","Array","Function","String","Number","Date","RegExp","Object"].forEach((function(e){a["is".concat(e)]=function(t){return t&&r.call(t)=="[object ".concat(e,"]")},a["isNot".concat(e)]=function(t){return t&&r.call(t)!="[object ".concat(e,"]")}})),e.exports=function(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?t(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}({},a)},693:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==m(e)&&"function"!=typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var o=r?Object.getOwnPropertyDescriptor(e,a):null;o&&(o.get||o.set)?Object.defineProperty(n,a,o):n[a]=e[a]}return n.default=e,t&&t.set(e,n),n}(n(294)),a=s(n(108)),o=s(n(449)),i=n(393),l=s(n(906)),u=n(858);function s(e){return e&&e.__esModule?e:{default:e}}function c(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function f(e){return function(e){if(Array.isArray(e))return d(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){g(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function g(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return t&&y(e.prototype,t),n&&y(e,n),e}function w(e){return function(){var t,n=E(e);if(_()){var r=E(this).constructor;t=Reflect.construct(n,arguments,r)}else t=n.apply(this,arguments);return k(this,t)}}function k(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?S(e):t}function S(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function E(e){return(E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function x(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&C(e,t)}function C(e,t){return(C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var P=(0,s(n(33)).default)(),O=new o.default,N=function(e){x(n,e);var t=w(n);function n(e){return v(this,n),t.call(this,e)}return b(n,[{key:"componentDidMount",value:function(){this.props.fire("load"),this.props.active&&this.props.fire("enter")}},{key:"componentDidUpdate",value:function(e){this.props.active&&!e.active&&this.props.fire("enter")}},{key:"render",value:function(){return this.props.children}}]),n}(r.Component),L=function(e){x(n,e);var t=w(n);function n(e){return v(this,n),t.call(this,e)}return b(n,[{key:"render",value:function(){return r.default.createElement("div",{className:"rjs-react-nav-modal",style:{display:this.props.show?"block":"none"}},this.props.children)}}]),n}(r.Component),R=function(e){x(n,e);var t=w(n);function n(){return v(this,n),t.apply(this,arguments)}return b(n,[{key:"render",value:function(){var e={display:this.props.show?"block":"none",position:"fixed",width:"100%",left:0,opacity:this.props.opacity||.9};this.props.bottom?e.bottom=0:e.top=0;var t=this.props.bottom?(0,l.default)("float-bottom","0.4s"):(0,l.default)("float-top","0.4s");return r.default.createElement("div",{style:h({},e,{},t)},r.default.createElement("div",{style:{position:"relative"}},this.props.children))}}]),n}(r.Component),j=function(e){x(n,e);var t=w(n);function n(e){var r;v(this,n),(r=t.call(this,e)).__validateProps(e),r.state={routeStack:[],activeRouteName:r.__findInitialRouteName(),showPopup:{},toasts:{top:[],bottom:[]}},r.__supportedPageEvents=["load","beforeEnter","enter","leave","unload"],r.__events={},r.__registeredRoutes={},r.__registerRoutes(h({},e.routes)),r.__popupStack={},r.__global={popup:function(e,t,n){return r.__createPopup("__global",e,t,n)}};var o=r.__registeredRoutes[r.state.activeRouteName];return e.noUrl||!o||O.matchUrlPath(o.url)||O.push(o.url),r.nav={navigate:r.navigate.bind(S(r))},e.routeHandler&&e.routeHandler(r.nav),r.__createInjectPage=r.__createInjectPage.bind(S(r)),r.__fire=r.__fire.bind(S(r)),r.__createPopup=r.__createPopup.bind(S(r)),r.onPopState=r.onPopState.bind(S(r)),r.handleClickOnModal=r.handleClickOnModal.bind(S(r)),(0,u.appendStyle)(),a.default.register(S(r)),window.addEventListener("popstate",r.onPopState),r}return b(n,[{key:"onPopState",value:function(){var e="/"+O.getPathName(),t=f(this.state.routeStack),n=t.findIndex((function(t){return t.url===e}));if(-1!==n){var r=t.slice(n,n+1)[0];t.splice(n,1),t.unshift(r),this.__fire(t[1].name,t[1].uid,"leave"),this.__fire(t[0].name,t[0].uid,"beforeEnter"),this.setState({routeStack:t})}}},{key:"componentDidMount",value:function(){var e=this;this.__initRouteStack().then((function(t){var n=t[0].name,r=(0,i.makeTitle)(e.__registeredRoutes[n].title,t[0].params,t[0].data);r&&(document.title=r),e.setState({routeStack:t,activeRouteName:n})}))}},{key:"componentWillUnmount",value:function(){a.default.destroy(),this.props.routeHandler&&this.props.routeHandler(null),window.removeEventListener("popstate",this.onPopState)}},{key:"render",value:function(){var e=this;return r.default.createElement("div",null,this.state.routeStack.map((function(t,n){var a=t.name,o=t.url,i=t.page,l=t.data,u=t.params,s=t.uid,c=0===n?"block":"none",f={url:o,data:l,params:u},d=e.__registeredRoutes[a].Page;return r.default.createElement("div",{key:s,style:{display:c}},r.default.createElement(N,{fire:function(t){return e.__fire(a,s,t)},active:0===n},r.default.createElement(d,h({route:f,nav:e.nav,page:i},e.props))),r.default.createElement(L,{show:e.state.showPopup[a]},e.__popupStack[a]&&e.__popupStack[a].map((function(t,n){return t.self.overlay?r.default.createElement("div",{key:n,className:"rjs-react-nav-modal",style:{display:"block"},onClick:function(n){return e.handleClickOnModal(t.self)}},r.default.createElement("div",{onClick:function(e){return e.stopPropagation()}}," ",r.default.createElement(t.Popup,h({self:t.self},e.props,{page:i}))," ")):r.default.createElement("div",{key:n,className:"rjs-react-nav-model-content"},r.default.createElement(t.Popup,h({self:t.self},e.props,{page:i})))}))))})),r.default.createElement(L,{show:this.state.showPopup.__global},this.__popupStack.__global&&this.__popupStack.__global.map((function(t,n){return t.self.overlay?r.default.createElement("div",{key:n,className:"rjs-react-nav-modal",style:{display:"block"},onClick:function(n){return e.handleClickOnModal(t.self)}},r.default.createElement("div",{onClick:function(e){return e.stopPropagation()}}," ",r.default.createElement(t.Popup,h({self:t.self},e.props,{page:e.__global}))," ")):r.default.createElement("div",{key:n,className:"rjs-react-nav-model-content"},r.default.createElement(t.Popup,h({self:t.self},e.props,{page:e.__global})))}))),r.default.createElement(R,{show:this.state.toasts.top.length>0,top:!0},this.state.toasts.top.map((function(e,t){var n=e.animateClosing?(0,l.default)("fade-out",e.animateClosing):{};return r.default.createElement("div",{key:t,style:n},r.default.createElement(e.Toast,{self:e.self}))}))),r.default.createElement(R,{show:this.state.toasts.bottom.length>0,bottom:!0},this.state.toasts.bottom.map((function(e,t){var n=e.animateClosing?(0,l.default)("fade-out",e.animateClosing):{};return r.default.createElement("div",{key:t,className:"rjs-react-nav-card-4",style:n},r.default.createElement(e.Toast,{self:e.self}))}))))}},{key:"__validateProps",value:function(e){if(e.noUrl&&!e.initialRoute)throw new Error("Error: Validate props failed: 'initialRoute' is required when 'noUrl' set to true");if(e.initialRoute&&!e.routes[e.initialRoute])throw new Error("Error: Validate props failed: 'initialRoute' is not listed in 'routes'");if(e.noUrl||e.fallbackRoute||console.warn("Warning: Validate props: Missing 'fallbackRoute'!"),e.fallbackRoute&&!e.routes[e.fallbackRoute])throw new Error("Error: Validate props failed: 'fallbackRoute' is not listed in 'routes'")}},{key:"__validateRoutes",value:function(e){for(var t in e){var n=e[t];if(!n.redirect&&!n.Page)throw new Error("Invalid route object: missing 'Page' in route '".concat(t,"'"));if(!this.props.noUrl&&!n.url)throw new Error("Invalid route object: missing 'url' in route '".concat(t,"'"))}}},{key:"__findInitialRouteName",value:function(){return this.props.noUrl?this.props.initialRoute:this.__findRouteNameFromURL()||this.props.fallbackRoute}},{key:"__findRouteNameFromURL",value:function(){if(!this.props.noUrl)for(var e in this.props.routes){var t=this.props.routes[e];if(t.url&&O.matchUrlPath(t.url))return t.redirect||e}}},{key:"__initRouteStack",value:function(){var e=this;return new Promise((function(t,n){e.__createInitRoute().then((function(n){var r=e.__loadRouteStackFromSessionStorage().filter((function(e){return!(0,i.isSameRoute)(e,n.name,n.params)}));r.unshift(n),t(r)})).catch((function(e){return n(e)}))}))}},{key:"__createInitRoute",value:function(){var e=this;return new Promise((function(t,n){var r=e.__findInitialRouteName(),a=e.props.routes[r],o=e.props.noUrl?void 0:O.extractUrlParams(a.url),l=O.buildUrlPath(a.url,o),u=(0,i.createRouteUid)(r,o),s=e.__createInjectPage(r,u);(0,i.isFunction)(a.data)?a.data({params:o,props:e.props}).then((function(n){a.resolve&&a.resolve(n),e.props.onChangeRoute&&e.props.onChangeRoute({name:r,url:l,params:o,data:n,options:a.options}),t({name:r,url:l,page:s,params:o,data:n,uid:u})})).catch((function(t){a.reject&&a.reject({err:t,nav:e.nav}),n(t)})):(e.props.onChangeRoute&&e.props.onChangeRoute({name:r,url:l,params:o,data:a.data,options:a.options}),t({name:r,url:l,page:s,params:o,data:a.data,uid:u}))}))}},{key:"__registerRoutes",value:function(e){for(var t in this.__validateRoutes(e),e){var n=e[t];this.__registeredRoutes[t]=n}this.__bindPageEvent(e)}},{key:"__createInjectPage",value:function(e,t,n){var r=this,a={on:function(n,a){-1!==r.__supportedPageEvents.indexOf(n)&&r.__events[e][n].push({uid:t,handler:a})},popup:function(t,n,a){return r.__createPopup(e,t,n,a)},deleteAllPopups:function(){return r.__deleteAllPopups(e)},data:n&&n.data||void 0};return this.__supportedPageEvents.forEach((function(e){return a["on".concat((0,i.capitalize)(e))]=function(t){return a.on(e,t)}})),a}},{key:"__bindPageEvent",value:function(e){var t=this,n=function(e){t.__events[e]={},t.__supportedPageEvents.forEach((function(n){return t.__events[e][n]=[]}))};for(var r in e)n(r)}},{key:"__fire",value:function(e,t,n){this.__events[e][n]?this.__events[e][n].forEach((function(e){return e.uid===t&&e.handler()})):console.error("event ".concat(n," is not supported"))}},{key:"navigate",value:function(e,t){var n=this;return new Promise((function(r,a){if(n.__registeredRoutes[e]){var o=t&&t.params||{};if(!(0,i.isSameRoute)(n.state.routeStack[0],e,o)){var l=n.__registeredRoutes[e];return(0,i.isFunction)(l.data)?l.data({params:o,props:n.props}).then((function(e){l.resolve&&l.resolve(e),u.bind(n)(e)})).catch((function(e){l.reject&&l.reject({err:e,nav:n.nav}),a(e)})):u.bind(n)(l.data)}r()}else a("Route ".concat(e," is not registered!"));function u(n){var r=this;return new Promise((function(a){r.__registeredRoutes[e].redirect&&(e=r.__registeredRoutes[e].redirect),r.state.routeStack[0]&&r.__fire(r.state.activeRouteName,r.state.routeStack[0].uid,"leave");var l=f(r.state.routeStack).filter((function(t){return!(0,i.isSameRoute)(t,e,o)})),u=O.buildUrlPath(r.__registeredRoutes[e].url,o),s=(0,i.createRouteUid)(e,o),c=r.__createInjectPage(e,s,t);l.unshift({name:e,url:u,page:c,data:n,params:o,uid:s});var d=e;if(r.__fire(d,s,"beforeEnter"),r.setState({routeStack:l,activeRouteName:d}),r.props.noUrl||t&&t.noUpdateUrl||!r.__registeredRoutes[e].url)return r.props.onChangeRoute&&r.props.onChangeRoute({name:e,url:u,params:o,data:n,options:r.__registeredRoutes[e].options}),void a();var p=(0,i.makeTitle)(r.__registeredRoutes[e].title,o,n);t&&t.reload?O.set(u,p):O.push(u,p),r.__saveRouteStackToSessionStorage(),r.props.onChangeRoute&&r.props.onChangeRoute({name:e,url:u,params:o,data:n,options:r.__registeredRoutes[e].options}),a()}))}}))}},{key:"__createPopup",value:function(e,t,n,r){var a=this;return new Promise((function(o,l){var u={};(0,i.isFunction)(n)?r=n:u=h({},n),u.resolve=function(t){return a.__popupResolve(e,t,u)},u.reject=function(t){return a.__popupReject(e,t,u)},a.__popupStack[e]||(a.__popupStack[e]=[]),a.__popupStack[e].push({Popup:t,self:u,resolve:o,reject:l});var s=h({},a.state.showPopup);s[e]=!0,a.setState({showPopup:s}),P.disable(),r&&r({resolve:u.resolve,reject:u.reject})}))}},{key:"__popupResolve",value:function(e,t,n){if(this.__popupStack[e]&&this.__popupStack[e].length>0){var r=this.__popupStack[e].findIndex((function(e){return e.self===n}));if(-1===r)return;var a=this.__popupStack[e].splice(r,1)[0].resolve,o=h({},this.state.showPopup);o[e]=0!=this.__popupStack[e].length,this.setState({showPopup:o}),a&&a(t),P.enable()}}},{key:"__popupReject",value:function(e,t,n){if(this.__popupStack[e]&&this.__popupStack[e].length>0){var r=this.__popupStack[e].findIndex((function(e){return e.self===n}));if(-1===r)return;var a=this.__popupStack[e].splice(r,1)[0].reject,o=h({},this.state.showPopup);o[e]=0!=this.__popupStack[e].length,this.setState({showPopup:o}),a&&a(t),P.enable()}}},{key:"__deleteAllPopups",value:function(e){if(this.__popupStack[e]&&this.__popupStack[e].length>0){delete this.__popupStack[e];var t=h({},this.state.showPopup);t[e]=!1,this.setState({showPopup:t})}}},{key:"__createToast",value:function(e,t,n){var r=this,a={};"[object Function]"==Object.prototype.toString.call(t)?n=t:a=h({},t),a.close=function(){return r.__animateCloseToast(a,t&&t.bottom?"bottom":"top")};var o=f(this.state.toasts.top),i=f(this.state.toasts.bottom);t&&t.bottom?i.unshift({Toast:e,self:a}):o.unshift({Toast:e,self:a});var l={top:o,bottom:i};this.setState({toasts:l}),n&&n(a)}},{key:"__animateCloseToast",value:function(e,t){var n=this;if("top"!==t.toLowerCase()&&"bottom"!==t.toLowerCase())throw new Error("Invalid toast position, it must be either top or bottom");if(this.state.toasts[t.toLowerCase()].length>1)this.__closeToast(e,t);else{var r={top:f(this.state.toasts.top),bottom:f(this.state.toasts.bottom)};r[t.toLowerCase()]=this.state.toasts[t.toLowerCase()].map((function(t){return t.self===e?{Toast:t.Toast,self:e,animateClosing:"0.4s"}:t})),this.setState({toasts:r}),setTimeout((function(){n.__closeToast(e,t)}),400)}}},{key:"__closeToast",value:function(e,t){var n={top:f(this.state.toasts.top),bottom:f(this.state.toasts.bottom)},r=n[t.toLowerCase()].findIndex((function(t){return t.self===e}));-1!==r&&(n[t.toLowerCase()].splice(r,1),this.setState({toasts:n}))}},{key:"__saveRouteStackToSessionStorage",value:function(){var e=this.state.routeStack.map((function(e){return{name:e.name,url:e.url,data:e.data,params:e.params,uid:e.uid,pageData:e.page.data||void 0}}));sessionStorage.setItem("__routestack_",JSON.stringify(e))}},{key:"__loadRouteStackFromSessionStorage",value:function(){var e=this,t=JSON.parse(sessionStorage.getItem("__routestack_"))||[];return t.forEach((function(t){t.page=e.__createInjectPage(t.name,t.uid,{data:t.pageData}),delete t.pageData})),t}},{key:"handleClickOnModal",value:function(e){e.onClickOverlay&&e.onClickOverlay(e)}}]),n}(r.Component);j.__rjsWidgetType="navigator";var T=j;t.default=T},906:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){var r={animationName:"rjs-react-nav-animate-".concat(e)};return t&&(r.animationDuration=t),n&&(r.animationDirection=n),r}},33:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=document.body.style.cssText||null;return{enable:function(){var t=document.body.style.top;document.body.style.cssText=e,window.scrollTo(0,-1*parseInt(t||"0"))},disable:function(){e=document.body.style.cssText,document.body.style.cssText="; overflow: hidden; position: fixed;  width: 100%; top: -".concat(window.scrollY,"px ")}}}},449:(e,t)=>{"use strict";function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.__handlers={hashChange:[],popState:[]},this.__defaultTitle=document.title,this.push=function(e,n,r){history.pushState(r,"",e),document.title=n||t.__defaultTitle},window.addEventListener("hashchange",(function(e){t.__handlers.hashChange.forEach((function(t){return t(e)}))}),!1),window.addEventListener("popstate",(function(e){t.__handlers.popState.forEach((function(t){return t(e)}))}),!1)}var t,r;return t=e,(r=[{key:"getPathName",value:function(){return this.__matchFromURL(3).replace(/#.*$/,"").split("?")[0]}},{key:"getUrl",value:function(){return this.__matchFromURL(0)}},{key:"getProtocol",value:function(){return this.__matchFromURL(1).replace(/:.*$/,"")}},{key:"getHost",value:function(){return this.__matchFromURL(2)}},{key:"__matchFromURL",value:function(e){return window.location.href.replace(/(\/)\1+/g,"/").replace(/:(?=\/)/,":/").match(/(http[s]?:\/\/)?([^\/\s]+\/)(.*)/)[e].replace(/\/$/,"")}},{key:"getQuery",value:function(){var e=window.location.href.split("?");if(e[1]){var t={};return e[1].split("&").forEach((function(e){var n=e.split("=");n[0]&&(t[n[0]]=n[1]&&n[1].replace(/#.*$/,"")||void 0)})),t}}},{key:"getBookmark",value:function(){return window.location.href.split("#")[1]||""}},{key:"set",value:function(e,t){location.href=e,document.title=t}},{key:"on",value:function(e,t){if("hashChange"!==e&&"popState"!==e)throw new Error("only accept hashChange and popState in href.on");this.__handlers[e].push(t)}},{key:"matchUrlPath",value:function(e){var t=this.getPathName().split("/").filter((function(e){return e.length>0})).map((function(e){return e.trim().toLowerCase()})),n=e.split("/").filter((function(e){return e.length>0})).map((function(e){return e.trim().toLowerCase()}));if(n.length!==t.length)return!1;for(var r=0;r<n.length;r++)if(!/^:/.test(n[r])&&n[r]!==t[r])return!1;return!0}},{key:"buildUrlPath",value:function(e,t){for(var n=e.split("/").filter((function(e){return e.length>0})).map((function(e){return e.trim().toLowerCase()})),r="",a=0;a<n.length;a++)if(/^:/.test(n[a])){var o=n[a].split(":").pop();if(!t||!t[o])throw new Error("Missing value for ".concat(n[a]," in ").concat(e));r+="/".concat(t[o])}else r+="/".concat(n[a]);return 0===r.length?"/":r}},{key:"extractUrlParams",value:function(e){for(var t=this.getPathName().split("/").filter((function(e){return e.length>0})),n=e.split("/").filter((function(e){return e.length>0})).map((function(e){return e.trim().toLowerCase()})),r={},a=0;a<n.length;a++)/^:/.test(n[a])&&(r[n[a].split(":").pop()]=t[a]);return r}},{key:"setDefaultTitle",value:function(e){this.__defaultTitle=e}}])&&n(t.prototype,r),e}();t.default=r},642:(e,t,n)=>{"use strict";Object.defineProperty(t,"C3",{enumerable:!0,get:function(){return r.default}}),Object.defineProperty(t,"$n",{enumerable:!0,get:function(){return a.default}});var r=o(n(693)),a=o(n(108));o(n(449));function o(e){return e&&e.__esModule?e:{default:e}}},108:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n={__isNavRegistered:!1,__popup:null,__route:null,register:function(e){if(this.__isNavRegistered)throw new Error("Only one Navigator can be registered!");this.__isNavRegistered=!0,this.__popup=function(t,n,r){return e.__createPopup("__global",t,n,r)},this.__nav=e.nav,this.__toast=function(t,n,r){return e.__createToast(t,n,r)}},destroy:function(){this.__isNavRegistered=!1,this.__popup=null,this.__nav=null,this.__toast=null},popup:function(e,t,n){return null===this.__popup?Promise.reject("Navigator is not mounted or has been destroyed"):this.__popup(e,t,n)},navigate:function(e,t){return null===this.__nav?Promise.reject("Navigator is not mounted or has been destroyed"):this.__nav.navigate(e,t)},toast:function(e,t,n){return null===this.__toast?Promise.reject("Navigator is not mounted or has been destroyed"):this.__toast(e,t,n)}};t.default=n},858:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.appendStyle=function(){if(!document.getElementById("__rjs-react-nav-style")){var e=document.getElementsByTagName("head")[0],t=document.createElement("style");t.setAttribute("type","text/css"),t.setAttribute("id","__rjs-react-nav-style"),t.appendChild(document.createTextNode("\n.rjs-react-nav-modal{z-index:3;display:none;padding-top:100px;position:fixed;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:rgb(0,0,0);background-color:rgba(0,0,0,0.4)}\n.rjs-react-nav-modal-content{margin:auto;background-color:#fff;position:relative;padding:0;outline:0;width:600px}\n.rjs-react-nav-card-4,.w3-hover-shadow:hover{box-shadow:0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)}\n")),t.appendChild(document.createTextNode("\n@keyframes rjs-react-nav-animate-float-top {from{top:-300px;opacity:0} to{top:0;opacity:1}}\n@keyframes rjs-react-nav-animate-float-bottom {from{bottom:-300px;opacity:0} to{bottom:0;opacity:1}}\n@keyframes rjs-react-nav-animate-fade-in { from{opacity:0;} to{opacity:1;}}\n@keyframes rjs-react-nav-animate-fade-out { from{opacity:1;} to{opacity:0;}}\n")),e.appendChild(t)}}},393:(e,t)=>{"use strict";function n(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(var n in e)if(e[n]!==t[n])return!1;return!0}function r(e,t){var n="param"===t?e.match(/\{:(\w+)\}/g):e.match(/\{\{(.+)\}\}/g);return n?n.map((function(e){return e.replace(/\{|:|\}/g,"")})):[]}function a(e,t){var n=t.split("."),r=e[n[0]];return 1===n.length?r:a(r,t.replace(/^\w*\./,""))}Object.defineProperty(t,"__esModule",{value:!0}),t.capitalize=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},t.isFunction=function(e){return e&&"[object Function]"==={}.toString.call(e)},t.isSameRoute=function(e,t,r){return!!e&&(e.name===t&&(void 0===e.params&&void 0===r||!(!e.params||!r||!0!==n(e.params,r))))},t.compareObject=n,t.createRouteUid=function(e,t){for(var n="".concat(e,"_"),r=Object.keys(t).sort((function(e,t){return e.firstname.localeCompare(t.firstname)})),a=0;a<r.length;a++)n+="".concat(t[r[a]],"*");return n},t.makeTitle=function(e,t,n){if(e){if(!t&&!n)return e;var o=e;return t&&r(e,"param").forEach((function(e){o=o.replace(new RegExp("{:".concat(e,"}")),t[e])})),n&&r(e,"data").forEach((function(e){o=o.replace(new RegExp("{{".concat(e,"}}")),a(n,e))})),o}}},395:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==o(e)&&"function"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var l=r?Object.getOwnPropertyDescriptor(e,i):null;l&&(l.get||l.set)?Object.defineProperty(n,i,l):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}(n(277));function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var s=function(e){function t(e){var n,r,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=this,a=l(t).call(this,e),n=!a||"object"!==o(a)&&"function"!=typeof a?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(r):a).state={user:null},n}var n,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(t,e),n=t,(a=[{key:"componentDidMount",value:function(){var e=this;"undefined"!=typeof window?(this.props.accountClient&&(this.props.accountClient.on("updated",(function(t){return e.setState({user:t})})),this.props.accountClient.on("authenticated",(function(t){return e.setState({user:t})})),this.props.accountClient.on("unauthenticated",(function(){return e.setState({user:void 0})}))),this.props.accountClient.get("user")&&this.setState({user:this.props.accountClient.get("user")})):this.props.user&&this.setState({user:this.props.user})}},{key:"render",value:function(){return r.default.createElement("div",null,this.passUserToChildrenProps())}},{key:"passUserToChildrenProps",value:function(){var e=this;return r.default.Children.map(this.props.children,(function(t){return r.default.cloneElement(t,{user:e.state.user,accountClient:e.props.accountClient})}))}}])&&i(n.prototype,a),t}(r.Component);t.default=s},472:(e,t,n)=>{"use strict";Object.defineProperty(t,"d",{enumerable:!0,get:function(){return a.default}});var r,a=(r=n(395))&&r.__esModule?r:{default:r}},84:(e,t,n)=>{"use strict";var r=n(418),a="function"==typeof Symbol&&Symbol.for,o=a?Symbol.for("react.element"):60103,i=a?Symbol.for("react.portal"):60106,l=a?Symbol.for("react.fragment"):60107,u=a?Symbol.for("react.strict_mode"):60108,s=a?Symbol.for("react.profiler"):60114,c=a?Symbol.for("react.provider"):60109,f=a?Symbol.for("react.context"):60110,d=a?Symbol.for("react.forward_ref"):60112,p=a?Symbol.for("react.suspense"):60113,h=a?Symbol.for("react.memo"):60115,g=a?Symbol.for("react.lazy"):60116,m="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function k(){}function S(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var _=S.prototype=new k;_.constructor=S,r(_,w.prototype),_.isPureReactComponent=!0;var E={current:null},x=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,a={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)x.call(t,r)&&!C.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:E.current}}function O(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var N=/\/+/g,L=[];function R(e,t,n,r){if(L.length){var a=L.pop();return a.result=e,a.keyPrefix=t,a.func=n,a.context=r,a.count=0,a}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function j(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>L.length&&L.push(e)}function T(e,t,n,r){var a=typeof e;"undefined"!==a&&"boolean"!==a||(e=null);var l=!1;if(null===e)l=!0;else switch(a){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case o:case i:l=!0}}if(l)return n(r,e,""===t?"."+M(e,0):t),1;if(l=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var s=t+M(a=e[u],u);l+=T(a,s,n,r)}else if("function"==typeof(s=null===e||"object"!=typeof e?null:"function"==typeof(s=m&&e[m]||e["@@iterator"])?s:null))for(e=s.call(e),u=0;!(a=e.next()).done;)l+=T(a=a.value,s=t+M(a,u++),n,r);else if("object"===a)throw n=""+e,Error(v(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return l}function I(e,t,n){return null==e?0:T(e,"",t,n)}function M(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function z(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,a=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,(function(e){return e})):null!=e&&(O(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,a){var o="";null!=n&&(o=(""+n).replace(N,"$&/")+"/"),I(e,D,t=R(t,o,r,a)),j(t)}var A={current:null};function U(){var e=A.current;if(null===e)throw Error(v(321));return e}var V={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,z,t=R(null,null,t,n)),j(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return F(e,t,null,(function(e){return e})),t},only:function(e){if(!O(e))throw Error(v(143));return e}},t.Component=w,t.Fragment=l,t.Profiler=s,t.PureComponent=S,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=V,t.cloneElement=function(e,t,n){if(null==e)throw Error(v(267,e));var a=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=E.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)x.call(t,c)&&!C.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=O,t.lazy=function(e){return{$$typeof:g,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return U().useCallback(e,t)},t.useContext=function(e,t){return U().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return U().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return U().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return U().useLayoutEffect(e,t)},t.useMemo=function(e,t){return U().useMemo(e,t)},t.useReducer=function(e,t,n){return U().useReducer(e,t,n)},t.useRef=function(e){return U().useRef(e)},t.useState=function(e){return U().useState(e)},t.version="16.14.0"},277:(e,t,n)=>{"use strict";e.exports=n(84)},209:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(294);function a(e){return e.user?r.createElement("span",{className:"w3-large w3-bar-item w3-button w3-hover-none",style:{position:"relative",margin:"0px 8px"}},r.createElement("i",{className:"fas fa-shopping-cart ".concat("2".length>0?"w3-text-blue":"w3-text-light-blue")}),"2".length>0?r.createElement("label",{className:"w3-small w3-circle w3-red",style:{display:"inline-block",width:"19px",height:"19px",position:"absolute",top:"2px",left:"28px"}},"2"):null):null}},515:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(294),a=n(687);function o(e){var t=e.user,n=(0,a.$)().t;return t?r.createElement("button",{className:"w3-button w3-hover-none w3-large outline-none",onClick:function(){}}," ",n("header:Enrolled")," "):null}n(642)},737:(e,t,n)=>{"use strict";n.d(t,{Z:()=>f});var r=n(294),a=n(514),o=n(209),i=n(311),l=n(687),u=n(642);function s(e){var t=e.programs,n=(0,l.$)().t;return r.createElement("div",{className:"w3-tooltip w3-dropdown-hover",style:{background:"none"}},r.createElement("button",{className:"w3-button w3-hover-none w3-large ",style:{background:"none"}}," ",n("header:Courses")," "),r.createElement("span",{className:"w3-text"},r.createElement("i",{className:"fas fa-angle-down"})),r.createElement("div",{className:"w3-dropdown-content",style:{paddingTop:"20px",background:"none"}},r.createElement("div",{className:"w3-bar-block w3-sand w3-card"},t.map((function(e){return r.createElement("a",{key:e.id,className:"w3-bar-item w3-button",onClick:(t=e.id,function(e){e.preventDefault(),u.$n.navigate("browse",{params:{pid:t}})})}," ",e.title," ");var t})))))}var c=n(515);function f(e){var t=e.accountClient,n=e.user,l=e.programs,u=e.isScrollDown;return r.createElement("div",{className:"w3-white ".concat(u?"w3-card":"")},r.createElement("div",{className:"w3-container",style:{position:"relative",maxWidth:"1200px",margin:"auto"}},r.createElement("div",{className:"w3-bar"},r.createElement("a",{href:"/",className:"w3-bar-item w3-button w3-hover-none",style:{marginRight:"20px",marginTop:"2px"}}," ",r.createElement(a.Z,null)," "),r.createElement("div",{className:"w3-bar-item w3-bottombar w3-border-white w3-hover-border-gray"},r.createElement(s,{programs:l})),r.createElement("div",{className:"w3-bar-item w3-bottombar w3-border-white w3-hover-border-gray"},r.createElement(c.Z,{user:n})),r.createElement("div",{className:"w3-bar-item w3-right"},r.createElement(o.Z,{user:n}),r.createElement(i.Z,{accountClient:t,user:n})))))}},814:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var r=n(294),a=n(642),o=n(514),i=n(209),l=n(311),u=n(687);function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function c(e){var t,n,o=e.programs,i=e.onClick,l=(t=(0,r.useState)(!0),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=l[0],f=l[1],d=(0,u.$)().t;return r.createElement("div",{className:"w3-block outline-none",style:{background:"none"}},r.createElement("button",{className:"w3-bar-item w3-button w3-hover-none w3-large outline-none",onClick:function(){f(!c)}},d("header:Courses")," ",r.createElement("span",{className:"w3-text-gray",style:{marginLeft:"8px"}},r.createElement("i",{className:"fas fa-angle-".concat(c?"up":"down")}))),r.createElement("div",{className:"w3-bar-block w3-sand",style:{display:c?"block":"none"}},o.map((function(e){return r.createElement("a",{key:e.id,className:"w3-bar-item w3-button",style:{marginLeft:"8px"},onClick:(t=e.id,function(e){e.preventDefault(),a.$n.navigate("browse",{params:{pid:t}}),i&&i()})},e.title);var t}))))}var f=n(515);function d(e){var t=e.programs,n=e.user,a=e.self;return r.createElement("div",{className:"w3-sidebar w3-bar-block w3-animate-left w3-card",style:{top:0,width:"50%",minWidth:"250px"}},r.createElement("button",{className:"w3-bar-item w3-button w3-xxlarge w3-text-red",onClick:o},r.createElement("span",{className:"w3-right"}," × ")),r.createElement(c,{programs:t,onClick:o}),r.createElement(f.Z,{user:n}));function o(){a.resolve()}}function p(e){var t=e.accountClient,n=e.user,u=(e.programs,e.isScrollDown);return r.createElement("div",{className:"w3-white ".concat(u?"w3-card":""),style:{position:"relative",marginBottom:"32px"}},r.createElement("div",{className:"w3-bar"},r.createElement("button",{className:"w3-bar-item w3-button w3-hover-none w3-xlarge",style:{margin:"8px",padding:"8px 4px"},onClick:function(){a.$n.popup(d,{overlay:!0,onClickOverlay:function(e){return e.resolve()}})}},"☰"),r.createElement("a",{href:"/",className:"w3-bar-item w3-button w3-hover-none",style:{marginTop:"8px",padding:"8px 0"}},r.createElement(o.Z,null)),r.createElement("div",{className:"w3-bar-item w3-right",style:{padding:"12px 4px"}},r.createElement(i.Z,{user:n}),r.createElement(l.Z,{accountClient:t,user:n}))))}},514:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(294);function a(e){var t=e.imgurl;return r.createElement("span",{className:"w3-wide",style:{fontFamily:"Raleway",fontSize:"24px",fontWeight:"normal",position:"relative"}},r.createElement("span",{style:{color:"#f44336",fontWeight:"bold"}},"S"),r.createElement("span",{style:{color:"#0050EF"}},"tudi"),r.createElement("span",{style:{color:"#3A3A3A",marginRight:"0px"}},"ha"),r.createElement("img",{src:t||window._env_data.logoimgurl,width:"22px",style:{marginTop:"-10px"}}))}},311:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(294),a=n(687);function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function i(e){var t=e.accountClient,n=e.user;return n?r.createElement(u,{accountClient:t,user:n}):r.createElement(l,{accountClient:t})}function l(e){var t=e.accountClient,n=(0,a.$)().t;return r.createElement("button",{className:"w3-large w3-bar-item w3-button w3-border w3-border-gray w3-hover-blue w3-hover-border-white w3-round",style:{position:"relative",margin:"0px 8px"},onClick:function(){t.signin()}},n("header:Login"))}function u(e){var t,n,a=e.accountClient,i=e.user,l=(t=(0,r.useState)(!1),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=l[0],c=l[1];return r.createElement("div",{style:{textAlign:"center",display:"inline-block",marginTop:"4px",marginRight:"4px"}},r.createElement("button",{className:"w3-button w3-circle w3-blue w3-hover-card outline-none",style:{width:"30px",height:"30px",padding:"4px 0"},onClick:function(){c(!u)}},i.profile.displayName&&i.profile.displayName.charAt(0)||"U"),u?r.createElement(s,{accountClient:a,user:i}):null)}function s(e){var t=e.accountClient,n=e.user,o=(0,a.$)().t;return r.createElement("div",{className:"w3-card w3-sand w3-round",style:{position:"absolute",width:"250px",right:"10px",marginTop:"5px",zIndex:1}},r.createElement("p",{className:"text-bold"},n.profile.displayName||"Name"),r.createElement("p",null,r.createElement("button",{className:"w3-button w3-border w3-border-gray w3-round w3-white",onClick:function(){t.signout()}},r.createElement("i",{className:"fas fa-sign-out-alt"})," ",o("header:Signout"))))}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var i,l,u=a(e),s=1;s<arguments.length;s++){for(var c in i=Object(arguments[s]))n.call(i,c)&&(u[c]=i[c]);if(t){l=t(i);for(var f=0;f<l.length;f++)r.call(i,l[f])&&(u[l[f]]=i[l[f]])}}return u}},448:(e,t,n)=>{"use strict";var r=n(294),a=n(418),o=n(840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},g={};function m(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=v.hasOwnProperty(t)?v[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(g,e)||!p.call(h,e)&&(d.test(e)?g[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);v[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=60103,_=60106,E=60107,x=60108,C=60114,P=60109,O=60110,N=60112,L=60113,R=60120,j=60115,T=60116,I=60121,M=60128,z=60129,D=60130,F=60131;if("function"==typeof Symbol&&Symbol.for){var A=Symbol.for;S=A("react.element"),_=A("react.portal"),E=A("react.fragment"),x=A("react.strict_mode"),C=A("react.profiler"),P=A("react.provider"),O=A("react.context"),N=A("react.forward_ref"),L=A("react.suspense"),R=A("react.suspense_list"),j=A("react.memo"),T=A("react.lazy"),I=A("react.block"),A("react.scope"),M=A("react.opaque.id"),z=A("react.debug_trace_mode"),D=A("react.offscreen"),F=A("react.legacy_hidden")}var U,V="function"==typeof Symbol&&Symbol.iterator;function $(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=V&&e[V]||e["@@iterator"])?e:null}function B(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l])return"\n"+a[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?B(e):""}function q(e){switch(e.tag){case 5:return B(e.type);case 16:return B("Lazy");case 13:return B("Suspense");case 19:return B("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case E:return"Fragment";case _:return"Portal";case C:return"Profiler";case x:return"StrictMode";case L:return"Suspense";case R:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case j:return Q(e.type);case I:return Q(e._render);case T:t=e._payload,e=e._init;try{return Q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Z(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=Z(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function J(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Z(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function X(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function G(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function se(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,ge,me=(ge=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ge(e,t)}))}:ge);function ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ye).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var Se=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function _e(e,t){if(t){if(Se[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function Ee(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function xe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Pe=null,Oe=null;function Ne(e){if(e=Xr(e)){if("function"!=typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=ea(t),Ce(e.stateNode,e.type,t))}}function Le(e){Pe?Oe?Oe.push(e):Oe=[e]:Pe=e}function Re(){if(Pe){var e=Pe,t=Oe;if(Oe=Pe=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function je(e,t){return e(t)}function Te(e,t,n,r,a){return e(t,n,r,a)}function Ie(){}var Me=je,ze=!1,De=!1;function Fe(){null===Pe&&null===Oe||(Ie(),Re())}function Ae(e,t){var n=e.stateNode;if(null===n)return null;var r=ea(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var Ue=!1;if(f)try{var Ve={};Object.defineProperty(Ve,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",Ve,Ve),window.removeEventListener("test",Ve,Ve)}catch(ge){Ue=!1}function $e(e,t,n,r,a,o,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Be=!1,He=null,We=!1,qe=null,Qe={onError:function(e){Be=!0,He=e}};function Ke(e,t,n,r,a,o,i,l,u){Be=!1,He=null,$e.apply(Qe,arguments)}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Je(e){if(Ze(e)!==e)throw Error(i(188))}function Xe(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var Ge,et,tt,nt,rt=!1,at=[],ot=null,it=null,lt=null,ut=new Map,st=new Map,ct=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function pt(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":lt=null;break;case"pointerover":case"pointerout":ut.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function ht(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=dt(t,n,r,a,o),null!==t&&null!==(t=Xr(t))&&et(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function gt(e){var t=Jr(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void nt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){tt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function mt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Xr(n))&&et(t),e.blockedOn=n,!1;t.shift()}return!0}function vt(e,t,n){mt(e)&&n.delete(t)}function yt(){for(rt=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Xr(e.blockedOn))&&Ge(e);break}for(var t=e.targetContainers;0<t.length;){var n=Jt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==ot&&mt(ot)&&(ot=null),null!==it&&mt(it)&&(it=null),null!==lt&&mt(lt)&&(lt=null),ut.forEach(vt),st.forEach(vt)}function bt(e,t){e.blockedOn===t&&(e.blockedOn=null,rt||(rt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,yt)))}function wt(e){function t(t){return bt(t,e)}if(0<at.length){bt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ot&&bt(ot,e),null!==it&&bt(it,e),null!==lt&&bt(lt,e),ut.forEach(t),st.forEach(t),n=0;n<ct.length;n++)(r=ct[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ct.length&&null===(n=ct[0]).blockedOn;)gt(n),null===n.blockedOn&&ct.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var St={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},_t={},Et={};function xt(e){if(_t[e])return _t[e];if(!St[e])return e;var t,n=St[e];for(t in n)if(n.hasOwnProperty(t)&&t in Et)return _t[e]=n[t];return e}f&&(Et=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Ct=xt("animationend"),Pt=xt("animationiteration"),Ot=xt("animationstart"),Nt=xt("transitionend"),Lt=new Map,Rt=new Map,jt=["abort","abort",Ct,"animationEnd",Pt,"animationIteration",Ot,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Nt,"transitionEnd","waiting","waiting"];function Tt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Rt.set(r,t),Lt.set(r,a),s(a,[r])}}(0,o.unstable_now)();var It=8;function Mt(e){if(0!=(1&e))return It=15,1;if(0!=(2&e))return It=14,2;if(0!=(4&e))return It=13,4;var t=24&e;return 0!==t?(It=12,t):0!=(32&e)?(It=11,32):0!=(t=192&e)?(It=10,t):0!=(256&e)?(It=9,256):0!=(t=3584&e)?(It=8,t):0!=(4096&e)?(It=7,4096):0!=(t=4186112&e)?(It=6,t):0!=(t=62914560&e)?(It=5,t):67108864&e?(It=4,67108864):0!=(134217728&e)?(It=3,134217728):0!=(t=805306368&e)?(It=2,t):0!=(1073741824&e)?(It=1,1073741824):(It=8,e)}function zt(e,t){var n=e.pendingLanes;if(0===n)return It=0;var r=0,a=0,o=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==o)r=o,a=It=15;else if(0!=(o=134217727&n)){var u=o&~i;0!==u?(r=Mt(u),a=It):0!=(l&=o)&&(r=Mt(l),a=It)}else 0!=(o=n&~i)?(r=Mt(o),a=It):0!==l&&(r=Mt(l),a=It);if(0===r)return 0;if(r=n&((0>(r=31-$t(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(Mt(t),a<=It)return t;It=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-$t(t)),r|=e[n],t&=~a;return r}function Dt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ft(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=At(24&~t))?Ft(10,t):e;case 10:return 0===(e=At(192&~t))?Ft(8,t):e;case 8:return 0===(e=At(3584&~t))&&0===(e=At(4186112&~t))&&(e=512),e;case 2:return 0===(t=At(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function At(e){return e&-e}function Ut(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Vt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-$t(t)]=n}var $t=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Bt(e)/Ht|0)|0},Bt=Math.log,Ht=Math.LN2,Wt=o.unstable_UserBlockingPriority,qt=o.unstable_runWithPriority,Qt=!0;function Kt(e,t,n,r){ze||Ie();var a=Yt,o=ze;ze=!0;try{Te(a,e,t,n,r)}finally{(ze=o)||Fe()}}function Zt(e,t,n,r){qt(Wt,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){var a;if(Qt)if((a=0==(4&t))&&0<at.length&&-1<ft.indexOf(e))e=dt(null,e,t,n,r),at.push(e);else{var o=Jt(e,t,n,r);if(null===o)a&&pt(e,r);else{if(a){if(-1<ft.indexOf(e))return e=dt(o,e,t,n,r),void at.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return ot=ht(ot,e,t,n,r,a),!0;case"dragenter":return it=ht(it,e,t,n,r,a),!0;case"mouseover":return lt=ht(lt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return ut.set(o,ht(ut.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,st.set(o,ht(st.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;pt(e,r)}Lr(e,t,r,null,n)}}}function Jt(e,t,n,r){var a=xe(r);if(null!==(a=Jr(a))){var o=Ze(a);if(null===o)a=null;else{var i=o.tag;if(13===i){if(null!==(a=Ye(o)))return a;a=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Lr(e,t,r,a,n),null}var Xt=null,Gt=null,en=null;function tn(){if(en)return en;var e,t,n=Gt,r=n.length,a="value"in Xt?Xt.value:Xt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return en=a.slice(e,1<t?1-t:void 0)}function nn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function an(){return!1}function on(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rn:an,this.isPropagationStopped=an,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var ln,un,sn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=on(cn),dn=a({},cn,{view:0,detail:0}),pn=on(dn),hn=a({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:xn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(ln=e.screenX-sn.screenX,un=e.screenY-sn.screenY):un=ln=0,sn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:un}}),gn=on(hn),mn=on(a({},hn,{dataTransfer:0})),vn=on(a({},dn,{relatedTarget:0})),yn=on(a({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=on(a({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=on(a({},cn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},_n={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=_n[e])&&!!t[e]}function xn(){return En}var Cn=on(a({},dn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=nn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:xn,charCode:function(e){return"keypress"===e.type?nn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?nn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Pn=on(a({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=on(a({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:xn})),Nn=on(a({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=on(a({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Rn=[9,13,27,32],jn=f&&"CompositionEvent"in window,Tn=null;f&&"documentMode"in document&&(Tn=document.documentMode);var In=f&&"TextEvent"in window&&!Tn,Mn=f&&(!jn||Tn&&8<Tn&&11>=Tn),zn=String.fromCharCode(32),Dn=!1;function Fn(e,t){switch(e){case"keyup":return-1!==Rn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function An(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1,Vn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $n(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Vn[e.type]:"textarea"===t}function Bn(e,t,n,r){Le(r),0<(t=jr(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Hn=null,Wn=null;function qn(e){Er(e,0)}function Qn(e){if(J(Gr(e)))return e}function Kn(e,t){if("change"===e)return t}var Zn=!1;if(f){var Yn;if(f){var Jn="oninput"in document;if(!Jn){var Xn=document.createElement("div");Xn.setAttribute("oninput","return;"),Jn="function"==typeof Xn.oninput}Yn=Jn}else Yn=!1;Zn=Yn&&(!document.documentMode||9<document.documentMode)}function Gn(){Hn&&(Hn.detachEvent("onpropertychange",er),Wn=Hn=null)}function er(e){if("value"===e.propertyName&&Qn(Wn)){var t=[];if(Bn(t,Wn,e,xe(e)),e=qn,ze)e(t);else{ze=!0;try{je(e,t)}finally{ze=!1,Fe()}}}}function tr(e,t,n){"focusin"===e?(Gn(),Wn=n,(Hn=t).attachEvent("onpropertychange",er)):"focusout"===e&&Gn()}function nr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qn(Wn)}function rr(e,t){if("click"===e)return Qn(t)}function ar(e,t){if("input"===e||"change"===e)return Qn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function lr(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!or(e[n[r]],t[n[r]]))return!1;return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function cr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?cr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var pr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,gr=null,mr=null,vr=!1;function yr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==hr||hr!==X(r)||(r="selectionStart"in(r=hr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},mr&&lr(mr,r)||(mr=r,0<(r=jr(gr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}Tt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Tt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Tt(jt,2);for(var br="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wr=0;wr<br.length;wr++)Rt.set(br[wr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sr=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function _r(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,l,u,s){if(Ke.apply(this,arguments),Be){if(!Be)throw Error(i(198));var c=He;Be=!1,He=null,We||(We=!0,qe=c)}}(r,t,void 0,e),e.currentTarget=null}function Er(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;_r(a,l,s),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;_r(a,l,s),o=u}}}if(We)throw e=qe,We=!1,qe=null,e}function xr(e,t){var n=ta(t),r=e+"__bubble";n.has(r)||(Nr(t,e,2,!1),n.add(r))}var Cr="_reactListening"+Math.random().toString(36).slice(2);function Pr(e){e[Cr]||(e[Cr]=!0,l.forEach((function(t){Sr.has(t)||Or(t,!1,e,null),Or(t,!0,e,null)})))}function Or(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&Sr.has(e)){if("scroll"!==e)return;a|=2,o=r}var i=ta(o),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(a|=4),Nr(o,e,a,t),i.add(l))}function Nr(e,t,n,r){var a=Rt.get(t);switch(void 0===a?2:a){case 0:a=Kt;break;case 1:a=Zt;break;default:a=Yt}n=a.bind(null,t,n,e),a=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Lr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=Jr(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(De)return e();De=!0;try{Me(e,t,n)}finally{De=!1,Fe()}}((function(){var r=o,a=xe(n),i=[];e:{var l=Lt.get(e);if(void 0!==l){var u=fn,s=e;switch(e){case"keypress":if(0===nn(n))break e;case"keydown":case"keyup":u=Cn;break;case"focusin":s="focus",u=vn;break;case"focusout":s="blur",u=vn;break;case"beforeblur":case"afterblur":u=vn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=gn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=On;break;case Ct:case Pt:case Ot:u=yn;break;case Nt:u=Nn;break;case"scroll":u=pn;break;case"wheel":u=Ln;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Pn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var g=(p=h).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==d&&null!=(g=Ae(h,d))&&c.push(Rr(h,g,p))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,a),i.push({event:l,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Jr(s)&&!s[Zr])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Jr(s):null)&&(s!==(f=Ze(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=gn,g="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Pn,g="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:Gr(u),p=null==s?l:Gr(s),(l=new c(g,h+"leave",u,n,a)).target=f,l.relatedTarget=p,g=null,Jr(a)===r&&((c=new c(d,h+"enter",s,n,a)).target=p,c.relatedTarget=f,g=c),f=g,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Tr(p))h++;for(p=0,g=d;g;g=Tr(g))p++;for(;0<h-p;)c=Tr(c),h--;for(;0<p-h;)d=Tr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Tr(c),d=Tr(d)}c=null}else c=null;null!==u&&Ir(i,l,u,c,!1),null!==s&&null!==f&&Ir(i,f,s,c,!0)}if("select"===(u=(l=r?Gr(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var m=Kn;else if($n(l))if(Zn)m=ar;else{m=nr;var v=tr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(m=rr);switch(m&&(m=m(e,r))?Bn(i,m,n,a):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&ae(l,"number",l.value)),v=r?Gr(r):window,e){case"focusin":($n(v)||"true"===v.contentEditable)&&(hr=v,gr=r,mr=null);break;case"focusout":mr=gr=hr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,yr(i,n,a);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":yr(i,n,a)}var y;if(jn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Un?Fn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Mn&&"ko"!==n.locale&&(Un||"onCompositionStart"!==b?"onCompositionEnd"===b&&Un&&(y=tn()):(Gt="value"in(Xt=a)?Xt.value:Xt.textContent,Un=!0)),0<(v=jr(r,b)).length&&(b=new wn(b,e,null,n,a),i.push({event:b,listeners:v}),(y||null!==(y=An(n)))&&(b.data=y))),(y=In?function(e,t){switch(e){case"compositionend":return An(t);case"keypress":return 32!==t.which?null:(Dn=!0,zn);case"textInput":return(e=t.data)===zn&&Dn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!jn&&Fn(e,t)?(e=tn(),en=Gt=Xt=null,Un=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Mn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=jr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=y)}Er(i,t)}))}function Rr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function jr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Ae(e,n))&&r.unshift(Rr(e,o,a)),null!=(o=Ae(e,t))&&r.push(Rr(e,o,a))),e=e.return}return r}function Tr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ir(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,a?null!=(u=Ae(n,o))&&i.unshift(Rr(n,u,l)):a||null!=(u=Ae(n,o))&&i.push(Rr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Mr(){}var zr=null,Dr=null;function Fr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ar(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Ur="function"==typeof setTimeout?setTimeout:void 0,Vr="function"==typeof clearTimeout?clearTimeout:void 0;function $r(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Br(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Hr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Wr=0,qr=Math.random().toString(36).slice(2),Qr="__reactFiber$"+qr,Kr="__reactProps$"+qr,Zr="__reactContainer$"+qr,Yr="__reactEvents$"+qr;function Jr(e){var t=e[Qr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Zr]||n[Qr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Hr(e);null!==e;){if(n=e[Qr])return n;e=Hr(e)}return t}n=(e=n).parentNode}return null}function Xr(e){return!(e=e[Qr]||e[Zr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Gr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ea(e){return e[Kr]||null}function ta(e){var t=e[Yr];return void 0===t&&(t=e[Yr]=new Set),t}var na=[],ra=-1;function aa(e){return{current:e}}function oa(e){0>ra||(e.current=na[ra],na[ra]=null,ra--)}function ia(e,t){ra++,na[ra]=e.current,e.current=t}var la={},ua=aa(la),sa=aa(!1),ca=la;function fa(e,t){var n=e.type.contextTypes;if(!n)return la;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function da(e){return null!=e.childContextTypes}function pa(){oa(sa),oa(ua)}function ha(e,t,n){if(ua.current!==la)throw Error(i(168));ia(ua,t),ia(sa,n)}function ga(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(i(108,Q(t)||"Unknown",o));return a({},n,r)}function ma(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||la,ca=ua.current,ia(ua,e),ia(sa,sa.current),!0}function va(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ga(e,t,ca),r.__reactInternalMemoizedMergedChildContext=e,oa(sa),oa(ua),ia(ua,e)):oa(sa),ia(sa,n)}var ya=null,ba=null,wa=o.unstable_runWithPriority,ka=o.unstable_scheduleCallback,Sa=o.unstable_cancelCallback,_a=o.unstable_shouldYield,Ea=o.unstable_requestPaint,xa=o.unstable_now,Ca=o.unstable_getCurrentPriorityLevel,Pa=o.unstable_ImmediatePriority,Oa=o.unstable_UserBlockingPriority,Na=o.unstable_NormalPriority,La=o.unstable_LowPriority,Ra=o.unstable_IdlePriority,ja={},Ta=void 0!==Ea?Ea:function(){},Ia=null,Ma=null,za=!1,Da=xa(),Fa=1e4>Da?xa:function(){return xa()-Da};function Aa(){switch(Ca()){case Pa:return 99;case Oa:return 98;case Na:return 97;case La:return 96;case Ra:return 95;default:throw Error(i(332))}}function Ua(e){switch(e){case 99:return Pa;case 98:return Oa;case 97:return Na;case 96:return La;case 95:return Ra;default:throw Error(i(332))}}function Va(e,t){return e=Ua(e),wa(e,t)}function $a(e,t,n){return e=Ua(e),ka(e,t,n)}function Ba(){if(null!==Ma){var e=Ma;Ma=null,Sa(e)}Ha()}function Ha(){if(!za&&null!==Ia){za=!0;var e=0;try{var t=Ia;Va(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Ia=null}catch(t){throw null!==Ia&&(Ia=Ia.slice(e+1)),ka(Pa,Ba),t}finally{za=!1}}}var Wa=k.ReactCurrentBatchConfig;function qa(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Qa=aa(null),Ka=null,Za=null,Ya=null;function Ja(){Ya=Za=Ka=null}function Xa(e){var t=Qa.current;oa(Qa),e.type._context._currentValue=t}function Ga(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function eo(e,t){Ka=e,Ya=Za=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(ji=!0),e.firstContext=null)}function to(e,t){if(Ya!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ya=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Za){if(null===Ka)throw Error(i(308));Za=t,Ka.dependencies={lanes:0,firstContext:t,responders:null}}else Za=Za.next=t;return e._currentValue}var no=!1;function ro(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ao(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function io(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function lo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function uo(e,t,n,r){var o=e.updateQueue;no=!1;var i=o.firstBaseUpdate,l=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var s=u,c=s.next;s.next=null,null===l?i=c:l.next=c,l=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==i){for(d=o.baseState,l=0,f=c=s=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,g=i;switch(u=t,p=n,g.tag){case 1:if("function"==typeof(h=g.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=g.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:no=!0}}null!==i.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=o.shared.pending))break;i=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(s=d),o.baseState=s,o.firstBaseUpdate=c,o.lastBaseUpdate=f,Il|=l,e.lanes=l,e.memoizedState=d}}function so(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var co=(new r.Component).refs;function fo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var po={isMounted:function(e){return!!(e=e._reactInternals)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),o=oo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),io(e,o),lu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=iu(e),a=oo(n,r);a.tag=2,null!=t&&(a.callback=t),io(e,a),lu(e,r,n)}};function ho(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&lr(n,r)&&lr(a,o))}function go(e,t,n){var r=!1,a=la,o=t.contextType;return"object"==typeof o&&null!==o?o=to(o):(a=da(t)?ca:ua.current,o=(r=null!=(r=t.contextTypes))?fa(e,a):la),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=po,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function mo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&po.enqueueReplaceState(t,t.state,null)}function vo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=co,ro(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=to(o):(o=da(t)?ca:ua.current,a.context=fa(e,o)),uo(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(fo(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&po.enqueueReplaceState(a,a.state,null),uo(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var yo=Array.isArray;function bo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===co&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function wo(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ko(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Du(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Vu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=bo(e,t,n),r.return=e,r):((r=Fu(n.type,n.key,n.props,null,e.mode,r)).ref=bo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=$u(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Au(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Vu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case S:return(n=Fu(t.type,t.key,t.props,null,e.mode,n)).ref=bo(e,null,t),n.return=e,n;case _:return(t=$u(t,e.mode,n)).return=e,t}if(yo(t)||$(t))return(t=Au(t,e.mode,n,null)).return=e,t;wo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case S:return n.key===a?n.type===E?f(e,t,n.props.children,r,a):s(e,t,n,r):null;case _:return n.key===a?c(e,t,n,r):null}if(yo(n)||$(n))return null!==a?null:f(e,t,n,r,null);wo(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case S:return e=e.get(null===r.key?n:r.key)||null,r.type===E?f(t,e,r.props.children,a,r.key):s(t,e,r,a);case _:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(yo(r)||$(r))return f(t,e=e.get(n)||null,r,a,null);wo(t,r)}return null}function g(a,i,l,u){for(var s=null,c=null,f=i,g=i=0,m=null;null!==f&&g<l.length;g++){f.index>g?(m=f,f=null):m=f.sibling;var v=p(a,f,l[g],u);if(null===v){null===f&&(f=m);break}e&&f&&null===v.alternate&&t(a,f),i=o(v,i,g),null===c?s=v:c.sibling=v,c=v,f=m}if(g===l.length)return n(a,f),s;if(null===f){for(;g<l.length;g++)null!==(f=d(a,l[g],u))&&(i=o(f,i,g),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(a,f);g<l.length;g++)null!==(m=h(f,a,g,l[g],u))&&(e&&null!==m.alternate&&f.delete(null===m.key?g:m.key),i=o(m,i,g),null===c?s=m:c.sibling=m,c=m);return e&&f.forEach((function(e){return t(a,e)})),s}function m(a,l,u,s){var c=$(u);if("function"!=typeof c)throw Error(i(150));if(null==(u=c.call(u)))throw Error(i(151));for(var f=c=null,g=l,m=l=0,v=null,y=u.next();null!==g&&!y.done;m++,y=u.next()){g.index>m?(v=g,g=null):v=g.sibling;var b=p(a,g,y.value,s);if(null===b){null===g&&(g=v);break}e&&g&&null===b.alternate&&t(a,g),l=o(b,l,m),null===f?c=b:f.sibling=b,f=b,g=v}if(y.done)return n(a,g),c;if(null===g){for(;!y.done;m++,y=u.next())null!==(y=d(a,y.value,s))&&(l=o(y,l,m),null===f?c=y:f.sibling=y,f=y);return c}for(g=r(a,g);!y.done;m++,y=u.next())null!==(y=h(g,a,m,y.value,s))&&(e&&null!==y.alternate&&g.delete(null===y.key?m:y.key),l=o(y,l,m),null===f?c=y:f.sibling=y,f=y);return e&&g.forEach((function(e){return t(a,e)})),c}return function(e,r,o,u){var s="object"==typeof o&&null!==o&&o.type===E&&null===o.key;s&&(o=o.props.children);var c="object"==typeof o&&null!==o;if(c)switch(o.$$typeof){case S:e:{for(c=o.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(o.type===E){n(e,s.sibling),(r=a(s,o.props.children)).return=e,e=r;break e}break;default:if(s.elementType===o.type){n(e,s.sibling),(r=a(s,o.props)).ref=bo(e,s,o),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}o.type===E?((r=Au(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Fu(o.type,o.key,o.props,null,e.mode,u)).ref=bo(e,r,o),u.return=e,e=u)}return l(e);case _:e:{for(s=o.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=$u(o,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Vu(o,e.mode,u)).return=e,e=r),l(e);if(yo(o))return g(e,r,o,u);if($(o))return m(e,r,o,u);if(c&&wo(e,o),void 0===o&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,Q(e.type)||"Component"))}return n(e,r)}}var So=ko(!0),_o=ko(!1),Eo={},xo=aa(Eo),Co=aa(Eo),Po=aa(Eo);function Oo(e){if(e===Eo)throw Error(i(174));return e}function No(e,t){switch(ia(Po,t),ia(Co,e),ia(xo,Eo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(xo),ia(xo,t)}function Lo(){oa(xo),oa(Co),oa(Po)}function Ro(e){Oo(Po.current);var t=Oo(xo.current),n=pe(t,e.type);t!==n&&(ia(Co,e),ia(xo,n))}function jo(e){Co.current===e&&(oa(xo),oa(Co))}var To=aa(0);function Io(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Mo=null,zo=null,Do=!1;function Fo(e,t){var n=Mu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ao(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Uo(e){if(Do){var t=zo;if(t){var n=t;if(!Ao(e,t)){if(!(t=Br(n.nextSibling))||!Ao(e,t))return e.flags=-1025&e.flags|2,Do=!1,void(Mo=e);Fo(Mo,n)}Mo=e,zo=Br(t.firstChild)}else e.flags=-1025&e.flags|2,Do=!1,Mo=e}}function Vo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Mo=e}function $o(e){if(e!==Mo)return!1;if(!Do)return Vo(e),Do=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ar(t,e.memoizedProps))for(t=zo;t;)Fo(e,t),t=Br(t.nextSibling);if(Vo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){zo=Br(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}zo=null}}else zo=Mo?Br(e.stateNode.nextSibling):null;return!0}function Bo(){zo=Mo=null,Do=!1}var Ho=[];function Wo(){for(var e=0;e<Ho.length;e++)Ho[e]._workInProgressVersionPrimary=null;Ho.length=0}var qo=k.ReactCurrentDispatcher,Qo=k.ReactCurrentBatchConfig,Ko=0,Zo=null,Yo=null,Jo=null,Xo=!1,Go=!1;function ei(){throw Error(i(321))}function ti(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function ni(e,t,n,r,a,o){if(Ko=o,Zo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qo.current=null===e||null===e.memoizedState?Oi:Ni,e=n(r,a),Go){o=0;do{if(Go=!1,!(25>o))throw Error(i(301));o+=1,Jo=Yo=null,t.updateQueue=null,qo.current=Li,e=n(r,a)}while(Go)}if(qo.current=Pi,t=null!==Yo&&null!==Yo.next,Ko=0,Jo=Yo=Zo=null,Xo=!1,t)throw Error(i(300));return e}function ri(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Jo?Zo.memoizedState=Jo=e:Jo=Jo.next=e,Jo}function ai(){if(null===Yo){var e=Zo.alternate;e=null!==e?e.memoizedState:null}else e=Yo.next;var t=null===Jo?Zo.memoizedState:Jo.next;if(null!==t)Jo=t,Yo=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Yo=e).memoizedState,baseState:Yo.baseState,baseQueue:Yo.baseQueue,queue:Yo.queue,next:null},null===Jo?Zo.memoizedState=Jo=e:Jo=Jo.next=e}return Jo}function oi(e,t){return"function"==typeof t?t(e):t}function ii(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Yo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=o=null,s=a;do{var c=s.lane;if((Ko&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=f,o=r):u=u.next=f,Zo.lanes|=c,Il|=c}s=s.next}while(null!==s&&s!==a);null===u?o=r:u.next=l,or(r,t.memoizedState)||(ji=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function li(e){var t=ai(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);or(o,t.memoizedState)||(ji=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ui(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Ko&e)===e)&&(t._workInProgressVersionPrimary=r,Ho.push(t))),e)return n(t._source);throw Ho.push(t),Error(i(350))}function si(e,t,n,r){var a=Cl;if(null===a)throw Error(i(349));var o=t._getVersion,l=o(t._source),u=qo.current,s=u.useState((function(){return ui(a,t,n)})),c=s[1],f=s[0];s=Jo;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,g=d.source;d=d.subscribe;var m=Zo;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=o(t._source);if(!or(l,e)){e=n(t._source),or(f,e)||(c(e),e=iu(m),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,i=e;0<i;){var u=31-$t(i),s=1<<u;r[u]|=e,i&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(m);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),or(h,n)&&or(g,t)&&or(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:f}).dispatch=c=Ci.bind(null,Zo,e),s.queue=e,s.baseQueue=null,f=ui(a,t,n),s.memoizedState=s.baseState=f),f}function ci(e,t,n){return si(ai(),e,t,n)}function fi(e){var t=ri();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:oi,lastRenderedState:e}).dispatch=Ci.bind(null,Zo,e),[t.memoizedState,e]}function di(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Zo.updateQueue)?(t={lastEffect:null},Zo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function pi(e){return e={current:e},ri().memoizedState=e}function hi(){return ai().memoizedState}function gi(e,t,n,r){var a=ri();Zo.flags|=e,a.memoizedState=di(1|t,n,void 0,void 0===r?null:r)}function mi(e,t,n,r){var a=ai();r=void 0===r?null:r;var o=void 0;if(null!==Yo){var i=Yo.memoizedState;if(o=i.destroy,null!==r&&ti(r,i.deps))return void di(t,n,o,r)}Zo.flags|=e,a.memoizedState=di(1|t,n,o,r)}function vi(e,t){return gi(516,4,e,t)}function yi(e,t){return mi(516,4,e,t)}function bi(e,t){return mi(4,2,e,t)}function wi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ki(e,t,n){return n=null!=n?n.concat([e]):null,mi(4,2,wi.bind(null,t,e),n)}function Si(){}function _i(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ei(e,t){var n=ai();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ti(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function xi(e,t){var n=Aa();Va(98>n?98:n,(function(){e(!0)})),Va(97<n?97:n,(function(){var n=Qo.transition;Qo.transition=1;try{e(!1),t()}finally{Qo.transition=n}}))}function Ci(e,t,n){var r=ou(),a=iu(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Zo||null!==i&&i===Zo)Go=Xo=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,n);if(o.eagerReducer=i,o.eagerState=u,or(u,l))return}catch(e){}lu(e,a,r)}}var Pi={readContext:to,useCallback:ei,useContext:ei,useEffect:ei,useImperativeHandle:ei,useLayoutEffect:ei,useMemo:ei,useReducer:ei,useRef:ei,useState:ei,useDebugValue:ei,useDeferredValue:ei,useTransition:ei,useMutableSource:ei,useOpaqueIdentifier:ei,unstable_isNewReconciler:!1},Oi={readContext:to,useCallback:function(e,t){return ri().memoizedState=[e,void 0===t?null:t],e},useContext:to,useEffect:vi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,gi(4,2,wi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return gi(4,2,e,t)},useMemo:function(e,t){var n=ri();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ri();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ci.bind(null,Zo,e),[r.memoizedState,e]},useRef:pi,useState:fi,useDebugValue:Si,useDeferredValue:function(e){var t=fi(e),n=t[0],r=t[1];return vi((function(){var t=Qo.transition;Qo.transition=1;try{r(e)}finally{Qo.transition=t}}),[e]),n},useTransition:function(){var e=fi(!1),t=e[0];return pi(e=xi.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ri();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},si(r,e,t,n)},useOpaqueIdentifier:function(){if(Do){var e=!1,t=function(e){return{$$typeof:M,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Wr++).toString(36))),Error(i(355))})),n=fi(t)[1];return 0==(2&Zo.mode)&&(Zo.flags|=516,di(5,(function(){n("r:"+(Wr++).toString(36))}),void 0,null)),t}return fi(t="r:"+(Wr++).toString(36)),t},unstable_isNewReconciler:!1},Ni={readContext:to,useCallback:_i,useContext:to,useEffect:yi,useImperativeHandle:ki,useLayoutEffect:bi,useMemo:Ei,useReducer:ii,useRef:hi,useState:function(){return ii(oi)},useDebugValue:Si,useDeferredValue:function(e){var t=ii(oi),n=t[0],r=t[1];return yi((function(){var t=Qo.transition;Qo.transition=1;try{r(e)}finally{Qo.transition=t}}),[e]),n},useTransition:function(){var e=ii(oi)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return ii(oi)[0]},unstable_isNewReconciler:!1},Li={readContext:to,useCallback:_i,useContext:to,useEffect:yi,useImperativeHandle:ki,useLayoutEffect:bi,useMemo:Ei,useReducer:li,useRef:hi,useState:function(){return li(oi)},useDebugValue:Si,useDeferredValue:function(e){var t=li(oi),n=t[0],r=t[1];return yi((function(){var t=Qo.transition;Qo.transition=1;try{r(e)}finally{Qo.transition=t}}),[e]),n},useTransition:function(){var e=li(oi)[0];return[hi().current,e]},useMutableSource:ci,useOpaqueIdentifier:function(){return li(oi)[0]},unstable_isNewReconciler:!1},Ri=k.ReactCurrentOwner,ji=!1;function Ti(e,t,n,r){t.child=null===e?_o(t,null,n,r):So(t,e.child,n,r)}function Ii(e,t,n,r,a){n=n.render;var o=t.ref;return eo(t,a),r=ni(e,t,n,r,o,a),null===e||ji?(t.flags|=1,Ti(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Xi(e,t,a))}function Mi(e,t,n,r,a,o){if(null===e){var i=n.type;return"function"!=typeof i||zu(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fu(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,zi(e,t,i,r,a,o))}return i=e.child,0==(a&o)&&(a=i.memoizedProps,(n=null!==(n=n.compare)?n:lr)(a,r)&&e.ref===t.ref)?Xi(e,t,o):(t.flags|=1,(e=Du(i,r)).ref=t.ref,e.return=t,t.child=e)}function zi(e,t,n,r,a,o){if(null!==e&&lr(e.memoizedProps,r)&&e.ref===t.ref){if(ji=!1,0==(o&a))return t.lanes=e.lanes,Xi(e,t,o);0!=(16384&e.flags)&&(ji=!0)}return Ai(e,t,n,r,o)}function Di(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},pu(0,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},pu(0,e),null;t.memoizedState={baseLanes:0},pu(0,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,pu(0,r);return Ti(e,t,a,n),t.child}function Fi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Ai(e,t,n,r,a){var o=da(n)?ca:ua.current;return o=fa(t,o),eo(t,a),n=ni(e,t,n,r,o,a),null===e||ji?(t.flags|=1,Ti(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Xi(e,t,a))}function Ui(e,t,n,r,a){if(da(n)){var o=!0;ma(t)}else o=!1;if(eo(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),go(t,n,r),vo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;s="object"==typeof s&&null!==s?to(s):fa(t,s=da(n)?ca:ua.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&mo(t,i,r,s),no=!1;var d=t.memoizedState;i.state=d,uo(t,r,i,a),u=t.memoizedState,l!==r||d!==u||sa.current||no?("function"==typeof c&&(fo(t,n,c,r),u=t.memoizedState),(l=no||ho(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ao(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:qa(t.type,l),i.props=s,f=t.pendingProps,d=i.context,u="object"==typeof(u=n.contextType)&&null!==u?to(u):fa(t,u=da(n)?ca:ua.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&mo(t,i,r,u),no=!1,d=t.memoizedState,i.state=d,uo(t,r,i,a);var h=t.memoizedState;l!==f||d!==h||sa.current||no?("function"==typeof p&&(fo(t,n,p,r),h=t.memoizedState),(s=no||ho(t,n,s,r,d,h,u))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=u,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Vi(e,t,n,r,o,a)}function Vi(e,t,n,r,a,o){Fi(e,t);var i=0!=(64&t.flags);if(!r&&!i)return a&&va(t,n,!1),Xi(e,t,o);r=t.stateNode,Ri.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=So(t,e.child,null,o),t.child=So(t,null,l,o)):Ti(e,t,l,o),t.memoizedState=r.state,a&&va(t,n,!0),t.child}function $i(e){var t=e.stateNode;t.pendingContext?ha(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ha(0,t.context,!1),No(e,t.containerInfo)}var Bi,Hi,Wi,qi={dehydrated:null,retryLane:0};function Qi(e,t,n){var r,a=t.pendingProps,o=To.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),ia(To,1&o),null===e?(void 0!==a.fallback&&Uo(t),e=a.children,o=a.fallback,i?(e=Ki(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qi,e):"number"==typeof a.unstable_expectedLoadTime?(e=Ki(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qi,t.lanes=33554432,e):((n=Uu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(a=function(e,t,n,r,a){var o=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:n};return 0==(2&o)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Du(i,l),null!==e?r=Du(e,r):(r=Au(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),i=t.child,o=e.child.memoizedState,i.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=qi,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Du(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Ki(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=Uu(t,a,0,null),n=Au(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Zi(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Ga(e.return,t)}function Yi(e,t,n,r,a,o){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=a,i.lastEffect=o)}function Ji(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Ti(e,t,r.children,n),0!=(2&(r=To.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zi(e,n);else if(19===e.tag)Zi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ia(To,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Io(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Yi(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Io(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Yi(t,!0,n,null,o,t.lastEffect);break;case"together":Yi(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Xi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Il|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Du(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Du(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function Gi(e,t){if(!Do)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function el(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return da(t.type)&&pa(),null;case 3:return Lo(),oa(sa),oa(ua),Wo(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||($o(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:jo(t);var o=Oo(Po.current);if(n=t.type,null!==e&&null!=t.stateNode)Hi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=Oo(xo.current),$o(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Qr]=t,r[Kr]=l,n){case"dialog":xr("cancel",r),xr("close",r);break;case"iframe":case"object":case"embed":xr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)xr(kr[e],r);break;case"source":xr("error",r);break;case"img":case"image":case"link":xr("error",r),xr("load",r);break;case"details":xr("toggle",r);break;case"input":ee(r,l),xr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},xr("invalid",r);break;case"textarea":ue(r,l),xr("invalid",r)}for(var s in _e(n,l),e=null,l)l.hasOwnProperty(s)&&(o=l[s],"children"===s?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(s)&&null!=o&&"onScroll"===s&&xr("scroll",r));switch(n){case"input":Y(r),re(r,l,!0);break;case"textarea":Y(r),ce(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Mr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Qr]=t,e[Kr]=r,Bi(e,t),t.stateNode=e,s=Ee(n,r),n){case"dialog":xr("cancel",e),xr("close",e),o=r;break;case"iframe":case"object":case"embed":xr("load",e),o=r;break;case"video":case"audio":for(o=0;o<kr.length;o++)xr(kr[o],e);o=r;break;case"source":xr("error",e),o=r;break;case"img":case"image":case"link":xr("error",e),xr("load",e),o=r;break;case"details":xr("toggle",e),o=r;break;case"input":ee(e,r),o=G(e,r),xr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),xr("invalid",e);break;case"textarea":ue(e,r),o=le(e,r),xr("invalid",e);break;default:o=r}_e(n,o);var c=o;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&me(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ve(e,f):"number"==typeof f&&ve(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&xr("scroll",e):null!=f&&w(e,l,f,s))}switch(n){case"input":Y(e),re(e,r,!1);break;case"textarea":Y(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Mr)}Fr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Wi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=Oo(Po.current),Oo(xo.current),$o(t)?(r=t.stateNode,n=t.memoizedProps,r[Qr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Qr]=t,t.stateNode=r)}return null;case 13:return oa(To),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&$o(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&To.current)?0===Rl&&(Rl=3):(0!==Rl&&3!==Rl||(Rl=4),null===Cl||0==(134217727&Il)&&0==(134217727&Ml)||fu(Cl,Ol))),(r||n)&&(t.flags|=4),null);case 4:return Lo(),null===e&&Pr(t.stateNode.containerInfo),null;case 10:return Xa(t),null;case 17:return da(t.type)&&pa(),null;case 19:if(oa(To),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)Gi(r,!1);else{if(0!==Rl||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Io(e))){for(t.flags|=64,Gi(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ia(To,1&To.current|2),t.child}e=e.sibling}null!==r.tail&&Fa()>Al&&(t.flags|=64,l=!0,Gi(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Io(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Gi(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Do)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Fa()-r.renderingStartTime>Al&&1073741824!==n&&(t.flags|=64,l=!0,Gi(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Fa(),n.sibling=null,t=To.current,ia(To,l?1&t|2:1&t),n):null;case 23:case 24:return hu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function tl(e){switch(e.tag){case 1:da(e.type)&&pa();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Lo(),oa(sa),oa(ua),Wo(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return jo(e),null;case 13:return oa(To),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa(To),null;case 4:return Lo(),null;case 10:return Xa(e),null;case 23:case 24:return hu(),null;default:return null}}function nl(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function rl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Bi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Hi=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,Oo(xo.current);var i,l=null;switch(n){case"input":o=G(e,o),r=G(e,r),l=[];break;case"option":o=oe(e,o),r=oe(e,r),l=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),l=[];break;case"textarea":o=le(e,o),r=le(e,r),l=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Mr)}for(f in _e(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var s=o[f];for(i in s)s.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var c=r[f];if(s=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(i in s)!s.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&s[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(l||(l=[]),l.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&xr("scroll",e),l||s===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===M?c.toString():(l=l||[]).push(f,c))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Wi=function(e,t,n,r){n!==r&&(t.flags|=4)};var al="function"==typeof WeakMap?WeakMap:Map;function ol(e,t,n){(n=oo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Bl||(Bl=!0,Hl=r),rl(0,t)},n}function il(e,t,n){(n=oo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return rl(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Wl?Wl=new Set([this]):Wl.add(this),rl(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ll="function"==typeof WeakSet?WeakSet:Set;function ul(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ru(e,t)}else t.current=null}function sl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&$r(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function cl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Ou(n,e),Pu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:qa(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&so(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}so(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Fr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function fl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function dl(e,t){if(ba&&"function"==typeof ba.onCommitFiberUnmount)try{ba.onCommitFiberUnmount(ya,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Ou(t,n);else{r=t;try{a()}catch(e){Ru(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ul(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ru(t,e)}break;case 5:ul(t);break;case 4:yl(e,t)}}function pl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hl(e){return 5===e.tag||3===e.tag||4===e.tag}function gl(e){e:{for(var t=e.return;null!==t;){if(hl(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ve(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?ml(e,n,t):vl(e,n,t)}function ml(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Mr));else if(4!==r&&null!==(e=e.child))for(ml(e,t,n),e=e.sibling;null!==e;)ml(e,t,n),e=e.sibling}function vl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(vl(e,t,n),e=e.sibling;null!==e;)vl(e,t,n),e=e.sibling}function yl(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(i(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,s=u;;)if(dl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(dl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function bl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Kr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Ee(e,a),t=Ee(e,r),a=0;a<o.length;a+=2){var l=o[a],u=o[a+1];"style"===l?ke(n,u):"dangerouslySetInnerHTML"===l?me(n,u):"children"===l?ve(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?ie(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Fl=Fa(),fl(t.child,!0)),void wl(t);case 19:return void wl(t);case 17:return;case 23:case 24:return void fl(t,null!==t.memoizedState)}throw Error(i(163))}function wl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ll),t.forEach((function(t){var r=Tu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function kl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Sl=Math.ceil,_l=k.ReactCurrentDispatcher,El=k.ReactCurrentOwner,xl=0,Cl=null,Pl=null,Ol=0,Nl=0,Ll=aa(0),Rl=0,jl=null,Tl=0,Il=0,Ml=0,zl=0,Dl=null,Fl=0,Al=1/0;function Ul(){Al=Fa()+500}var Vl,$l=null,Bl=!1,Hl=null,Wl=null,ql=!1,Ql=null,Kl=90,Zl=[],Yl=[],Jl=null,Xl=0,Gl=null,eu=-1,tu=0,nu=0,ru=null,au=!1;function ou(){return 0!=(48&xl)?Fa():-1!==eu?eu:eu=Fa()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Aa()?1:2;if(0===tu&&(tu=Tl),0!==Wa.transition){0!==nu&&(nu=null!==Dl?Dl.pendingLanes:0),e=tu;var t=4186112&~nu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Aa(),e=Ft(0!=(4&xl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),tu)}function lu(e,t,n){if(50<Xl)throw Xl=0,Gl=null,Error(i(185));if(null===(e=uu(e,t)))return null;Vt(e,t,n),e===Cl&&(Ml|=t,4===Rl&&fu(e,Ol));var r=Aa();1===t?0!=(8&xl)&&0==(48&xl)?du(e):(su(e,n),0===xl&&(Ul(),Ba())):(0==(4&xl)||98!==r&&99!==r||(null===Jl?Jl=new Set([e]):Jl.add(e)),su(e,n)),Dl=e}function uu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-$t(l),s=1<<u,c=o[u];if(-1===c){if(0==(s&r)||0!=(s&a)){c=t,Mt(s);var f=It;o[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);l&=~s}if(r=zt(e,e===Cl?Ol:0),t=It,0===r)null!==n&&(n!==ja&&Sa(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==ja&&Sa(n)}15===t?(n=du.bind(null,e),null===Ia?(Ia=[n],Ma=ka(Pa,Ha)):Ia.push(n),n=ja):n=14===t?$a(99,du.bind(null,e)):$a(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),cu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function cu(e){if(eu=-1,nu=tu=0,0!=(48&xl))throw Error(i(327));var t=e.callbackNode;if(Cu()&&e.callbackNode!==t)return null;var n=zt(e,e===Cl?Ol:0);if(0===n)return null;var r=n,a=xl;xl|=16;var o=vu();for(Cl===e&&Ol===r||(Ul(),gu(e,r));;)try{wu();break}catch(t){mu(e,t)}if(Ja(),_l.current=o,xl=a,null!==Pl?r=0:(Cl=null,Ol=0,r=Rl),0!=(Tl&Ml))gu(e,0);else if(0!==r){if(2===r&&(xl|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(n=Dt(e))&&(r=yu(e,n))),1===r)throw t=jl,gu(e,0),fu(e,n),su(e,Fa()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:_u(e);break;case 3:if(fu(e,n),(62914560&n)===n&&10<(r=Fl+500-Fa())){if(0!==zt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Ur(_u.bind(null,e),r);break}_u(e);break;case 4:if(fu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var l=31-$t(n);o=1<<l,(l=r[l])>a&&(a=l),n&=~o}if(n=a,10<(n=(120>(n=Fa()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Sl(n/1960))-n)){e.timeoutHandle=Ur(_u.bind(null,e),n);break}_u(e);break;case 5:_u(e);break;default:throw Error(i(329))}}return su(e,Fa()),e.callbackNode===t?cu.bind(null,e):null}function fu(e,t){for(t&=~zl,t&=~Ml,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-$t(t),r=1<<n;e[n]=-1,t&=~r}}function du(e){if(0!=(48&xl))throw Error(i(327));if(Cu(),e===Cl&&0!=(e.expiredLanes&Ol)){var t=Ol,n=yu(e,t);0!=(Tl&Ml)&&(n=yu(e,t=zt(e,t)))}else n=yu(e,t=zt(e,0));if(0!==e.tag&&2===n&&(xl|=64,e.hydrate&&(e.hydrate=!1,$r(e.containerInfo)),0!==(t=Dt(e))&&(n=yu(e,t))),1===n)throw n=jl,gu(e,0),fu(e,t),su(e,Fa()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,_u(e),su(e,Fa()),null}function pu(e,t){ia(Ll,Nl),Nl|=t,Tl|=t}function hu(){Nl=Ll.current,oa(Ll)}function gu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Vr(n)),null!==Pl)for(n=Pl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&pa();break;case 3:Lo(),oa(sa),oa(ua),Wo();break;case 5:jo(r);break;case 4:Lo();break;case 13:case 19:oa(To);break;case 10:Xa(r);break;case 23:case 24:hu()}n=n.return}Cl=e,Pl=Du(e.current,null),Ol=Nl=Tl=t,Rl=0,jl=null,zl=Ml=Il=0}function mu(e,t){for(;;){var n=Pl;try{if(Ja(),qo.current=Pi,Xo){for(var r=Zo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Xo=!1}if(Ko=0,Jo=Yo=Zo=null,Go=!1,El.current=null,null===n||null===n.return){Rl=1,jl=t,Pl=null;break}e:{var o=e,i=n.return,l=n,u=t;if(t=Ol,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&To.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var g=d.memoizedProps;p=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!f)}}if(p){var m=d.updateQueue;if(null===m){var v=new Set;v.add(s),d.updateQueue=v}else m.add(s);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=oo(-1,1);y.tag=2,io(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new al,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(l)){u.add(l);var w=ju.bind(null,o,s,l);s.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((Q(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Rl&&(Rl=2),u=nl(u,l),d=i;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,lo(d,ol(0,o,t));break e;case 1:o=u;var k=d.type,S=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==S&&"function"==typeof S.componentDidCatch&&(null===Wl||!Wl.has(S)))){d.flags|=4096,t&=-t,d.lanes|=t,lo(d,il(d,o,t));break e}}d=d.return}while(null!==d)}Su(n)}catch(e){t=e,Pl===n&&null!==n&&(Pl=n=n.return);continue}break}}function vu(){var e=_l.current;return _l.current=Pi,null===e?Pi:e}function yu(e,t){var n=xl;xl|=16;var r=vu();for(Cl===e&&Ol===t||gu(e,t);;)try{bu();break}catch(t){mu(e,t)}if(Ja(),xl=n,_l.current=r,null!==Pl)throw Error(i(261));return Cl=null,Ol=0,Rl}function bu(){for(;null!==Pl;)ku(Pl)}function wu(){for(;null!==Pl&&!_a();)ku(Pl)}function ku(e){var t=Vl(e.alternate,e,Nl);e.memoizedProps=e.pendingProps,null===t?Su(e):Pl=t,El.current=null}function Su(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=el(n,t,Nl)))return void(Pl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Nl)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=tl(t)))return n.flags&=2047,void(Pl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Pl=t);Pl=t=e}while(null!==t);0===Rl&&(Rl=5)}function _u(e){var t=Aa();return Va(99,Eu.bind(null,e,t)),null}function Eu(e,t){do{Cu()}while(null!==Ql);if(0!=(48&xl))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<o;){var s=31-$t(o),c=1<<s;a[s]=0,l[s]=-1,u[s]=-1,o&=~c}if(null!==Jl&&0==(24&r)&&Jl.has(e)&&Jl.delete(e),e===Cl&&(Pl=Cl=null,Ol=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=xl,xl|=32,El.current=null,zr=Qt,dr(l=fr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,o=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,g=0,m=l,v=null;t:for(;;){for(var y;m!==u||0!==o&&3!==m.nodeType||(d=f+o),m!==s||0!==c&&3!==m.nodeType||(p=f+c),3===m.nodeType&&(f+=m.nodeValue.length),null!==(y=m.firstChild);)v=m,m=y;for(;;){if(m===l)break t;if(v===u&&++h===o&&(d=f),v===s&&++g===c&&(p=f),null!==(y=m.nextSibling))break;v=(m=v).parentNode}m=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Dr={focusedElem:l,selectionRange:u},Qt=!1,ru=null,au=!1,$l=r;do{try{xu()}catch(e){if(null===$l)throw Error(i(330));Ru($l,e),$l=$l.nextEffect}}while(null!==$l);ru=null,$l=r;do{try{for(l=e;null!==$l;){var b=$l.flags;if(16&b&&ve($l.stateNode,""),128&b){var w=$l.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:gl($l),$l.flags&=-3;break;case 6:gl($l),$l.flags&=-3,bl($l.alternate,$l);break;case 1024:$l.flags&=-1025;break;case 1028:$l.flags&=-1025,bl($l.alternate,$l);break;case 4:bl($l.alternate,$l);break;case 8:yl(l,u=$l);var S=u.alternate;pl(u),null!==S&&pl(S)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Ru($l,e),$l=$l.nextEffect}}while(null!==$l);if(k=Dr,w=fr(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&cr(b.ownerDocument.documentElement,b)){null!==l&&dr(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,S=Math.min(l.start,u),l=void 0===l.end?S:Math.min(l.end,u),!k.extend&&S>l&&(u=l,l=S,S=u),u=sr(b,S),o=sr(b,l),u&&o&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==o.node||k.focusOffset!==o.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),S>l?(k.addRange(w),k.extend(o.node,o.offset)):(w.setEnd(o.node,o.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Qt=!!zr,Dr=zr=null,e.current=n,$l=r;do{try{for(b=e;null!==$l;){var _=$l.flags;if(36&_&&cl(b,$l.alternate,$l),128&_){w=void 0;var E=$l.ref;if(null!==E){var x=$l.stateNode;switch($l.tag){case 5:w=x;break;default:w=x}"function"==typeof E?E(w):E.current=w}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Ru($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,Ta(),xl=a}else e.current=n;if(ql)ql=!1,Ql=e,Kl=t;else for($l=r;null!==$l;)t=$l.nextEffect,$l.nextEffect=null,8&$l.flags&&((_=$l).sibling=null,_.stateNode=null),$l=t;if(0===(r=e.pendingLanes)&&(Wl=null),1===r?e===Gl?Xl++:(Xl=0,Gl=e):Xl=0,n=n.stateNode,ba&&"function"==typeof ba.onCommitFiberRoot)try{ba.onCommitFiberRoot(ya,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,Fa()),Bl)throw Bl=!1,e=Hl,Hl=null,e;return 0!=(8&xl)||Ba(),null}function xu(){for(;null!==$l;){var e=$l.alternate;au||null===ru||(0!=(8&$l.flags)?Xe($l,ru)&&(au=!0):13===$l.tag&&kl(e,$l)&&Xe($l,ru)&&(au=!0));var t=$l.flags;0!=(256&t)&&sl(e,$l),0==(512&t)||ql||(ql=!0,$a(97,(function(){return Cu(),null}))),$l=$l.nextEffect}}function Cu(){if(90!==Kl){var e=97<Kl?97:Kl;return Kl=90,Va(e,Nu)}return!1}function Pu(e,t){Zl.push(t,e),ql||(ql=!0,$a(97,(function(){return Cu(),null})))}function Ou(e,t){Yl.push(t,e),ql||(ql=!0,$a(97,(function(){return Cu(),null})))}function Nu(){if(null===Ql)return!1;var e=Ql;if(Ql=null,0!=(48&xl))throw Error(i(331));var t=xl;xl|=32;var n=Yl;Yl=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===o)throw Error(i(330));Ru(o,e)}}for(n=Zl,Zl=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(i(330));Ru(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return xl=t,Ba(),!0}function Lu(e,t,n){io(e,t=ol(0,t=nl(n,t),1)),t=ou(),null!==(e=uu(e,1))&&(Vt(e,1,t),su(e,t))}function Ru(e,t){if(3===e.tag)Lu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Lu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r))){var a=il(n,e=nl(t,e),1);if(io(n,a),a=ou(),null!==(n=uu(n,1)))Vt(n,1,a),su(n,a);else if("function"==typeof r.componentDidCatch&&(null===Wl||!Wl.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function ju(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,Cl===e&&(Ol&n)===n&&(4===Rl||3===Rl&&(62914560&Ol)===Ol&&500>Fa()-Fl?gu(e,0):zl|=n),su(e,t)}function Tu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Aa()?1:2:(0===tu&&(tu=Tl),0===(t=At(62914560&~tu))&&(t=4194304))),n=ou(),null!==(e=uu(e,t))&&(Vt(e,t,n),su(e,n))}function Iu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Mu(e,t,n,r){return new Iu(e,t,n,r)}function zu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Du(e,t){var n=e.alternate;return null===n?((n=Mu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fu(e,t,n,r,a,o){var l=2;if(r=e,"function"==typeof e)zu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case E:return Au(n.children,a,o,t);case z:l=8,a|=16;break;case x:l=8,a|=1;break;case C:return(e=Mu(12,n,t,8|a)).elementType=C,e.type=C,e.lanes=o,e;case L:return(e=Mu(13,n,t,a)).type=L,e.elementType=L,e.lanes=o,e;case R:return(e=Mu(19,n,t,a)).elementType=R,e.lanes=o,e;case D:return Uu(n,a,o,t);case F:return(e=Mu(24,n,t,a)).elementType=F,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:l=10;break e;case O:l=9;break e;case N:l=11;break e;case j:l=14;break e;case T:l=16,r=null;break e;case I:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Mu(l,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Au(e,t,n,r){return(e=Mu(7,e,r,t)).lanes=n,e}function Uu(e,t,n,r){return(e=Mu(23,e,r,t)).elementType=D,e.lanes=n,e}function Vu(e,t,n){return(e=Mu(6,e,null,t)).lanes=n,e}function $u(e,t,n){return(t=Mu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ut(0),this.expirationTimes=Ut(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ut(0),this.mutableSourceEagerHydrationData=null}function Hu(e,t,n,r){var a=t.current,o=ou(),l=iu(a);e:if(n){t:{if(Ze(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(da(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var s=n.type;if(da(s)){n=ga(n,s,u);break e}}n=u}else n=la;return null===t.context?t.context=n:t.pendingContext=n,(t=oo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),io(a,t),lu(a,l,o),l}function Wu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function qu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Qu(e,t){qu(e,t),(e=e.alternate)&&qu(e,t)}function Ku(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Bu(e,t,null!=n&&!0===n.hydrate),t=Mu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ro(t),e[Zr]=n.current,Pr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Yu(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=Wu(i);l.call(e)}}Hu(t,i,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ku(e,0,t?{hydrate:!0}:void 0)}(n,r),i=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Wu(i);u.call(e)}}!function(e,t){var n=xl;xl&=-2,xl|=8;try{e(t)}finally{0===(xl=n)&&(Ul(),Ba())}}((function(){Hu(t,i,e,a)}))}return Wu(i)}Vl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||sa.current)ji=!0;else{if(0==(n&r)){switch(ji=!1,t.tag){case 3:$i(t),Bo();break;case 5:Ro(t);break;case 1:da(t.type)&&ma(t);break;case 4:No(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ia(Qa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Qi(e,t,n):(ia(To,1&To.current),null!==(t=Xi(e,t,n))?t.sibling:null);ia(To,1&To.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Ji(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(To,To.current),r)break;return null;case 23:case 24:return t.lanes=0,Di(e,t,n)}return Xi(e,t,n)}ji=0!=(16384&e.flags)}else ji=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=fa(t,ua.current),eo(t,n),a=ni(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,da(r)){var o=!0;ma(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ro(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&fo(t,r,l,e),a.updater=po,t.stateNode=a,a._reactInternals=t,vo(t,r,e,n),t=Vi(null,t,r,!0,o,n)}else t.tag=0,Ti(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return zu(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===j)return 14}return 2}(a),e=qa(a,e),o){case 0:t=Ai(null,t,a,e,n);break e;case 1:t=Ui(null,t,a,e,n);break e;case 11:t=Ii(null,t,a,e,n);break e;case 14:t=Mi(null,t,a,qa(a.type,e),r,n);break e}throw Error(i(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Ai(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,Ui(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 3:if($i(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ao(e,t),uo(t,r,null,n),(r=t.memoizedState.element)===a)Bo(),t=Xi(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(zo=Br(t.stateNode.containerInfo.firstChild),Mo=t,o=Do=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],Ho.push(o);for(n=_o(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Ti(e,t,r,n),Bo();t=t.child}return t;case 5:return Ro(t),null===e&&Uo(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,l=a.children,Ar(r,a)?l=null:null!==o&&Ar(r,o)&&(t.flags|=16),Fi(e,t),Ti(e,t,l,n),t.child;case 6:return null===e&&Uo(t),null;case 13:return Qi(e,t,n);case 4:return No(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=So(t,null,r,n):Ti(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Ii(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 7:return Ti(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ti(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,o=a.value;var u=t.type._context;if(ia(Qa,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0==(o=or(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===a.children&&!sa.current){t=Xi(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&o)){1===u.tag&&((c=oo(-1,n&-n)).tag=2,io(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),Ga(u.return,n),s.lanes|=n;break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Ti(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,eo(t,n),r=r(a=to(a,o.unstable_observedBits)),t.flags|=1,Ti(e,t,r,n),t.child;case 14:return o=qa(a=t.type,t.pendingProps),Mi(e,t,a,o=qa(a.type,o),r,n);case 15:return zi(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,da(r)?(e=!0,ma(t)):e=!1,eo(t,n),go(t,r,a),vo(t,r,a,n),Vi(null,t,r,!0,e,n);case 19:return Ji(e,t,n);case 23:case 24:return Di(e,t,n)}throw Error(i(156,t.tag))},Ku.prototype.render=function(e){Hu(e,this._internalRoot,null,null)},Ku.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Hu(null,e,null,(function(){t[Zr]=null}))},Ge=function(e){13===e.tag&&(lu(e,4,ou()),Qu(e,4))},et=function(e){13===e.tag&&(lu(e,67108864,ou()),Qu(e,67108864))},tt=function(e){if(13===e.tag){var t=ou(),n=iu(e);lu(e,n,t),Qu(e,n)}},nt=function(e,t){return t()},Ce=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ea(r);if(!a)throw Error(i(90));J(r),ne(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},je=function(e,t){var n=xl;xl|=1;try{return e(t)}finally{0===(xl=n)&&(Ul(),Ba())}},Te=function(e,t,n,r,a){var o=xl;xl|=4;try{return Va(98,e.bind(null,t,n,r,a))}finally{0===(xl=o)&&(Ul(),Ba())}},Ie=function(){0==(49&xl)&&(function(){if(null!==Jl){var e=Jl;Jl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,Fa())}))}Ba()}(),Cu())},Me=function(e,t){var n=xl;xl|=2;try{return e(t)}finally{0===(xl=n)&&(Ul(),Ba())}};var Ju={findFiberByHostInstance:Jr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Xu={bundleType:Ju.bundleType,version:Ju.version,rendererPackageName:Ju.rendererPackageName,rendererConfig:Ju.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Je(a),e;if(o===r)return Je(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Ju.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Gu=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Gu.isDisabled&&Gu.supportsFiber)try{ya=Gu.inject(Xu),ba=Gu}catch(ge){}}t.render=function(e,t,n){if(!Zu(t))throw Error(i(200));return Yu(null,e,t,!1,n)}},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},718:(e,t,n)=>{"use strict";n.d(t,{OO:()=>f,JP:()=>d,zv:()=>p,nI:()=>h,Db:()=>g});var r=n(670),a=n(816),o=n(949),i=n(294);function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){(0,o.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var s,c={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0},f=i.createContext();function d(){return c}var p=function(){function e(){(0,r.Z)(this,e),this.usedNamespaces={}}return(0,a.Z)(e,[{key:"addUsedNamespaces",value:function(e){var t=this;e.forEach((function(e){t.usedNamespaces[e]||(t.usedNamespaces[e]=!0)}))}},{key:"getUsedNamespaces",value:function(){return Object.keys(this.usedNamespaces)}}]),e}();function h(){return s}var g={type:"3rdParty",init:function(e){!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};c=u(u({},c),e)}(e.options.react),function(e){s=e}(e)}}},687:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n.d(t,{$:()=>g});var o=n(949),i=n(294),l=n(718);function u(){if(console&&console.warn){for(var e,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];"string"==typeof n[0]&&(n[0]="react-i18next:: ".concat(n[0])),(e=console).warn.apply(e,n)}}var s={};function c(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];"string"==typeof t[0]&&s[t[0]]||("string"==typeof t[0]&&(s[t[0]]=new Date),u.apply(void 0,t))}function f(e,t,n){e.loadNamespaces(t,(function(){e.isInitialized?n():e.on("initialized",(function t(){setTimeout((function(){e.off("initialized",t)}),0),n()}))}))}function d(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t.languages||!t.languages.length)return c("i18n.languages were undefined or empty",t.languages),!0;var r=t.languages[0],a=!!t.options&&t.options.fallbackLng,o=t.languages[t.languages.length-1];if("cimode"===r.toLowerCase())return!0;var i=function(e,n){var r=t.services.backendConnector.state["".concat(e,"|").concat(n)];return-1===r||2===r};return!(n.bindI18n&&n.bindI18n.indexOf("languageChanging")>-1&&t.services.backendConnector.backend&&t.isLanguageChangingTo&&!i(t.isLanguageChangingTo,e)||!t.hasResourceBundle(r,e)&&t.services.backendConnector.backend&&(!i(r,e)||a&&!i(o,e)))}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){(0,o.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function g(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.i18n,r=(0,i.useContext)(l.OO)||{},o=r.i18n,u=r.defaultNS,s=n||o||(0,l.nI)();if(s&&!s.reportNamespaces&&(s.reportNamespaces=new l.zv),!s){c("You will need to pass in an i18next instance by using initReactI18next");var p=function(e){return Array.isArray(e)?e[e.length-1]:e},g=[p,{},!1];return g.t=p,g.i18n={},g.ready=!1,g}s.options.react&&void 0!==s.options.react.wait&&c("It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");var m=h(h(h({},(0,l.JP)()),s.options.react),t),v=m.useSuspense,y=e||u||s.options&&s.options.defaultNS;y="string"==typeof y?[y]:y||["translation"],s.reportNamespaces.addUsedNamespaces&&s.reportNamespaces.addUsedNamespaces(y);var b=(s.isInitialized||s.initializedStoreOnce)&&y.every((function(e){return d(e,s,m)}));function w(){return{t:s.getFixedT(null,"fallback"===m.nsMode?y:y[0])}}var k=(0,i.useState)(w()),S=a(k,2),_=S[0],E=S[1],x=(0,i.useRef)(!0);(0,i.useEffect)((function(){var e=m.bindI18n,t=m.bindI18nStore;function n(){x.current&&E(w())}return x.current=!0,b||v||f(s,y,(function(){x.current&&E(w())})),e&&s&&s.on(e,n),t&&s&&s.store.on(t,n),function(){x.current=!1,e&&s&&e.split(" ").forEach((function(e){return s.off(e,n)})),t&&s&&t.split(" ").forEach((function(e){return s.store.off(e,n)}))}}),[y.join()]);var C=[_.t,s,b];if(C.t=_.t,C.i18n=s,C.ready=b,b)return C;if(!b&&!v)return C;throw new Promise((function(e){f(s,y,(function(){e()}))}))}},408:(e,t,n)=>{"use strict";var r=n(418),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function m(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}function v(){}function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=m.prototype;var b=y.prototype=new v;b.constructor=y,r(b,m.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:w.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var x=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return i=i(u=e),e=""===r?"."+C(u,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(x,"$&/")+"/"),P(i,t,n,"",(function(e){return e}))):null!=i&&(E(i)&&(i=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(x,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+C(l=e[s],s);u+=P(l,t,n,c,i)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),s=0;!(l=e.next()).done;)u+=P(l=l.value,t,n,c=r+C(l,s++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,n){if(null==e)return e;var r=[],a=0;return P(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function N(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var L={current:null};function R(){var e=L.current;if(null===e)throw Error(p(321));return e}var j={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:O,forEach:function(e,t,n){O(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!E(e))throw Error(p(143));return e}},t.Component=m,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=j,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)k.call(t,c)&&!S.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];o.children=s}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=E,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return R().useCallback(e,t)},t.useContext=function(e,t){return R().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return R().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return R().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return R().useLayoutEffect(e,t)},t.useMemo=function(e,t){return R().useMemo(e,t)},t.useReducer=function(e,t,n){return R().useReducer(e,t,n)},t.useRef=function(e){return R().useRef(e)},t.useState=function(e){return R().useState(e)},t.version="17.0.1"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,f=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},a=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var g=!1,m=null,v=-1,y=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();b=e+y;try{m(!0,e)?k.postMessage(null):(g=!1,m=null)}catch(e){throw k.postMessage(null),e}}else g=!1},n=function(e){m=e,g||(g=!0,k.postMessage(null))},r=function(e,n){v=d((function(){e(t.unstable_now())}),n)},a=function(){p(v),v=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<x(a,t)))break e;e[r]=t,e[n]=a,n=r}}function _(e){return void 0===(e=e[0])?null:e}function E(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,i=e[o],l=o+1,u=e[l];if(void 0!==i&&0>x(i,n))void 0!==u&&0>x(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[o]=n,r=o);else{if(!(void 0!==u&&0>x(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function x(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],P=[],O=1,N=null,L=3,R=!1,j=!1,T=!1;function I(e){for(var t=_(P);null!==t;){if(null===t.callback)E(P);else{if(!(t.startTime<=e))break;E(P),t.sortIndex=t.expirationTime,S(C,t)}t=_(P)}}function M(e){if(T=!1,I(e),!j)if(null!==_(C))j=!0,n(z);else{var t=_(P);null!==t&&r(M,t.startTime-e)}}function z(e,n){j=!1,T&&(T=!1,a()),R=!0;var o=L;try{for(I(n),N=_(C);null!==N&&(!(N.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=N.callback;if("function"==typeof i){N.callback=null,L=N.priorityLevel;var l=i(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?N.callback=l:N===_(C)&&E(C),I(n)}else E(C);N=_(C)}if(null!==N)var u=!0;else{var s=_(P);null!==s&&r(M,s.startTime-n),u=!1}return u}finally{N=null,L=o,R=!1}}var D=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){j||R||(j=!0,n(z))},t.unstable_getCurrentPriorityLevel=function(){return L},t.unstable_getFirstCallbackNode=function(){return _(C)},t.unstable_next=function(e){switch(L){case 1:case 2:case 3:var t=3;break;default:t=L}var n=L;L=t;try{return e()}finally{L=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=D,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=L;L=e;try{return t()}finally{L=n}},t.unstable_scheduleCallback=function(e,o,i){var l=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:O++,callback:o,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,S(P,e),null===_(C)&&e===_(P)&&(T?a():T=!0,r(M,i-l))):(e.sortIndex=u,S(C,e),j||R||(j=!0,n(z))),e},t.unstable_wrapCallback=function(e){var t=L;return function(){var n=L;L=t;try{return e.apply(this,arguments)}finally{L=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},417:e=>{"use strict";e.exports=JSON.parse('{"View Course":"View Course"}')},263:e=>{"use strict";e.exports=JSON.parse('{"Courses":"Courses","Enrolled":"Enrolled","Login":"Login","Signout":"Sign out"}')},508:e=>{"use strict";e.exports=JSON.parse('{"View Course":"Xem khóa học"}')},561:e=>{"use strict";e.exports=JSON.parse('{"Courses":"Khóa học","Enrolled":"Đã đăng ký","Login":"Login","Signout":"Logout"}')},259:(e,t,n)=>{var r={"./en/browse.json":417,"./en/header.json":263,"./vi/browse.json":508,"./vi/header.json":561};function a(e){var t=o(e);return n(t)}function o(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=259}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(294),t=n(935);function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var a=n(949);function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?Object(arguments[t]):{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){(0,a.Z)(e,t,n[t])}))}return e}var i=n(670),l=n(816);function u(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e,t){return!t||"object"!==r(t)&&"function"!=typeof t?u(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}var p={type:"logger",log:function(e){this.output("log",e)},warn:function(e){this.output("warn",e)},error:function(e){this.output("error",e)},output:function(e,t){console&&console[e]&&console[e].apply(console,t)}},h=new(function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,i.Z)(this,e),this.init(t,n)}return(0,l.Z)(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||p,this.options=t,this.debug=t.debug}},{key:"setDebug",value:function(e){this.debug=e}},{key:"log",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"log","",!0)}},{key:"warn",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","",!0)}},{key:"error",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"error","")}},{key:"deprecate",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}},{key:"forward",value:function(e,t,n,r){return r&&!this.debug?null:("string"==typeof e[0]&&(e[0]="".concat(n).concat(this.prefix," ").concat(e[0])),this.logger[t](e))}},{key:"create",value:function(t){return new e(this.logger,o({},{prefix:"".concat(this.prefix,":").concat(t,":")},this.options))}}]),e}()),g=function(){function e(){(0,i.Z)(this,e),this.observers={}}return(0,l.Z)(e,[{key:"on",value:function(e,t){var n=this;return e.split(" ").forEach((function(e){n.observers[e]=n.observers[e]||[],n.observers[e].push(t)})),this}},{key:"off",value:function(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter((function(e){return e!==t})):delete this.observers[e])}},{key:"emit",value:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];if(this.observers[e]){var a=[].concat(this.observers[e]);a.forEach((function(e){e.apply(void 0,n)}))}if(this.observers["*"]){var o=[].concat(this.observers["*"]);o.forEach((function(t){t.apply(t,[e].concat(n))}))}}}]),e}();function m(){var e,t,n=new Promise((function(n,r){e=n,t=r}));return n.resolve=e,n.reject=t,n}function v(e){return null==e?"":""+e}function y(e,t,n){e.forEach((function(e){t[e]&&(n[e]=t[e])}))}function b(e,t,n){function r(e){return e&&e.indexOf("###")>-1?e.replace(/###/g,"."):e}function a(){return!e||"string"==typeof e}for(var o="string"!=typeof t?[].concat(t):t.split(".");o.length>1;){if(a())return{};var i=r(o.shift());!e[i]&&n&&(e[i]=new n),e=Object.prototype.hasOwnProperty.call(e,i)?e[i]:{}}return a()?{}:{obj:e,k:r(o.shift())}}function w(e,t,n){var r=b(e,t,Object);r.obj[r.k]=n}function k(e,t){var n=b(e,t),r=n.obj,a=n.k;if(r)return r[a]}function S(e,t,n){var r=k(e,n);return void 0!==r?r:k(t,n)}function _(e,t,n){for(var r in t)"__proto__"!==r&&"constructor"!==r&&(r in e?"string"==typeof e[r]||e[r]instanceof String||"string"==typeof t[r]||t[r]instanceof String?n&&(e[r]=t[r]):_(e[r],t[r],n):e[r]=t[r]);return e}function E(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var x={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function C(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(function(e){return x[e]})):e}var P="undefined"!=typeof window&&window.navigator&&window.navigator.userAgent&&window.navigator.userAgent.indexOf("MSIE")>-1,O=function(e){function t(e){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};return(0,i.Z)(this,t),n=s(this,c(t).call(this)),P&&g.call(u(n)),n.data=e||{},n.options=r,void 0===n.options.keySeparator&&(n.options.keySeparator="."),n}return d(t,e),(0,l.Z)(t,[{key:"addNamespaces",value:function(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}},{key:"removeNamespaces",value:function(e){var t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=void 0!==r.keySeparator?r.keySeparator:this.options.keySeparator,o=[e,t];return n&&"string"!=typeof n&&(o=o.concat(n)),n&&"string"==typeof n&&(o=o.concat(a?n.split(a):n)),e.indexOf(".")>-1&&(o=e.split(".")),k(this.data,o)}},{key:"addResource",value:function(e,t,n,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1},o=this.options.keySeparator;void 0===o&&(o=".");var i=[e,t];n&&(i=i.concat(o?n.split(o):n)),e.indexOf(".")>-1&&(r=t,t=(i=e.split("."))[1]),this.addNamespaces(t),w(this.data,i,r),a.silent||this.emit("added",e,t,n,r)}},{key:"addResources",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(var a in n)"string"!=typeof n[a]&&"[object Array]"!==Object.prototype.toString.apply(n[a])||this.addResource(e,t,a,n[a],{silent:!0});r.silent||this.emit("added",e,t,n)}},{key:"addResourceBundle",value:function(e,t,n,r,a){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},l=[e,t];e.indexOf(".")>-1&&(r=n,n=t,t=(l=e.split("."))[1]),this.addNamespaces(t);var u=k(this.data,l)||{};r?_(u,n,a):u=o({},u,n),w(this.data,l,u),i.silent||this.emit("added",e,t,n)}},{key:"removeResourceBundle",value:function(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t)}},{key:"hasResourceBundle",value:function(e,t){return void 0!==this.getResource(e,t)}},{key:"getResourceBundle",value:function(e,t){return t||(t=this.options.defaultNS),"v1"===this.options.compatibilityAPI?o({},{},this.getResource(e,t)):this.getResource(e,t)}},{key:"getDataByLanguage",value:function(e){return this.data[e]}},{key:"toJSON",value:function(){return this.data}}]),t}(g),N={processors:{},addPostProcessor:function(e){this.processors[e.name]=e},handle:function(e,t,n,r,a){var o=this;return e.forEach((function(e){o.processors[e]&&(t=o.processors[e].process(t,n,r,a))})),t}},L={},R=function(e){function t(e){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,i.Z)(this,t),n=s(this,c(t).call(this)),P&&g.call(u(n)),y(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],e,u(n)),n.options=r,void 0===n.options.keySeparator&&(n.options.keySeparator="."),n.logger=h.create("translator"),n}return d(t,e),(0,l.Z)(t,[{key:"changeLanguage",value:function(e){e&&(this.language=e)}},{key:"exists",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}},n=this.resolve(e,t);return n&&void 0!==n.res}},{key:"extractFromKey",value:function(e,t){var n=void 0!==t.nsSeparator?t.nsSeparator:this.options.nsSeparator;void 0===n&&(n=":");var r=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,a=t.ns||this.options.defaultNS;if(n&&e.indexOf(n)>-1){var o=e.match(this.interpolator.nestingRegexp);if(o&&o.length>0)return{key:e,namespaces:a};var i=e.split(n);(n!==r||n===r&&this.options.ns.indexOf(i[0])>-1)&&(a=i.shift()),e=i.join(r)}return"string"==typeof a&&(a=[a]),{key:e,namespaces:a}}},{key:"translate",value:function(e,n,a){var i=this;if("object"!==r(n)&&this.options.overloadTranslationOptionHandler&&(n=this.options.overloadTranslationOptionHandler(arguments)),n||(n={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);var l=void 0!==n.keySeparator?n.keySeparator:this.options.keySeparator,u=this.extractFromKey(e[e.length-1],n),s=u.key,c=u.namespaces,f=c[c.length-1],d=n.lng||this.language,p=n.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(d&&"cimode"===d.toLowerCase()){if(p){var h=n.nsSeparator||this.options.nsSeparator;return f+h+s}return s}var g=this.resolve(e,n),m=g&&g.res,v=g&&g.usedKey||s,y=g&&g.exactUsedKey||s,b=Object.prototype.toString.apply(m),w=["[object Number]","[object Function]","[object RegExp]"],k=void 0!==n.joinArrays?n.joinArrays:this.options.joinArrays,S=!this.i18nFormat||this.i18nFormat.handleAsObject,_="string"!=typeof m&&"boolean"!=typeof m&&"number"!=typeof m;if(S&&m&&_&&w.indexOf(b)<0&&("string"!=typeof k||"[object Array]"!==b)){if(!n.returnObjects&&!this.options.returnObjects)return this.logger.warn("accessing an object - but returnObjects options is not enabled!"),this.options.returnedObjectHandler?this.options.returnedObjectHandler(v,m,n):"key '".concat(s," (").concat(this.language,")' returned an object instead of string.");if(l){var E="[object Array]"===b,x=E?[]:{},C=E?y:v;for(var P in m)if(Object.prototype.hasOwnProperty.call(m,P)){var O="".concat(C).concat(l).concat(P);x[P]=this.translate(O,o({},n,{joinArrays:!1,ns:c})),x[P]===O&&(x[P]=m[P])}m=x}}else if(S&&"string"==typeof k&&"[object Array]"===b)(m=m.join(k))&&(m=this.extendTranslation(m,e,n,a));else{var N=!1,L=!1,R=void 0!==n.count&&"string"!=typeof n.count,j=t.hasDefaultValue(n),T=R?this.pluralResolver.getSuffix(d,n.count):"",I=n["defaultValue".concat(T)]||n.defaultValue;!this.isValidLookup(m)&&j&&(N=!0,m=I),this.isValidLookup(m)||(L=!0,m=s);var M=j&&I!==m&&this.options.updateMissing;if(L||N||M){if(this.logger.log(M?"updateKey":"missingKey",d,f,s,M?I:m),l){var z=this.resolve(s,o({},n,{keySeparator:!1}));z&&z.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}var D=[],F=this.languageUtils.getFallbackCodes(this.options.fallbackLng,n.lng||this.language);if("fallback"===this.options.saveMissingTo&&F&&F[0])for(var A=0;A<F.length;A++)D.push(F[A]);else"all"===this.options.saveMissingTo?D=this.languageUtils.toResolveHierarchy(n.lng||this.language):D.push(n.lng||this.language);var U=function(e,t,r){i.options.missingKeyHandler?i.options.missingKeyHandler(e,f,t,M?r:m,M,n):i.backendConnector&&i.backendConnector.saveMissing&&i.backendConnector.saveMissing(e,f,t,M?r:m,M,n),i.emit("missingKey",e,f,t,m)};this.options.saveMissing&&(this.options.saveMissingPlurals&&R?D.forEach((function(e){i.pluralResolver.getSuffixes(e).forEach((function(t){U([e],s+t,n["defaultValue".concat(t)]||I)}))})):U(D,s,I))}m=this.extendTranslation(m,e,n,g,a),L&&m===s&&this.options.appendNamespaceToMissingKey&&(m="".concat(f,":").concat(s)),L&&this.options.parseMissingKeyHandler&&(m=this.options.parseMissingKeyHandler(m))}return m}},{key:"extendTranslation",value:function(e,t,n,r,a){var i=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,n,r.usedLng,r.usedNS,r.usedKey,{resolved:r});else if(!n.skipInterpolation){n.interpolation&&this.interpolator.init(o({},n,{interpolation:o({},this.options.interpolation,n.interpolation)}));var l,u=n.interpolation&&n.interpolation.skipOnVariables||this.options.interpolation.skipOnVariables;if(u){var s=e.match(this.interpolator.nestingRegexp);l=s&&s.length}var c=n.replace&&"string"!=typeof n.replace?n.replace:n;if(this.options.interpolation.defaultVariables&&(c=o({},this.options.interpolation.defaultVariables,c)),e=this.interpolator.interpolate(e,c,n.lng||this.language,n),u){var f=e.match(this.interpolator.nestingRegexp);l<(f&&f.length)&&(n.nest=!1)}!1!==n.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return a&&a[0]===r[0]&&!n.context?(i.logger.warn("It seems you are nesting recursively key: ".concat(r[0]," in key: ").concat(t[0])),null):i.translate.apply(i,r.concat([t]))}),n)),n.interpolation&&this.interpolator.reset()}var d=n.postProcess||this.options.postProcess,p="string"==typeof d?[d]:d;return null!=e&&p&&p.length&&!1!==n.applyPostProcessor&&(e=N.handle(p,e,t,this.options&&this.options.postProcessPassResolved?o({i18nResolved:r},n):n,this)),e}},{key:"resolve",value:function(e){var t,n,r,a,o,i=this,l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof e&&(e=[e]),e.forEach((function(e){if(!i.isValidLookup(t)){var u=i.extractFromKey(e,l),s=u.key;n=s;var c=u.namespaces;i.options.fallbackNS&&(c=c.concat(i.options.fallbackNS));var f=void 0!==l.count&&"string"!=typeof l.count,d=void 0!==l.context&&"string"==typeof l.context&&""!==l.context,p=l.lngs?l.lngs:i.languageUtils.toResolveHierarchy(l.lng||i.language,l.fallbackLng);c.forEach((function(e){i.isValidLookup(t)||(o=e,!L["".concat(p[0],"-").concat(e)]&&i.utils&&i.utils.hasLoadedNamespace&&!i.utils.hasLoadedNamespace(o)&&(L["".concat(p[0],"-").concat(e)]=!0,i.logger.warn('key "'.concat(n,'" for languages "').concat(p.join(", "),'" won\'t get resolved as namespace "').concat(o,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),p.forEach((function(n){if(!i.isValidLookup(t)){a=n;var o,u,c=s,p=[c];for(i.i18nFormat&&i.i18nFormat.addLookupKeys?i.i18nFormat.addLookupKeys(p,s,n,e,l):(f&&(o=i.pluralResolver.getSuffix(n,l.count)),f&&d&&p.push(c+o),d&&p.push(c+="".concat(i.options.contextSeparator).concat(l.context)),f&&p.push(c+=o));u=p.pop();)i.isValidLookup(t)||(r=u,t=i.getResource(n,e,u,l))}})))}))}})),{res:t,usedKey:n,exactUsedKey:r,usedLng:a,usedNS:o}}},{key:"isValidLookup",value:function(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,n,r):this.resourceStore.getResource(e,t,n,r)}}],[{key:"hasDefaultValue",value:function(e){var t="defaultValue";for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&t===n.substring(0,t.length)&&void 0!==e[n])return!0;return!1}}]),t}(g);function j(e){return e.charAt(0).toUpperCase()+e.slice(1)}var T=function(){function e(t){(0,i.Z)(this,e),this.options=t,this.whitelist=this.options.supportedLngs||!1,this.supportedLngs=this.options.supportedLngs||!1,this.logger=h.create("languageUtils")}return(0,l.Z)(e,[{key:"getScriptPartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return null;var t=e.split("-");return 2===t.length?null:(t.pop(),"x"===t[t.length-1].toLowerCase()?null:this.formatLanguageCode(t.join("-")))}},{key:"getLanguagePartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return e;var t=e.split("-");return this.formatLanguageCode(t[0])}},{key:"formatLanguageCode",value:function(e){if("string"==typeof e&&e.indexOf("-")>-1){var t=["hans","hant","latn","cyrl","cans","mong","arab"],n=e.split("-");return this.options.lowerCaseLng?n=n.map((function(e){return e.toLowerCase()})):2===n.length?(n[0]=n[0].toLowerCase(),n[1]=n[1].toUpperCase(),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=j(n[1].toLowerCase()))):3===n.length&&(n[0]=n[0].toLowerCase(),2===n[1].length&&(n[1]=n[1].toUpperCase()),"sgn"!==n[0]&&2===n[2].length&&(n[2]=n[2].toUpperCase()),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=j(n[1].toLowerCase())),t.indexOf(n[2].toLowerCase())>-1&&(n[2]=j(n[2].toLowerCase()))),n.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}},{key:"isWhitelisted",value:function(e){return this.logger.deprecate("languageUtils.isWhitelisted",'function "isWhitelisted" will be renamed to "isSupportedCode" in the next major - please make sure to rename it\'s usage asap.'),this.isSupportedCode(e)}},{key:"isSupportedCode",value:function(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}},{key:"getBestMatchFromCodes",value:function(e){var t,n=this;return e?(e.forEach((function(e){if(!t){var r=n.formatLanguageCode(e);n.options.supportedLngs&&!n.isSupportedCode(r)||(t=r)}})),!t&&this.options.supportedLngs&&e.forEach((function(e){if(!t){var r=n.getLanguagePartFromCode(e);if(n.isSupportedCode(r))return t=r;t=n.options.supportedLngs.find((function(e){if(0===e.indexOf(r))return e}))}})),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t):null}},{key:"getFallbackCodes",value:function(e,t){if(!e)return[];if("function"==typeof e&&(e=e(t)),"string"==typeof e&&(e=[e]),"[object Array]"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];var n=e[t];return n||(n=e[this.getScriptPartFromCode(t)]),n||(n=e[this.formatLanguageCode(t)]),n||(n=e[this.getLanguagePartFromCode(t)]),n||(n=e.default),n||[]}},{key:"toResolveHierarchy",value:function(e,t){var n=this,r=this.getFallbackCodes(t||this.options.fallbackLng||[],e),a=[],o=function(e){e&&(n.isSupportedCode(e)?a.push(e):n.logger.warn("rejecting language code not found in supportedLngs: ".concat(e)))};return"string"==typeof e&&e.indexOf("-")>-1?("languageOnly"!==this.options.load&&o(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&o(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&o(this.getLanguagePartFromCode(e))):"string"==typeof e&&o(this.formatLanguageCode(e)),r.forEach((function(e){a.indexOf(e)<0&&o(n.formatLanguageCode(e))})),a}}]),e}(),I=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","kk","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],M={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}};function z(){var e={};return I.forEach((function(t){t.lngs.forEach((function(n){e[n]={numbers:t.nr,plurals:M[t.fc]}}))})),e}var D=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,i.Z)(this,e),this.languageUtils=t,this.options=n,this.logger=h.create("pluralResolver"),this.rules=z()}return(0,l.Z)(e,[{key:"addRule",value:function(e,t){this.rules[e]=t}},{key:"getRule",value:function(e){return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}},{key:"needsPlural",value:function(e){var t=this.getRule(e);return t&&t.numbers.length>1}},{key:"getPluralFormsOfKey",value:function(e,t){return this.getSuffixes(e).map((function(e){return t+e}))}},{key:"getSuffixes",value:function(e){var t=this,n=this.getRule(e);return n?n.numbers.map((function(n){return t.getSuffix(e,n)})):[]}},{key:"getSuffix",value:function(e,t){var n=this,r=this.getRule(e);if(r){var a=r.noAbs?r.plurals(t):r.plurals(Math.abs(t)),o=r.numbers[a];this.options.simplifyPluralSuffix&&2===r.numbers.length&&1===r.numbers[0]&&(2===o?o="plural":1===o&&(o=""));var i=function(){return n.options.prepend&&o.toString()?n.options.prepend+o.toString():o.toString()};return"v1"===this.options.compatibilityJSON?1===o?"":"number"==typeof o?"_plural_".concat(o.toString()):i():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===r.numbers.length&&1===r.numbers[0]?i():this.options.prepend&&a.toString()?this.options.prepend+a.toString():a.toString()}return this.logger.warn("no plural rule found for: ".concat(e)),""}}]),e}(),F=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,i.Z)(this,e),this.logger=h.create("interpolator"),this.options=t,this.format=t.interpolation&&t.interpolation.format||function(e){return e},this.init(t)}return(0,l.Z)(e,[{key:"init",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});var t=e.interpolation;this.escape=void 0!==t.escape?t.escape:C,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?E(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?E(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?E(t.nestingPrefix):t.nestingPrefixEscaped||E("$t("),this.nestingSuffix=t.nestingSuffix?E(t.nestingSuffix):t.nestingSuffixEscaped||E(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp()}},{key:"reset",value:function(){this.options&&this.init(this.options)}},{key:"resetRegExp",value:function(){var e="".concat(this.prefix,"(.+?)").concat(this.suffix);this.regexp=new RegExp(e,"g");var t="".concat(this.prefix).concat(this.unescapePrefix,"(.+?)").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=new RegExp(t,"g");var n="".concat(this.nestingPrefix,"(.+?)").concat(this.nestingSuffix);this.nestingRegexp=new RegExp(n,"g")}},{key:"interpolate",value:function(e,t,n,r){var a,o,i,l=this,u=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function s(e){return e.replace(/\$/g,"$$$$")}var c=function(e){if(e.indexOf(l.formatSeparator)<0){var a=S(t,u,e);return l.alwaysFormat?l.format(a,void 0,n):a}var o=e.split(l.formatSeparator),i=o.shift().trim(),s=o.join(l.formatSeparator).trim();return l.format(S(t,u,i),s,n,r)};this.resetRegExp();var f=r&&r.missingInterpolationHandler||this.options.missingInterpolationHandler,d=r&&r.interpolation&&r.interpolation.skipOnVariables||this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:function(e){return s(e)}},{regex:this.regexp,safeValue:function(e){return l.escapeValue?s(l.escape(e)):s(e)}}].forEach((function(t){for(i=0;a=t.regex.exec(e);){if(void 0===(o=c(a[1].trim())))if("function"==typeof f){var n=f(e,a,r);o="string"==typeof n?n:""}else{if(d){o=a[0];continue}l.logger.warn("missed to pass in variable ".concat(a[1]," for interpolating ").concat(e)),o=""}else"string"==typeof o||l.useRawValueToEscape||(o=v(o));if(e=e.replace(a[0],t.safeValue(o)),t.regex.lastIndex=0,++i>=l.maxReplaces)break}})),e}},{key:"nest",value:function(e,t){var n,r,a=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},l=o({},i);function u(e,t){var n=this.nestingOptionsSeparator;if(e.indexOf(n)<0)return e;var r=e.split(new RegExp("".concat(n,"[ ]*{"))),a="{".concat(r[1]);e=r[0],a=(a=this.interpolate(a,l)).replace(/'/g,'"');try{l=JSON.parse(a),t&&(l=o({},t,l))}catch(t){return this.logger.warn("failed parsing options string in nesting for key ".concat(e),t),"".concat(e).concat(n).concat(a)}return delete l.defaultValue,e}for(l.applyPostProcessor=!1,delete l.defaultValue;n=this.nestingRegexp.exec(e);){var s=[],c=!1;if(n[0].includes(this.formatSeparator)&&!/{.*}/.test(n[1])){var f=n[1].split(this.formatSeparator).map((function(e){return e.trim()}));n[1]=f.shift(),s=f,c=!0}if((r=t(u.call(this,n[1].trim(),l),l))&&n[0]===e&&"string"!=typeof r)return r;"string"!=typeof r&&(r=v(r)),r||(this.logger.warn("missed to resolve ".concat(n[1]," for nesting ").concat(e)),r=""),c&&(r=s.reduce((function(e,t){return a.format(e,t,i.lng,i)}),r.trim())),e=e.replace(n[0],r),this.regexp.lastIndex=0}return e}}]),e}(),A=function(e){function t(e,n,r){var a,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return(0,i.Z)(this,t),a=s(this,c(t).call(this)),P&&g.call(u(a)),a.backend=e,a.store=n,a.services=r,a.languageUtils=r.languageUtils,a.options=o,a.logger=h.create("backendConnector"),a.state={},a.queue=[],a.backend&&a.backend.init&&a.backend.init(r,o.backend,o),a}return d(t,e),(0,l.Z)(t,[{key:"queueLoad",value:function(e,t,n,r){var a=this,o=[],i=[],l=[],u=[];return e.forEach((function(e){var r=!0;t.forEach((function(t){var l="".concat(e,"|").concat(t);!n.reload&&a.store.hasResourceBundle(e,t)?a.state[l]=2:a.state[l]<0||(1===a.state[l]?i.indexOf(l)<0&&i.push(l):(a.state[l]=1,r=!1,i.indexOf(l)<0&&i.push(l),o.indexOf(l)<0&&o.push(l),u.indexOf(t)<0&&u.push(t)))})),r||l.push(e)})),(o.length||i.length)&&this.queue.push({pending:i,loaded:{},errors:[],callback:r}),{toLoad:o,pending:i,toLoadLanguages:l,toLoadNamespaces:u}}},{key:"loaded",value:function(e,t,n){var r=e.split("|"),a=r[0],o=r[1];t&&this.emit("failedLoading",a,o,t),n&&this.store.addResourceBundle(a,o,n),this.state[e]=t?-1:2;var i={};this.queue.forEach((function(n){var r,l,u,s,c;r=n.loaded,l=o,(s=(u=b(r,[a],Object)).obj)[c=u.k]=s[c]||[],s[c].push(l),function(e,t){for(var n=e.indexOf(t);-1!==n;)e.splice(n,1),n=e.indexOf(t)}(n.pending,e),t&&n.errors.push(t),0!==n.pending.length||n.done||(Object.keys(n.loaded).forEach((function(e){i[e]||(i[e]=[]),n.loaded[e].length&&n.loaded[e].forEach((function(t){i[e].indexOf(t)<0&&i[e].push(t)}))})),n.done=!0,n.errors.length?n.callback(n.errors):n.callback())})),this.emit("loaded",i),this.queue=this.queue.filter((function(e){return!e.done}))}},{key:"read",value:function(e,t,n){var r=this,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:350,i=arguments.length>5?arguments[5]:void 0;return e.length?this.backend[n](e,t,(function(l,u){l&&u&&a<5?setTimeout((function(){r.read.call(r,e,t,n,a+1,2*o,i)}),o):i(l,u)})):i(null,{})}},{key:"prepareLoading",value:function(e,t){var n=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),a&&a();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof t&&(t=[t]);var o=this.queueLoad(e,t,r,a);if(!o.toLoad.length)return o.pending.length||a(),null;o.toLoad.forEach((function(e){n.loadOne(e)}))}},{key:"load",value:function(e,t,n){this.prepareLoading(e,t,{},n)}},{key:"reload",value:function(e,t,n){this.prepareLoading(e,t,{reload:!0},n)}},{key:"loadOne",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=e.split("|"),a=r[0],o=r[1];this.read(a,o,"read",void 0,void 0,(function(r,i){r&&t.logger.warn("".concat(n,"loading namespace ").concat(o," for language ").concat(a," failed"),r),!r&&i&&t.logger.log("".concat(n,"loaded namespace ").concat(o," for language ").concat(a),i),t.loaded(e,r,i)}))}},{key:"saveMissing",value:function(e,t,n,r,a){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t)?this.logger.warn('did not save key "'.concat(n,'" as the namespace "').concat(t,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"):null!=n&&""!==n&&(this.backend&&this.backend.create&&this.backend.create(e,t,n,r,null,o({},i,{isUpdate:a})),e&&e[0]&&this.store.addResource(e[0],t,n,r))}}]),t}(g);function U(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,whitelist:!1,nonExplicitWhitelist:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!0,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){var t={};if("object"===r(e[1])&&(t=e[1]),"string"==typeof e[1]&&(t.defaultValue=e[1]),"string"==typeof e[2]&&(t.tDescription=e[2]),"object"===r(e[2])||"object"===r(e[3])){var n=e[3]||e[2];Object.keys(n).forEach((function(e){t[e]=n[e]}))}return t},interpolation:{escapeValue:!0,format:function(e,t,n,r){return e},prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!1}}}function V(e){return"string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.whitelist&&(e.whitelist&&e.whitelist.indexOf("cimode")<0&&(e.whitelist=e.whitelist.concat(["cimode"])),e.supportedLngs=e.whitelist),e.nonExplicitWhitelist&&(e.nonExplicitSupportedLngs=e.nonExplicitWhitelist),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function $(){}const B=new(function(e){function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;if((0,i.Z)(this,t),e=s(this,c(t).call(this)),P&&g.call(u(e)),e.options=V(n),e.services={},e.logger=h,e.modules={external:[]},r&&!e.isInitialized&&!n.isClone){if(!e.options.initImmediate)return e.init(n,r),s(e,u(e));setTimeout((function(){e.init(n,r)}),0)}return e}return d(t,e),(0,l.Z)(t,[{key:"init",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;function r(e){return e?"function"==typeof e?new e:e:null}if("function"==typeof t&&(n=t,t={}),t.whitelist&&!t.supportedLngs&&this.logger.deprecate("whitelist",'option "whitelist" will be renamed to "supportedLngs" in the next major - please make sure to rename this option asap.'),t.nonExplicitWhitelist&&!t.nonExplicitSupportedLngs&&this.logger.deprecate("whitelist",'options "nonExplicitWhitelist" will be renamed to "nonExplicitSupportedLngs" in the next major - please make sure to rename this option asap.'),this.options=o({},U(),this.options,V(t)),this.format=this.options.interpolation.format,n||(n=$),!this.options.isClone){this.modules.logger?h.init(r(this.modules.logger),this.options):h.init(null,this.options);var a=new T(this.options);this.store=new O(this.options.resources,this.options);var i=this.services;i.logger=h,i.resourceStore=this.store,i.languageUtils=a,i.pluralResolver=new D(a,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),i.interpolator=new F(this.options),i.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},i.backendConnector=new A(r(this.modules.backend),i.resourceStore,i,this.options),i.backendConnector.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];e.emit.apply(e,[t].concat(r))})),this.modules.languageDetector&&(i.languageDetector=r(this.modules.languageDetector),i.languageDetector.init(i,this.options.detection,this.options)),this.modules.i18nFormat&&(i.i18nFormat=r(this.modules.i18nFormat),i.i18nFormat.init&&i.i18nFormat.init(this)),this.translator=new R(this.services,this.options),this.translator.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];e.emit.apply(e,[t].concat(r))})),this.modules.external.forEach((function(t){t.init&&t.init(e)}))}if(this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){var l=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);l.length>0&&"dev"!==l[0]&&(this.options.lng=l[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined");var u=["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"];u.forEach((function(t){e[t]=function(){var n;return(n=e.store)[t].apply(n,arguments)}}));var s=["addResource","addResources","addResourceBundle","removeResourceBundle"];s.forEach((function(t){e[t]=function(){var n;return(n=e.store)[t].apply(n,arguments),e}}));var c=m(),f=function(){var t=function(t,r){e.isInitialized&&e.logger.warn("init: i18next is already initialized. You should call init just once!"),e.isInitialized=!0,e.options.isClone||e.logger.log("initialized",e.options),e.emit("initialized",e.options),c.resolve(r),n(t,r)};if(e.languages&&"v1"!==e.options.compatibilityAPI)return t(null,e.t.bind(e));e.changeLanguage(e.options.lng,t)};return this.options.resources||!this.options.initImmediate?f():setTimeout(f,0),c}},{key:"loadResources",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:$,r=n,a="string"==typeof e?e:this.language;if("function"==typeof e&&(r=e),!this.options.resources||this.options.partialBundledLanguages){if(a&&"cimode"===a.toLowerCase())return r();var o=[],i=function(e){e&&t.services.languageUtils.toResolveHierarchy(e).forEach((function(e){o.indexOf(e)<0&&o.push(e)}))};if(a)i(a);else{var l=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);l.forEach((function(e){return i(e)}))}this.options.preload&&this.options.preload.forEach((function(e){return i(e)})),this.services.backendConnector.load(o,this.options.ns,r)}else r(null)}},{key:"reloadResources",value:function(e,t,n){var r=m();return e||(e=this.languages),t||(t=this.options.ns),n||(n=$),this.services.backendConnector.reload(e,t,(function(e){r.resolve(),n(e)})),r}},{key:"use",value:function(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&N.addPostProcessor(e),"3rdParty"===e.type&&this.modules.external.push(e),this}},{key:"changeLanguage",value:function(e,t){var n=this;this.isLanguageChangingTo=e;var r=m();this.emit("languageChanging",e);var a=function(e){var a="string"==typeof e?e:n.services.languageUtils.getBestMatchFromCodes(e);a&&(n.language||(n.language=a,n.languages=n.services.languageUtils.toResolveHierarchy(a)),n.translator.language||n.translator.changeLanguage(a),n.services.languageDetector&&n.services.languageDetector.cacheUserLanguage(a)),n.loadResources(a,(function(e){!function(e,a){a?(n.language=a,n.languages=n.services.languageUtils.toResolveHierarchy(a),n.translator.changeLanguage(a),n.isLanguageChangingTo=void 0,n.emit("languageChanged",a),n.logger.log("languageChanged",a)):n.isLanguageChangingTo=void 0,r.resolve((function(){return n.t.apply(n,arguments)})),t&&t(e,(function(){return n.t.apply(n,arguments)}))}(e,a)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect(a):a(e):a(this.services.languageDetector.detect()),r}},{key:"getFixedT",value:function(e,t){var n=this,a=function e(t,a){var i;if("object"!==r(a)){for(var l=arguments.length,u=new Array(l>2?l-2:0),s=2;s<l;s++)u[s-2]=arguments[s];i=n.options.overloadTranslationOptionHandler([t,a].concat(u))}else i=o({},a);return i.lng=i.lng||e.lng,i.lngs=i.lngs||e.lngs,i.ns=i.ns||e.ns,n.t(t,i)};return"string"==typeof e?a.lng=e:a.lngs=e,a.ns=t,a}},{key:"t",value:function(){var e;return this.translator&&(e=this.translator).translate.apply(e,arguments)}},{key:"exists",value:function(){var e;return this.translator&&(e=this.translator).exists.apply(e,arguments)}},{key:"setDefaultNamespace",value:function(e){this.options.defaultNS=e}},{key:"hasLoadedNamespace",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;var r=this.languages[0],a=!!this.options&&this.options.fallbackLng,o=this.languages[this.languages.length-1];if("cimode"===r.toLowerCase())return!0;var i=function(e,n){var r=t.services.backendConnector.state["".concat(e,"|").concat(n)];return-1===r||2===r};if(n.precheck){var l=n.precheck(this,i);if(void 0!==l)return l}return!!this.hasResourceBundle(r,e)||!this.services.backendConnector.backend||!(!i(r,e)||a&&!i(o,e))}},{key:"loadNamespaces",value:function(e,t){var n=this,r=m();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((function(e){n.options.ns.indexOf(e)<0&&n.options.ns.push(e)})),this.loadResources((function(e){r.resolve(),t&&t(e)})),r):(t&&t(),Promise.resolve())}},{key:"loadLanguages",value:function(e,t){var n=m();"string"==typeof e&&(e=[e]);var r=this.options.preload||[],a=e.filter((function(e){return r.indexOf(e)<0}));return a.length?(this.options.preload=r.concat(a),this.loadResources((function(e){n.resolve(),t&&t(e)})),n):(t&&t(),Promise.resolve())}},{key:"dir",value:function(e){return e||(e=this.languages&&this.languages.length>0?this.languages[0]:this.language),e?["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam"].indexOf(this.services.languageUtils.getLanguagePartFromCode(e))>=0?"rtl":"ltr":"rtl"}},{key:"createInstance",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;return new t(e,n)}},{key:"cloneInstance",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:$,a=o({},this.options,n,{isClone:!0}),i=new t(a),l=["store","services","language"];return l.forEach((function(t){i[t]=e[t]})),i.services=o({},this.services),i.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},i.translator=new R(i.services,i.options),i.translator.on("*",(function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];i.emit.apply(i,[e].concat(n))})),i.init(a,r),i.translator.options=i.options,i.translator.backendConnector.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},i}}]),t}(g));var H=n(718);const W=function(e,t){var r={};return["en","vi"].forEach((function(e){r[e]={},t.forEach((function(t){r[e][t]=n(259)("./".concat(e,"/").concat(t,".json"))}))})),r}(0,["browse","header"]);var q=n(253),Q=n(642),K=n(472);function Z(t){var n=t.level,r=function(e){return[!1,!1,!1].map((function(t,n){return n===e-1}))}(n);return e.createElement("div",{className:"w3-container"},e.createElement("div",{className:"w3-bar-item  w3-right"},r.map((function(t,n){var r=t?"w3-green":"w3-grey w3-opacity";return e.createElement("div",{key:n,className:r,style:{width:"8px",height:"8px",marginLeft:"2px",display:"inline-block"}})})),e.createElement("span",{className:"w3-small"}," ",function(e){return["Foundation","Advanced","Master"][e-1]}(n)," ")))}function Y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var J={discount:"sale",gift:"gift",new:"new",best:"best choice"},X={sale:"red",gift:"blue",new:"yellow","best choice":"yellow"};function G(e,t){var n={};return e.forEach((function(e){var r,a;n[e.id]=t.map((function(t){return function(e,t){return t.scopes.find((function(t){return t.courseId===e.id}))?J[t.type]:void 0}(e,t)})).filter((function(e){return e})),e.tags&&(r=n[e.id]).push.apply(r,function(e){if(Array.isArray(e))return Y(e)}(a=e.tags.map((function(e){return J[e]||e})))||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(a)||function(e,t){if(e){if("string"==typeof e)return Y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Y(e,t):void 0}}(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())})),n}function ee(e){return X[e]}function te(t){var n=t.tags;return n&&0!==n.length?e.createElement("span",null,n.map((function(t){return e.createElement("label",{key:t,className:"w3-tag w3-".concat(ee(t)),style:{marginRight:"4px"}}," ",t.toUpperCase()," ")}))):null}function ne(t){var n=t.skills;return e.createElement("div",null,n.map((function(t){return e.createElement("span",{key:t},e.createElement("span",{className:"w3-tag w3-round w3-left-align w3-green",style:{margin:"4px 0"}},e.createElement("i",{className:"fas fa-award w3-text-yellow"})," ",t)," ")})),e.createElement("br",null))}function re(t){var n=t.course,r=t.tag,a=t.navigate;return e.createElement("div",{className:"w3-bar-item"},e.createElement("div",{className:"w3-cell-row"},e.createElement("img",{src:n.thumbnail,className:"w3-container w3-cell w3-hide-small",style:{width:"150px",borderRadius:"24px"}}),e.createElement("div",{className:"w3-cell",style:{maxWidth:"530px"}},e.createElement(te,{tags:r}),e.createElement("div",{className:"cursor-pointer w3-text-dark-grey",style:{fontWeight:"bold",padding:"0 0 4px 0"}},e.createElement("a",{href:"/course/".concat(n.id),className:"w3-hover-text-blue",style:{textDecoration:"none"},onClick:a},n.title)),e.createElement("div",{className:"w3-small w3-text-dark-grey",style:{fontStyle:"italic",padding:"0 0 8px 0"}}," ",n.snippet," "),e.createElement(ne,{skills:n.skills}))))}var ae=n(687);function oe(t){var n=t.course,r=t.navigate,a=(0,ae.$)().t;return e.createElement("div",null,e.createElement("div",{className:"w3-bar-item w3-hide-large",style:{width:"100%"}},e.createElement("div",{className:"w3-hide-small",style:{width:"150px",height:"10px",display:"inline-block"}})," ",e.createElement("a",{href:"/course/".concat(n.id),className:"w3-button w3-round w3-blue w3-card-4 w3-right",onClick:r},a("browse:View Course"))),e.createElement("div",{className:"w3-bar-item w3-right w3-hide-medium w3-hide-small"},e.createElement("a",{href:"/course/".concat(n.id),className:"w3-button w3-round w3-blue w3-card-4",onClick:r},a("browse:View Course")),e.createElement("br",null)," ",e.createElement("br",null)))}function ie(t){var n=t.course,r=t.tag;return e.createElement("div",null,e.createElement(Z,{level:n.level}),e.createElement("div",{className:"w3-bar"},e.createElement(re,{course:n,tag:r,navigate:a}),e.createElement(oe,{course:n,navigate:a})));function a(e){e.preventDefault()}}const le={home:{Page:function(){return e.createElement("div",{className:"w3-container",style:{maxWidth:"1200px",margin:"auto",paddingTop:"64px"}},e.createElement("h3",null," Page Home "))},url:"/"},browse:{Page:function(t){var n=t.route.data,r=n.program,a=n.courses,o=n.tags;return e.createElement("div",{className:"w3-container",style:{maxWidth:"1200px",margin:"auto",paddingTop:"64px"}},e.createElement("h3",{className:"w3-container"}," ",r.title," "),e.createElement("div",null,e.createElement("ul",{className:"w3-ul"},a.map((function(t){return e.createElement("li",{key:t.id},e.createElement(ie,{course:t,tag:o[t.id]}))})))))},url:"/browse/:pid",title:"{{program.title}}",data:function(e){var t=e.params,n=e.props;return new Promise((function(e,r){var a=n.programs.filter((function(e){return e.id===t.pid}))[0];if(a){var o=n.courses.filter((function(e){return-1!==a.courses.indexOf(e.id)})),i=G(o,n.promotions);e({program:a,courses:o,tags:i})}else r("Program is not found")}))},reject:function(e){return e.nav.navigate("error404")}},error404:{Page:function(t){var n=t.route.data;return e.createElement("div",{className:"w3-container"},e.createElement("h3",{className:"w3-text-red"}," Error ",n.code," "),e.createElement("p",null," ",n.message," "))},url:"/error/404",title:"Error {{code}}",data:{code:404,message:"Page not found"}}};function ue(){return(ue=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function se(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var ce={Desktop:n(737).Z,Mobile:n(814).Z};function fe(t){var n,r,a=(n=(0,e.useState)(!1),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}}(n,r)||function(e,t){if(e){if("string"==typeof e)return se(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?se(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[0],i=a[1];return(0,e.useEffect)((function(){return window.addEventListener("scroll",l),function(){return window.removeEventListener("scroll",l)}})),e.createElement("div",{className:"w3-top",style:{display:t.visible?"block":"none"}},e.createElement("div",{className:"w3-hide-small w3-hide-medium",style:{position:"relative",marginBottom:"32px"}},e.createElement(ce.Desktop,ue({isScrollDown:o},t))),e.createElement("div",{className:"w3-hide-large",style:{position:"relative",marginBottom:"32px"}},e.createElement(ce.Mobile,ue({isScrollDown:o},t))));function l(){window.pageYOffset>0?!1===o&&i(!0):!0===o&&i(!1)}}function de(){return(de=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function pe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function he(t){var n,r,a=(n=(0,e.useState)(!0),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(a)throw o}}return n}}(n,r)||function(e,t){if(e){if("string"==typeof e)return pe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?pe(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[0],i=a[1];return e.createElement(K.d,{accountClient:t.accountClient},e.createElement(fe,{programs:t.programs,visible:o}),e.createElement(Q.C3,de({routes:le,initialRoute:"home",fallbackRoute:"error404",onChangeRoute:function(e){o&&/error/.test(e.url)?i(!1):o||/error/.test(e.url)||i(!0)}},t)))}B.use(H.Db).init({resources:W,lng:"vi",fallbackLng:"en",interpolation:{escapeValue:!1}});var ge=new q.Z({app:"dev",baseurl:"https://studiha.github.io/",session:"_r_s_sess_"});ge.on("authenticating",(function(){console.log("--\x3e authenticating...")})).on("authenticated",(function(e){console.log("--\x3e authenticated"),console.log(e)})).on("unauthenticated",(function(){console.log("--\x3e unauthenticated")})),ge.sso(),(0,t.render)(e.createElement(he,{accountClient:ge,programs:[{id:"emb",title:"Embedded System Engineering",description:"blank",courses:["c-01","c-02"]},{id:"linux",title:"Embedded Linux Developer",description:"blank",courses:["c-01","c-02","c-03","c-04"]}],courses:[{id:"c-01",title:"Beginning Embedded C Programming",snippet:"C Programming for beginner, good for one who want to learn about C and Embedded Programming",thumbnail:"https://cdn-images-1.medium.com/max/1200/1*z8cxJptPtl2JEERdYXChkQ.png",level:1,tags:["best"],price:499e3,skills:["C Programming","ARM Programming"]},{id:"c-02",title:"Applied C for Embedded ARM System",snippet:"Advanced C Programming, ARM embedded processor and with pratice on famous STM32 series",thumbnail:"https://cdn-images-1.medium.com/max/1200/1*z8cxJptPtl2JEERdYXChkQ.png",level:2,tags:["best"],price:699e3,skills:["C Programming","ARM Programming"]},{id:"c-03",title:"Embedded programming with STM32",snippet:"C Programming for beginner, good for one who want to learn about C and Embedded Programming",thumbnail:"https://cdn-images-1.medium.com/max/1200/1*z8cxJptPtl2JEERdYXChkQ.png",level:1,price:499e3,skills:["C Programming","ARM Programming"]},{id:"c-04",title:"Embedded programming with CMSIS",snippet:"Advanced C Programming, ARM embedded processor and with pratice on famous STM32 series",thumbnail:"https://cdn-images-1.medium.com/max/1200/1*z8cxJptPtl2JEERdYXChkQ.png",level:2,tags:["new"],price:699e3,skills:["C Programming","ARM Programming"]}],promotions:[{id:"newyear",type:"discount",scopes:[{courseId:"c-01",value:1e5},{courseId:"c-02",value:1e5}]},{id:"giveboard",type:"gift",scopes:[{courseId:"c-02",value:"board01"}]}]}),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,