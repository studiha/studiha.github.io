/*! For license information please see app.js.LICENSE.txt */
(()=>{var e={700:e=>{(()=>{var t={670:(e,t,n)=>{"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n.d(t,{Z:()=>r})},816:(e,t,n)=>{"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}n.d(t,{Z:()=>o})},949:(e,t,n)=>{"use strict";function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,{Z:()=>r})},253:(e,t,n)=>{"use strict";t.Z=void 0;var r,o=n(283),a=(r=n(57))&&r.__esModule?r:{default:r};function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.validateProps(t),this.initProps(t),this.iframe=new a.default({baseurl:this._props.baseurl}),this._eventHandlers={},["sso","signinLocally","signup","signin","signout","signoutLocally"].forEach((function(e){return n[e]=n[e].bind(n)}))}var t;return(t=[{key:"get",value:function(e){return this._props[e]}},{key:"set",value:function(e){if((0,o.isNotObject)(e))throw new Error("Require props to be an Object");for(var t in e)this._props[t]=e[t];return this}},{key:"validateProps",value:function(e){if(!e.baseurl)throw new Error("missing prop: baseurl");if(!e.app)throw new Error("missing prop: app");if(!e.session)throw new Error("missing prop: session")}},{key:"initProps",value:function(e){this._props={},this.set(e),this.setDefaulProps()}},{key:"setDefaulProps",value:function(){this._props.timeout||(this._props.timeout=5e4),this._props.cookie||(this._props.cookie=!1)}},{key:"emit",value:function(e){for(var t=this,n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return this._eventHandlers[e]&&this._eventHandlers[e].forEach((function(e){return e.call.apply(e,[t].concat(r))})),this}},{key:"on",value:function(e,t){return this._eventHandlers[e]||(this._eventHandlers[e]=[]),this._eventHandlers[e].push(t),this}},{key:"sso",value:function(e){var t=this;return new Promise((function(n,r){t.emit("authenticating"),t._setTimeout(e,r),t.iframe.open({path:"/session",query:{app:t.get("app")},onLoaded:function(){return t._clearTimeout()},done:function(o){return t.onSSOFormResolved(o,e,n,r)}})}))}},{key:"onSSOFormResolved",value:function(e,t,n,r){e&&200==e.status?this.processSignedIn(e,t,n,r):e&&404==e.status?this.processSigningout(t,n,r):(t&&t("# Error in SSO: something wrong in account-server configuration"),r("# Error in SSO: something wrong in account-server configuration"))}},{key:"signup",value:function(e){var t=this;return new Promise((function(n,r){t._setTimeout(e,r),t.iframe.open({path:"/form",query:{name:"signup",app:t.get("app")},props:{display:"block"},onLoaded:function(){return t._clearTimeout()},done:function(o){return t.onAuthenFormResolved(o,e,n,r,"SIGN-UP")}})}))}},{key:"signin",value:function(e){var t=this;return new Promise((function(n,r){t._setTimeout(e,r),t.iframe.open({path:"/form",query:{name:"signin",app:t.get("app"),height:415},props:{display:"block"},onLoaded:function(){return t._clearTimeout()},done:function(o){return t.onAuthenFormResolved(o,e,n,r,"SIGN-IN")}})}))}},{key:"processSignedIn",value:function(e,t,n,r){var o=this;this.setLocalSession(e.session).then((function(){o.emit("authenticated",e.session.user),t&&t(null,e.session.user),n(e.session.user)})).catch((function(e){return r(e)}))}},{key:"onAuthenFormResolved",value:function(e,t,n,r,o){e&&200==e.status?this.processSignedIn(e,t,n,r):e&&"iframe.close"===e.code?(t&&t(null,!1),r(!1)):(t&&t("# Error in ".concat(o,": something wrong in account-server configuration")),r("# Error in ".concat(o,": something wrong in account-server configuration")))}},{key:"signout",value:function(e){var t=this;return new Promise((function(n,r){t._setTimeout(e,r),t.iframe.open({path:"/form",query:{name:"signout",app:t.get("app"),sid:t.getLocalSession().sid},onLoaded:function(){return t._clearTimeout()},done:function(o){return t.onSignoutFormResolved(o,e,n,r)}})}))}},{key:"onSignoutFormResolved",value:function(e,t,n,r){e&&200==e.status?this.processSigningout(t,n,r):(t&&t("# Error in SIGN-OUT: received ".concat(e&&e.status)),r("# Error in SIGN-OUT: received ".concat(e&&e.status)))}},{key:"signoutLocally",value:function(e){var t=this;return new Promise((function(n,r){return t.processSigningout(e,n,r)}))}},{key:"processSigningout",value:function(e,t,n){var r=this;this.clearLocalSession().then((function(){r.emit("unauthenticated"),e&&e(null,void 0),t(void 0)})).catch((function(t){e&&e(t),n(t)}))}},{key:"signinLocally",value:function(e){var t=this;return new Promise((function(n,r){"undefined"==typeof Storage&&(e&&e("No Web Storage support"),r("No Web Storage support"));var o=JSON.parse(localStorage.getItem(t.get("session")));o&&o.user&&o.token?t.processSignedIn({session:o},e,n,r):(t.emit("unauthenticated"),e&&e(404,void 0),n(void 0))}))}},{key:"clearLocalSession",value:function(){var e=this;return new Promise((function(t,n){e.set({user:void 0,token:void 0}),"undefined"==typeof Storage&&n("No Web Storage support"),localStorage.removeItem(e.get("session")),t()}))}},{key:"setLocalSession",value:function(e){var t=this;return new Promise((function(n,r){t.set(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e)),"undefined"==typeof Storage&&r("No Web Storage support"),localStorage.setItem(t.get("session"),JSON.stringify(e)),n()}))}},{key:"getLocalSession",value:function(){if("undefined"==typeof Storage)throw Error("No Web Storage support");return JSON.parse(localStorage.getItem(this.get("session")))}},{key:"_setTimeout",value:function(e,t){var n=this,r=this.get("timeout")||this.get("timeout");this._to=setTimeout((function(){n.iframe.close(),e&&e("503 Request Timeout. No response from the server",null),t&&t("503 Request Timeout. No response from the server")}),r)}},{key:"_clearTimeout",value:function(){clearTimeout(this._to)}}])&&function(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}(e.prototype,t),e}();t.Z=u},57:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(283);function o(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var i=function(){function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t||!t.baseurl)throw new Error("Iframe instance requires baseurl!");var n=t.baseurl;this.baseurl=n.replace(/\/+$/,""),this._lazyFn=[],this._done=null,this._onIframeLoaded=null,this._iframeClosed=!0,this._iframe=null,this.messageHandler={"iframe.loaded":this.handleIframeMessage("Loaded"),"iframe.close":this.handleIframeMessage("Close"),"iframe.done":this.handleIframeMessage("Done")},document.addEventListener("DOMContentLoaded",this.processAfterDomReady.bind(this),!1),window.addEventListener("message",this.processIframeMessage.bind(this),!1)}var t;return(t=[{key:"processAfterDomReady",value:function(){this._lazyFn.forEach((function(e){return e.fn.apply(e,o(e.args))})),this._lazyFn=[]}},{key:"processIframeMessage",value:function(e){if(e.origin===this.baseurl){var t=e.data;this.messageHandler[t.code](t)}}},{key:"handleIframeMessage",value:function(e){return this["handleMessageIframe".concat(e)].bind(this)}},{key:"handleMessageIframeLoaded",value:function(e){this._iframe&&(this._iframe.style.height=e.height+"px",this._iframe.style.width="95%",this._iframe.style["max-width"]=e.width+"px",this._onIframeLoaded&&this._onIframeLoaded())}},{key:"handleMessageIframeClose",value:function(e){this._closeIframe(),this._done&&this._done(e)}},{key:"handleMessageIframeDone",value:function(e){if(this._closeIframe(),this._done&&this._done(e),this._lazyFn.length>0){var t=this._lazyFn.pop();t.fn.apply(t,o(t.args))}}},{key:"open",value:function(e){var t=e.path,n=e.query,r=e.props,o=e.onLoaded,a=e.done;this._lazyExecute((function(e){var t=e.path,n=e.query,r=e.props,a=e.done,i=this._constructURL(t,n);this._openIframe(i,r),this._onIframeLoaded=o,this._done=a}),{path:t,query:n,props:r,done:a})}},{key:"close",value:function(){this._closeIframe()}},{key:"_openIframe",value:function(e,t){this._iframeClosed=!1;var n=document.getElementById("__".concat(this.baseurl,"__container__"));n||((n=document.createElement("div")).setAttribute("id","__".concat(this.baseurl,"__container__")),document.getElementsByTagName("body")[0].appendChild(n));var r=document.createElement("iframe");if(r.src=e,r.setAttribute("id","__".concat(this.baseurl,"__iframe__")),t)for(var o in t)"display"!==o&&(r.style[o]=t[o]);r.style.display=t&&t.display?t.display:"none",r.style.border="none",r.style.margin="45px auto",r.style.width=0,r.style.height=0;var a=document.createElement("div");a.style.position="fixed",a.style.width="100%",a.style.height="100%",a.style.top=0,a.style.zIndex=1,t&&t.display&&(a.style["background-color"]="rgba(0,0,0,0.5)"),a.style["-webkit-overflow-scrolling"]="touch",a.style["overflow-y"]="scroll",a.appendChild(r),n.appendChild(a),this._iframe=r}},{key:"_closeIframe",value:function(){document.getElementById("__".concat(this.baseurl,"__container__")).innerHTML="",this._iframeClosed=!0,this._iframe=null}},{key:"_lazyExecute",value:function(e){e=e.bind(this);for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];this._isDomContentLoaded()&&this._iframeClosed?e.apply(void 0,n):this._lazyFn.push({fn:e,args:n})}},{key:"_isDomContentLoaded",value:function(){return"complete"===document.readyState||"loaded"===document.readyState}},{key:"_constructURL",value:function(e,t){if(e=e.replace(/^\/+|\/+$/gm,"").replace(/\/\//gm,"/"),(0,r.isObject)(t)){var n="?";for(var o in t)n+="".concat(o,"=").concat(t[o],"&");return n=n.replace(/&+$/,""),"".concat(this.baseurl,"/").concat(e).concat(n)}return"".concat(this.baseurl,"/").concat(e)}}])&&function(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}(e.prototype,t),e}();t.default=i},283:e=>{"use strict";function t(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function n(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var r={}.toString,o={};["Arguments","Array","Function","String","Number","Date","RegExp","Object"].forEach((function(e){o["is".concat(e)]=function(t){return t&&r.call(t)=="[object ".concat(e,"]")},o["isNot".concat(e)]=function(t){return t&&r.call(t)!="[object ".concat(e,"]")}})),e.exports=function(e){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?t(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}({},o)},693:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==g(e)&&"function"!=typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=r?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(n,o,a):n[o]=e[o]}return n.default=e,t&&t.set(e,n),n}(n(294)),o=s(n(108)),a=s(n(449)),i=n(393),l=s(n(906)),u=n(858);function s(e){return e&&e.__esModule?e:{default:e}}function c(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function f(e){return function(e){if(Array.isArray(e))return d(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){m(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t,n){return t&&y(e.prototype,t),n&&y(e,n),e}function w(e){return function(){var t,n=_(e);if(S()){var r=_(this).constructor;t=Reflect.construct(n,arguments,r)}else t=n.apply(this,arguments);return k(this,t)}}function k(e,t){return!t||"object"!==g(t)&&"function"!=typeof t?E(e):t}function E(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function S(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function _(e){return(_=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function x(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&C(e,t)}function C(e,t){return(C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var O=(0,s(n(33)).default)(),P=new a.default,N=function(e){x(n,e);var t=w(n);function n(e){return v(this,n),t.call(this,e)}return b(n,[{key:"componentDidMount",value:function(){this.props.fire("load"),this.props.onPageRendered&&this.props.onPageRendered(this.props.route),this.props.active&&(this.props.fire("enter"),this.props.onEnterPage&&this.props.onEnterPage(this.props.route))}},{key:"componentDidUpdate",value:function(e){this.props.active&&!e.active&&(this.props.fire("enter"),this.props.onEnterPage&&this.props.onEnterPage(this.props.route))}},{key:"render",value:function(){return this.props.children}}]),n}(r.Component),j=function(e){x(n,e);var t=w(n);function n(e){return v(this,n),t.call(this,e)}return b(n,[{key:"render",value:function(){return r.default.createElement("div",{className:"rjs-react-nav-modal",style:{display:this.props.show?"block":"none"}},this.props.children)}}]),n}(r.Component),L=function(e){x(n,e);var t=w(n);function n(){return v(this,n),t.apply(this,arguments)}return b(n,[{key:"render",value:function(){var e={display:this.props.show?"block":"none",position:"fixed",width:"100%",left:0,opacity:this.props.opacity||.9};this.props.bottom?e.bottom=0:e.top=0;var t=this.props.bottom?(0,l.default)("float-bottom","0.4s"):(0,l.default)("float-top","0.4s");return r.default.createElement("div",{style:h({},e,{},t)},r.default.createElement("div",{style:{position:"relative"}},this.props.children))}}]),n}(r.Component),R=function(e){x(n,e);var t=w(n);function n(e){var r;v(this,n),(r=t.call(this,e)).__validateProps(e),r.state={routeStack:[],activeRouteName:r.__findInitialRouteName(),showPopup:{},toasts:{top:[],bottom:[]}},r.__supportedPageEvents=["load","beforeEnter","enter","leave","unload"],r.__events={},r.__registeredRoutes={},r.__registerRoutes(h({},e.routes)),r.__popupStack={},r.__global={popup:function(e,t,n){return r.__createPopup("__global",e,t,n)}};var a=r.__registeredRoutes[r.state.activeRouteName];return e.noUrl||!a||P.matchUrlPath(a.url)||P.push(a.url),r.nav={navigate:r.navigate.bind(E(r))},e.routeHandler&&e.routeHandler(r.nav),r.__createInjectPage=r.__createInjectPage.bind(E(r)),r.__fire=r.__fire.bind(E(r)),r.__createPopup=r.__createPopup.bind(E(r)),r.onPopState=r.onPopState.bind(E(r)),r.handleClickOnModal=r.handleClickOnModal.bind(E(r)),(0,u.appendStyle)(),o.default.register(E(r)),window.addEventListener("popstate",r.onPopState),r}return b(n,[{key:"onPopState",value:function(){var e="/"+P.getPathName(),t=f(this.state.routeStack),n=t.findIndex((function(t){return t.url===e}));if(-1!==n){var r=t.slice(n,n+1)[0];t.splice(n,1),t.unshift(r),this.__fire(t[1].name,t[1].uid,"leave"),this.__fire(t[0].name,t[0].uid,"beforeEnter"),this.setState({routeStack:t})}}},{key:"componentDidMount",value:function(){var e=this;this.__initRouteStack().then((function(t){var n=t[0].name,r=(0,i.makeTitle)(e.__registeredRoutes[n].title,t[0].params,t[0].data);r&&(document.title=r),e.setState({routeStack:t,activeRouteName:n})}))}},{key:"componentWillUnmount",value:function(){o.default.destroy(),this.props.routeHandler&&this.props.routeHandler(null),window.removeEventListener("popstate",this.onPopState)}},{key:"render",value:function(){var e=this;return r.default.createElement("div",null,this.state.routeStack.map((function(t,n){var o=t.name,a=t.url,i=t.page,l=t.data,u=t.params,s=t.uid,c=0===n?"block":"none",f={url:a,data:l,params:u,isActive:0===n},d=e.__registeredRoutes[o].Page;return r.default.createElement("div",{key:s,style:{display:c}},r.default.createElement(N,{fire:function(t){return e.__fire(o,s,t)},active:0===n,onPageRendered:e.props.onPageRendered,onEnterPage:e.props.onEnterPage,route:f},r.default.createElement(d,h({route:f,nav:e.nav,page:i},e.props))),r.default.createElement(j,{show:e.state.showPopup[o]},e.__popupStack[o]&&e.__popupStack[o].map((function(t,n){return t.self.overlay?r.default.createElement("div",{key:n,className:"rjs-react-nav-modal",style:{display:"block"},onClick:function(n){return e.handleClickOnModal(t.self)}},r.default.createElement("div",{onClick:function(e){return e.stopPropagation()}}," ",r.default.createElement(t.Popup,h({self:t.self},e.props,{page:i}))," ")):r.default.createElement("div",{key:n,className:"rjs-react-nav-model-content"},r.default.createElement(t.Popup,h({self:t.self},e.props,{page:i})))}))))})),r.default.createElement(j,{show:this.state.showPopup.__global},this.__popupStack.__global&&this.__popupStack.__global.map((function(t,n){return t.self.overlay?r.default.createElement("div",{key:n,className:"rjs-react-nav-modal",style:{display:"block"},onClick:function(n){return e.handleClickOnModal(t.self)}},r.default.createElement("div",{onClick:function(e){return e.stopPropagation()}}," ",r.default.createElement(t.Popup,h({self:t.self},e.props,{page:e.__global}))," ")):r.default.createElement("div",{key:n,className:"rjs-react-nav-model-content"},r.default.createElement(t.Popup,h({self:t.self},e.props,{page:e.__global})))}))),r.default.createElement(L,{show:this.state.toasts.top.length>0,top:!0},this.state.toasts.top.map((function(e,t){var n=e.animateClosing?(0,l.default)("fade-out",e.animateClosing):{};return r.default.createElement("div",{key:t,style:n},r.default.createElement(e.Toast,{self:e.self}))}))),r.default.createElement(L,{show:this.state.toasts.bottom.length>0,bottom:!0},this.state.toasts.bottom.map((function(e,t){var n=e.animateClosing?(0,l.default)("fade-out",e.animateClosing):{};return r.default.createElement("div",{key:t,className:"rjs-react-nav-card-4",style:n},r.default.createElement(e.Toast,{self:e.self}))}))))}},{key:"__validateProps",value:function(e){if(e.noUrl&&!e.initialRoute)throw new Error("Error: Validate props failed: 'initialRoute' is required when 'noUrl' set to true");if(e.initialRoute&&!e.routes[e.initialRoute])throw new Error("Error: Validate props failed: 'initialRoute' is not listed in 'routes'");if(e.noUrl||e.fallbackRoute||console.warn("Warning: Validate props: Missing 'fallbackRoute'!"),e.fallbackRoute&&!e.routes[e.fallbackRoute])throw new Error("Error: Validate props failed: 'fallbackRoute' is not listed in 'routes'")}},{key:"__validateRoutes",value:function(e){for(var t in e){var n=e[t];if(!n.redirect&&!n.Page)throw new Error("Invalid route object: missing 'Page' in route '".concat(t,"'"));if(!this.props.noUrl&&!n.url)throw new Error("Invalid route object: missing 'url' in route '".concat(t,"'"))}}},{key:"__findInitialRouteName",value:function(){return this.props.noUrl?this.props.initialRoute:this.__findRouteNameFromURL()||this.props.fallbackRoute}},{key:"__findRouteNameFromURL",value:function(){if(!this.props.noUrl)for(var e in this.props.routes){var t=this.props.routes[e];if(t.url&&P.matchUrlPath(t.url))return t.redirect||e}}},{key:"__initRouteStack",value:function(){var e=this;return new Promise((function(t,n){e.__createInitRoute().then((function(n){var r=e.__loadRouteStackFromSessionStorage().filter((function(e){return!(0,i.isSameRoute)(e,n.name,n.params)}));r.unshift(n),t(r)})).catch((function(e){return n(e)}))}))}},{key:"__createInitRoute",value:function(){var e=this;return new Promise((function(t,n){var r=e.__findInitialRouteName(),o=e.props.routes[r],a=e.props.noUrl?void 0:P.extractUrlParams(o.url),l=P.buildUrlPath(o.url,a),u=(0,i.createRouteUid)(r,a),s=e.__createInjectPage(r,u);(0,i.isFunction)(o.data)?o.data({params:a,props:e.props}).then((function(n){o.resolve&&o.resolve(n),e.props.onChangeRoute&&e.props.onChangeRoute({name:r,url:l,params:a,data:n,options:o.options}),t({name:r,url:l,page:s,params:a,data:n,uid:u})})).catch((function(t){o.reject&&o.reject({err:t,nav:e.nav}),n(t)})):(e.props.onChangeRoute&&e.props.onChangeRoute({name:r,url:l,params:a,data:o.data,options:o.options}),t({name:r,url:l,page:s,params:a,data:o.data,uid:u}))}))}},{key:"__registerRoutes",value:function(e){for(var t in this.__validateRoutes(e),e){var n=e[t];this.__registeredRoutes[t]=n}this.__bindPageEvent(e)}},{key:"__createInjectPage",value:function(e,t,n){var r=this,o={on:function(n,o){-1!==r.__supportedPageEvents.indexOf(n)&&r.__events[e][n].push({uid:t,handler:o})},popup:function(t,n,o){return r.__createPopup(e,t,n,o)},deleteAllPopups:function(){return r.__deleteAllPopups(e)},data:n&&n.data||void 0};return this.__supportedPageEvents.forEach((function(e){return o["on".concat((0,i.capitalize)(e))]=function(t){return o.on(e,t)}})),o}},{key:"__bindPageEvent",value:function(e){var t=this,n=function(e){t.__events[e]={},t.__supportedPageEvents.forEach((function(n){return t.__events[e][n]=[]}))};for(var r in e)n(r)}},{key:"__fire",value:function(e,t,n){this.__events[e][n]?this.__events[e][n].forEach((function(e){return e.uid===t&&e.handler()})):console.error("event ".concat(n," is not supported"))}},{key:"navigate",value:function(e,t){var n=this;return new Promise((function(r,o){if(n.__registeredRoutes[e]){var a=t&&t.params||{};if(!(0,i.isSameRoute)(n.state.routeStack[0],e,a)){var l=n.__registeredRoutes[e];return(0,i.isFunction)(l.data)?l.data({params:a,props:n.props}).then((function(e){l.resolve&&l.resolve(e),u.bind(n)(e)})).catch((function(e){l.reject&&l.reject({err:e,nav:n.nav}),o(e)})):u.bind(n)(l.data)}r()}else o("Route ".concat(e," is not registered!"));function u(n){var r=this;return new Promise((function(o){r.__registeredRoutes[e].redirect&&(e=r.__registeredRoutes[e].redirect),r.state.routeStack[0]&&r.__fire(r.state.activeRouteName,r.state.routeStack[0].uid,"leave");var l=f(r.state.routeStack).filter((function(t){return!(0,i.isSameRoute)(t,e,a)})),u=P.buildUrlPath(r.__registeredRoutes[e].url,a),s=(0,i.createRouteUid)(e,a),c=r.__createInjectPage(e,s,t);l.unshift({name:e,url:u,page:c,data:n,params:a,uid:s});var d=e;if(r.__fire(d,s,"beforeEnter"),r.setState({routeStack:l,activeRouteName:d}),r.props.noUrl||t&&t.noUpdateUrl||!r.__registeredRoutes[e].url)return r.props.onChangeRoute&&r.props.onChangeRoute({name:e,url:u,params:a,data:n,options:r.__registeredRoutes[e].options}),void o();var p=(0,i.makeTitle)(r.__registeredRoutes[e].title,a,n);t&&t.reload?P.set(u,p):P.push(u,p),r.__saveRouteStackToSessionStorage(),r.props.onChangeRoute&&r.props.onChangeRoute({name:e,url:u,params:a,data:n,options:r.__registeredRoutes[e].options}),o()}))}}))}},{key:"__createPopup",value:function(e,t,n,r){var o=this;return new Promise((function(a,l){var u={};(0,i.isFunction)(n)?r=n:u=h({},n),u.resolve=function(t){return o.__popupResolve(e,t,u)},u.reject=function(t){return o.__popupReject(e,t,u)},o.__popupStack[e]||(o.__popupStack[e]=[]),o.__popupStack[e].push({Popup:t,self:u,resolve:a,reject:l});var s=h({},o.state.showPopup);s[e]=!0,o.setState({showPopup:s}),O.disable(),r&&r({resolve:u.resolve,reject:u.reject})}))}},{key:"__popupResolve",value:function(e,t,n){if(this.__popupStack[e]&&this.__popupStack[e].length>0){var r=this.__popupStack[e].findIndex((function(e){return e.self===n}));if(-1===r)return;var o=this.__popupStack[e].splice(r,1)[0].resolve,a=h({},this.state.showPopup);a[e]=0!=this.__popupStack[e].length,this.setState({showPopup:a}),o&&o(t),O.enable()}}},{key:"__popupReject",value:function(e,t,n){if(this.__popupStack[e]&&this.__popupStack[e].length>0){var r=this.__popupStack[e].findIndex((function(e){return e.self===n}));if(-1===r)return;var o=this.__popupStack[e].splice(r,1)[0].reject,a=h({},this.state.showPopup);a[e]=0!=this.__popupStack[e].length,this.setState({showPopup:a}),o&&o(t),O.enable()}}},{key:"__deleteAllPopups",value:function(e){if(this.__popupStack[e]&&this.__popupStack[e].length>0){delete this.__popupStack[e];var t=h({},this.state.showPopup);t[e]=!1,this.setState({showPopup:t})}}},{key:"__createToast",value:function(e,t,n){var r=this,o={};"[object Function]"==Object.prototype.toString.call(t)?n=t:o=h({},t),o.close=function(){return r.__animateCloseToast(o,t&&t.bottom?"bottom":"top")};var a=f(this.state.toasts.top),i=f(this.state.toasts.bottom);t&&t.bottom?i.unshift({Toast:e,self:o}):a.unshift({Toast:e,self:o});var l={top:a,bottom:i};this.setState({toasts:l}),n&&n(o)}},{key:"__animateCloseToast",value:function(e,t){var n=this;if("top"!==t.toLowerCase()&&"bottom"!==t.toLowerCase())throw new Error("Invalid toast position, it must be either top or bottom");if(this.state.toasts[t.toLowerCase()].length>1)this.__closeToast(e,t);else{var r={top:f(this.state.toasts.top),bottom:f(this.state.toasts.bottom)};r[t.toLowerCase()]=this.state.toasts[t.toLowerCase()].map((function(t){return t.self===e?{Toast:t.Toast,self:e,animateClosing:"0.4s"}:t})),this.setState({toasts:r}),setTimeout((function(){n.__closeToast(e,t)}),400)}}},{key:"__closeToast",value:function(e,t){var n={top:f(this.state.toasts.top),bottom:f(this.state.toasts.bottom)},r=n[t.toLowerCase()].findIndex((function(t){return t.self===e}));-1!==r&&(n[t.toLowerCase()].splice(r,1),this.setState({toasts:n}))}},{key:"__saveRouteStackToSessionStorage",value:function(){var e=this.state.routeStack.map((function(e){return{name:e.name,url:e.url,data:e.data,params:e.params,uid:e.uid,pageData:e.page.data||void 0}}));sessionStorage.setItem("__routestack_",JSON.stringify(e))}},{key:"__loadRouteStackFromSessionStorage",value:function(){var e=this,t=JSON.parse(sessionStorage.getItem("__routestack_"))||[];return t.forEach((function(t){t.page=e.__createInjectPage(t.name,t.uid,{data:t.pageData}),delete t.pageData})),t}},{key:"handleClickOnModal",value:function(e){e.onClickOverlay&&e.onClickOverlay(e)}}]),n}(r.Component);R.__rjsWidgetType="navigator";var T=R;t.default=T},906:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){var r={animationName:"rjs-react-nav-animate-".concat(e)};return t&&(r.animationDuration=t),n&&(r.animationDirection=n),r}},33:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){var e=document.body.style.cssText||null;return{enable:function(){var t=document.body.style.top;document.body.style.cssText=e,window.scrollTo(0,-1*parseInt(t||"0"))},disable:function(){e=document.body.style.cssText,document.body.style.cssText="; overflow: hidden; position: fixed;  width: 100%; top: -".concat(window.scrollY,"px ")}}}},449:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.__handlers={hashChange:[],popState:[]},this.__defaultTitle=document.title,this.push=function(e,n,r){history.pushState(r,"",e),document.title=n||t.__defaultTitle},window.addEventListener("hashchange",(function(e){t.__handlers.hashChange.forEach((function(t){return t(e)}))}),!1),window.addEventListener("popstate",(function(e){t.__handlers.popState.forEach((function(t){return t(e)}))}),!1)}var t;return(t=[{key:"getPathName",value:function(){return this.__matchFromURL(3).replace(/#.*$/,"").split("?")[0]}},{key:"getUrl",value:function(){return this.__matchFromURL(0)}},{key:"getProtocol",value:function(){return this.__matchFromURL(1).replace(/:.*$/,"")}},{key:"getHost",value:function(){return this.__matchFromURL(2)}},{key:"__matchFromURL",value:function(e){return window.location.href.replace(/(\/)\1+/g,"/").replace(/:(?=\/)/,":/").match(/(http[s]?:\/\/)?([^\/\s]+\/)(.*)/)[e].replace(/\/$/,"")}},{key:"getQuery",value:function(){var e=window.location.href.split("?");if(e[1]){var t={};return e[1].split("&").forEach((function(e){var n=e.split("=");n[0]&&(t[n[0]]=n[1]&&n[1].replace(/#.*$/,"")||void 0)})),t}}},{key:"getBookmark",value:function(){return window.location.href.split("#")[1]||""}},{key:"set",value:function(e,t){location.href=e,document.title=t}},{key:"on",value:function(e,t){if("hashChange"!==e&&"popState"!==e)throw new Error("only accept hashChange and popState in href.on");this.__handlers[e].push(t)}},{key:"matchUrlPath",value:function(e){var t=this.getPathName().split("/").filter((function(e){return e.length>0})).map((function(e){return e.trim().toLowerCase()})),n=e.split("/").filter((function(e){return e.length>0})).map((function(e){return e.trim().toLowerCase()}));if(n.length!==t.length)return!1;for(var r=0;r<n.length;r++)if(!/^:/.test(n[r])&&n[r]!==t[r])return!1;return!0}},{key:"buildUrlPath",value:function(e,t){for(var n=e.split("/").filter((function(e){return e.length>0})).map((function(e){return e.trim().toLowerCase()})),r="",o=0;o<n.length;o++)if(/^:/.test(n[o])){var a=n[o].split(":").pop();if(!t||!t[a])throw new Error("Missing value for ".concat(n[o]," in ").concat(e));r+="/".concat(t[a])}else r+="/".concat(n[o]);return 0===r.length?"/":r}},{key:"extractUrlParams",value:function(e){for(var t=this.getPathName().split("/").filter((function(e){return e.length>0})),n=e.split("/").filter((function(e){return e.length>0})).map((function(e){return e.trim().toLowerCase()})),r={},o=0;o<n.length;o++)/^:/.test(n[o])&&(r[n[o].split(":").pop()]=t[o]);return r}},{key:"setDefaultTitle",value:function(e){this.__defaultTitle=e}}])&&function(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}(e.prototype,t),e}();t.default=n},642:(e,t,n)=>{"use strict";Object.defineProperty(t,"C3",{enumerable:!0,get:function(){return r.default}}),Object.defineProperty(t,"$n",{enumerable:!0,get:function(){return o.default}});var r=a(n(693)),o=a(n(108));function a(e){return e&&e.__esModule?e:{default:e}}a(n(449))},108:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n={__isNavRegistered:!1,__popup:null,__route:null,register:function(e){if(this.__isNavRegistered)throw new Error("Only one Navigator can be registered!");this.__isNavRegistered=!0,this.__popup=function(t,n,r){return e.__createPopup("__global",t,n,r)},this.__nav=e.nav,this.__toast=function(t,n,r){return e.__createToast(t,n,r)}},destroy:function(){this.__isNavRegistered=!1,this.__popup=null,this.__nav=null,this.__toast=null},popup:function(e,t,n){return null===this.__popup?Promise.reject("Navigator is not mounted or has been destroyed"):this.__popup(e,t,n)},navigate:function(e,t){return null===this.__nav?Promise.reject("Navigator is not mounted or has been destroyed"):this.__nav.navigate(e,t)},toast:function(e,t,n){return null===this.__toast?Promise.reject("Navigator is not mounted or has been destroyed"):this.__toast(e,t,n)}};t.default=n},858:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.appendStyle=function(){if(!document.getElementById("__rjs-react-nav-style")){var e=document.getElementsByTagName("head")[0],t=document.createElement("style");t.setAttribute("type","text/css"),t.setAttribute("id","__rjs-react-nav-style"),t.appendChild(document.createTextNode("\n.rjs-react-nav-modal{z-index:3;display:none;padding-top:100px;position:fixed;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:rgb(0,0,0);background-color:rgba(0,0,0,0.4)}\n.rjs-react-nav-modal-content{margin:auto;background-color:#fff;position:relative;padding:0;outline:0;width:600px}\n.rjs-react-nav-card-4,.w3-hover-shadow:hover{box-shadow:0 4px 10px 0 rgba(0,0,0,0.2),0 4px 20px 0 rgba(0,0,0,0.19)}\n")),t.appendChild(document.createTextNode("\n@keyframes rjs-react-nav-animate-float-top {from{top:-300px;opacity:0} to{top:0;opacity:1}}\n@keyframes rjs-react-nav-animate-float-bottom {from{bottom:-300px;opacity:0} to{bottom:0;opacity:1}}\n@keyframes rjs-react-nav-animate-fade-in { from{opacity:0;} to{opacity:1;}}\n@keyframes rjs-react-nav-animate-fade-out { from{opacity:1;} to{opacity:0;}}\n")),e.appendChild(t)}}},393:(e,t)=>{"use strict";function n(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(var n in e)if(e[n]!==t[n])return!1;return!0}function r(e,t){var n="param"===t?e.match(/\{:(\w+)\}/g):e.match(/\{\{(.+)\}\}/g);return n?n.map((function(e){return e.replace(/\{|:|\}/g,"")})):[]}function o(e,t){var n=t.split("."),r=e[n[0]];return 1===n.length?r:o(r,t.replace(/^\w*\./,""))}Object.defineProperty(t,"__esModule",{value:!0}),t.capitalize=function(e){return e.charAt(0).toUpperCase()+e.slice(1)},t.isFunction=function(e){return e&&"[object Function]"==={}.toString.call(e)},t.isSameRoute=function(e,t,r){return!!e&&e.name===t&&(void 0===e.params&&void 0===r||!(!e.params||!r||!0!==n(e.params,r)))},t.compareObject=n,t.createRouteUid=function(e,t){for(var n="".concat(e,"_"),r=Object.keys(t).sort((function(e,t){return e.firstname.localeCompare(t.firstname)})),o=0;o<r.length;o++)n+="".concat(t[r[o]],"*");return n},t.makeTitle=function(e,t,n){if(e){if(!t&&!n)return e;var a=e;return t&&r(e,"param").forEach((function(e){a=a.replace(new RegExp("{:".concat(e,"}")),t[e])})),n&&r(e,"data").forEach((function(e){a=a.replace(new RegExp("{{".concat(e,"}}")),o(n,e))})),a}}},395:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var i in e)if(Object.prototype.hasOwnProperty.call(e,i)){var l=r?Object.getOwnPropertyDescriptor(e,i):null;l&&(l.get||l.set)?Object.defineProperty(n,i,l):n[i]=e[i]}return n.default=e,t&&t.set(e,n),n}(n(277));function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var u=function(e){function t(e){var n,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=i(t).call(this,e),n=!r||"object"!==a(r)&&"function"!=typeof r?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(this):r).state={user:null},n}var n;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}(t,e),(n=[{key:"componentDidMount",value:function(){var e=this;"undefined"!=typeof window?(this.props.accountClient&&(this.props.accountClient.on("updated",(function(t){return e.setState({user:t})})),this.props.accountClient.on("authenticated",(function(t){return e.setState({user:t})})),this.props.accountClient.on("unauthenticated",(function(){return e.setState({user:void 0})}))),this.props.accountClient.get("user")&&this.setState({user:this.props.accountClient.get("user")})):this.props.user&&this.setState({user:this.props.user})}},{key:"render",value:function(){return r.default.createElement("div",null,this.passUserToChildrenProps())}},{key:"passUserToChildrenProps",value:function(){var e=this;return r.default.Children.map(this.props.children,(function(t){return r.default.cloneElement(t,{user:e.state.user,accountClient:e.props.accountClient})}))}}])&&function(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}(t.prototype,n),t}(r.Component);t.default=u},472:(e,t,n)=>{"use strict";Object.defineProperty(t,"d",{enumerable:!0,get:function(){return o.default}});var r,o=(r=n(395))&&r.__esModule?r:{default:r}},84:(e,t,n)=>{"use strict";var r=n(418),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,m=o?Symbol.for("react.lazy"):60116,g="function"==typeof Symbol&&Symbol.iterator;function v(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function k(){}function E(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(v(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var S=E.prototype=new k;S.constructor=E,r(S,w.prototype),S.isPureReactComponent=!0;var _={current:null},x=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function O(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)x.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:_.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var N=/\/+/g,j=[];function L(e,t,n,r){if(j.length){var o=j.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function T(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case a:case i:l=!0}}if(l)return n(r,e,""===t?"."+A(e,0):t),1;if(l=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var s=t+A(o=e[u],u);l+=T(o,s,n,r)}else if("function"==typeof(s=null===e||"object"!=typeof e?null:"function"==typeof(s=g&&e[g]||e["@@iterator"])?s:null))for(e=s.call(e),u=0;!(o=e.next()).done;)l+=T(o=o.value,s=t+A(o,u++),n,r);else if("object"===o)throw n=""+e,Error(v(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return l}function I(e,t,n){return null==e?0:T(e,"",t,n)}function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function M(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(N,"$&/")+"/"),I(e,z,t=L(t,a,r,o)),R(t)}var F={current:null};function U(){var e=F.current;if(null===e)throw Error(v(321));return e}var $={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:_,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;I(e,M,t=L(null,null,t,n)),R(t)},count:function(e){return I(e,(function(){return null}),null)},toArray:function(e){var t=[];return D(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(v(143));return e}},t.Component=w,t.Fragment=l,t.Profiler=s,t.PureComponent=E,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=$,t.cloneElement=function(e,t,n){if(null==e)throw Error(v(267,e));var o=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=_.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)x.call(t,c)&&!C.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];o.children=s}return{$$typeof:a,type:e.type,key:i,ref:l,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=O,t.createFactory=function(e){var t=O.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return U().useCallback(e,t)},t.useContext=function(e,t){return U().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return U().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return U().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return U().useLayoutEffect(e,t)},t.useMemo=function(e,t){return U().useMemo(e,t)},t.useReducer=function(e,t,n){return U().useReducer(e,t,n)},t.useRef=function(e){return U().useRef(e)},t.useState=function(e){return U().useState(e)},t.version="16.14.0"},277:(e,t,n)=>{"use strict";e.exports=n(84)},308:(e,t,n)=>{"use strict";const r=n(927);e.exports={get(e,t){return this.request({method:"GET",url:e,options:t})},post(e,t,n){return n?(n.header||(n.header={}),n.header["Content-Type"]="application/json"):n={header:{"Content-Type":"application/json"}},this.request({method:"POST",url:e,data:t,options:n})},put(e,t,n){return n?(n.header||(n.header={}),n.header["Content-Type"]="application/json"):n={header:{"Content-Type":"application/json"}},this.request({method:"PUT",url:e,data:t,options:n})},delete(e,t,n){return n?(n.header||(n.header={}),n.header["Content-Type"]="application/json"):n={header:{"Content-Type":"application/json"}},this.request({method:"DELETE",url:e,data:t,options:n})},request:({method:e,url:t,data:n,header:o,options:a})=>new Promise(((o,i)=>{const l=new XMLHttpRequest;if(l.open(e,t,!0),a&&a.header)for(let e in a.header)l.setRequestHeader(e,a.header[e]);a&&a.authen&&r.get("token")&&l.setRequestHeader("Authorization",`Bearer ${r.get("token")}`);const u=a&&a.timeout?setTimeout((()=>i("timeout")),a.timeout):null;l.addEventListener("load",(()=>{u&&clearTimeout(u);const{status:e,responseText:t}=l;o({status:e,responseText:t})})),n?l.send(JSON.stringify(n)):l.send()}))}},927:e=>{"use strict";e.exports={get(e){if("undefined"==typeof Storage)throw new Error("No Web Storage support");const t=JSON.parse(localStorage.getItem("__r_s_sess_"));return t?t[e]:void 0}}},209:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(294);function o(e){return e.user?r.createElement("span",{className:"w3-large w3-bar-item w3-button w3-hover-none",style:{position:"relative",margin:"0px 8px"}},r.createElement("i",{className:"fas fa-shopping-cart ".concat("2".length>0?"w3-text-blue":"w3-text-light-blue")}),"2".length>0?r.createElement("label",{className:"w3-small w3-circle w3-red",style:{display:"inline-block",width:"19px",height:"19px",position:"absolute",top:"2px",left:"28px"}},"2"):null):null}},515:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(294),o=n(687);function a(e){var t=e.user,n=(0,o.$)().t;return t?r.createElement("button",{className:"w3-bar-item w3-button w3-hover-none w3-large outline-none",onClick:function(){}}," ",n("header:Enrolled")," "):null}n(642)},737:(e,t,n)=>{"use strict";n.d(t,{Z:()=>d});var r=n(294),o=n(514),a=n(209),i=n(311),l=n(687),u=n(642);function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function c(e){var t,n=e.programs,o=function(e){if(Array.isArray(e))return e}(t=(0,r.useState)(!1))||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),2!==n.length);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(t)||function(e,t){if(e){if("string"==typeof e)return s(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,2):void 0}}(t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),a=o[0],i=o[1],c=(0,l.$)().t;return r.createElement("div",{className:"w3-tooltip w3-dropdown-click",style:{background:"none"},onMouseEnter:function(e){return i(!0)},onMouseLeave:function(e){return i(!1)},onClick:function(e){return i(!0)}},r.createElement("button",{className:"w3-button w3-hover-none w3-large outline-none",style:{background:"none"}},c("header:Courses")),r.createElement("span",{className:"w3-text"},r.createElement("i",{className:"fas fa-angle-down"})),r.createElement("div",{className:"w3-dropdown-content ".concat(a?"w3-show":""),style:{paddingTop:"20px",background:"none"}},r.createElement("div",{className:"w3-bar-block w3-sand w3-card"},n.map((function(e){return r.createElement("a",{href:"/browse/".concat(e.id),key:e.id,className:"w3-bar-item w3-button",onClick:(t=e.id,function(e){e.preventDefault(),e.stopPropagation(),u.$n.navigate("browse",{params:{pid:t}}),i(!1)})}," ",e.title," ");var t})))))}var f=n(515);function d(e){var t=e.accountClient,n=e.user,l=e.programs,u=e.isScrollDown,s=e.cardStyle,d=e.endpoint;return r.createElement("div",{className:"w3-white ".concat(s&&u?"w3-card":"")},r.createElement("div",{className:"w3-container",style:{position:"relative",maxWidth:"1200px",margin:"auto"}},r.createElement("div",{className:"w3-bar"},r.createElement("a",{href:"/",className:"w3-bar-item w3-button w3-hover-none",style:{marginRight:"20px",marginTop:"2px"}},r.createElement(o.Z,{imgurl:d.logo})),r.createElement("div",{className:"w3-bar-item w3-bottombar w3-border-white w3-hover-border-gray"},r.createElement(c,{programs:l})),r.createElement("div",{className:"w3-bar-item w3-bottombar w3-border-white w3-hover-border-gray"},r.createElement(f.Z,{user:n})),r.createElement("div",{className:"w3-bar-item w3-right"},r.createElement(a.Z,{user:n}),r.createElement(i.Z,{accountClient:t,user:n})))))}},814:(e,t,n)=>{"use strict";n.d(t,{Z:()=>p});var r=n(294),o=n(642),a=n(514),i=n(209),l=n(311),u=n(687);function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function c(e){var t,n=e.programs,a=e.onClick,i=function(e){if(Array.isArray(e))return e}(t=(0,r.useState)(!0))||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),2!==n.length);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(t)||function(e,t){if(e){if("string"==typeof e)return s(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,2):void 0}}(t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),l=i[0],c=i[1],f=(0,u.$)().t;return r.createElement("div",{className:"w3-block outline-none",style:{background:"none"}},r.createElement("button",{className:"w3-bar-item w3-button w3-hover-none w3-large outline-none",onClick:function(){c(!l)}},f("header:Courses")," ",r.createElement("span",{className:"w3-text-gray",style:{marginLeft:"8px"}},r.createElement("i",{className:"fas fa-angle-".concat(l?"up":"down")}))),r.createElement("div",{className:"w3-bar-block w3-sand",style:{display:l?"block":"none"}},n.map((function(e){return r.createElement("a",{key:e.id,className:"w3-bar-item w3-button",style:{marginLeft:"8px"},onClick:(t=e.id,function(e){e.preventDefault(),o.$n.navigate("browse",{params:{pid:t}}),a&&a()})},e.title);var t}))))}var f=n(515);function d(e){var t=e.programs,n=e.user,o=e.self;return r.createElement("div",{className:"w3-sidebar w3-bar-block w3-animate-left w3-card",style:{top:0,width:"50%",minWidth:"250px"}},r.createElement("button",{className:"w3-bar-item w3-button w3-xxlarge w3-text-red",onClick:a},r.createElement("span",{className:"w3-right"}," × ")),r.createElement(f.Z,{user:n}),r.createElement(c,{programs:t,onClick:a}));function a(){o.resolve()}}function p(e){var t=e.accountClient,n=e.user,u=e.isScrollDown,s=e.cardStyle,c=e.endpoint;return r.createElement("div",{className:"w3-white ".concat(s&&u?"w3-card":""),style:{position:"relative",marginBottom:"32px"}},r.createElement("div",{className:"w3-bar"},r.createElement("button",{className:"w3-bar-item w3-button w3-hover-none w3-xlarge",style:{margin:"8px",padding:"8px 4px"},onClick:function(){o.$n.popup(d,{overlay:!0,onClickOverlay:function(e){return e.resolve()}})}},"☰"),r.createElement("a",{href:"/",className:"w3-bar-item w3-button w3-hover-none",style:{marginTop:"8px",padding:"8px 0"}},r.createElement(a.Z,{imgurl:c.logo})),r.createElement("div",{className:"w3-bar-item w3-right",style:{padding:"12px 4px"}},r.createElement(i.Z,{user:n}),r.createElement(l.Z,{accountClient:t,user:n}))))}},514:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(294);function o(e){var t=e.imgurl;return r.createElement("span",{className:"w3-wide",style:{fontFamily:"Raleway",fontSize:"24px",fontWeight:"normal",position:"relative"}},r.createElement("span",{style:{color:"#f44336",fontWeight:"bold"}},"S"),r.createElement("span",{style:{color:"#0050EF"}},"tudi"),r.createElement("span",{style:{color:"#3A3A3A",marginRight:"0px"}},"ha"),r.createElement("img",{src:t,width:"22px",style:{marginTop:"-10px"}}))}},311:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(294),o=n(687);function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function i(e){var t=e.accountClient,n=e.user;return n?r.createElement(u,{accountClient:t,user:n}):r.createElement(l,{accountClient:t})}function l(e){var t=e.accountClient,n=(0,o.$)().t;return r.createElement("button",{className:"w3-large w3-bar-item w3-button w3-border w3-border-gray w3-hover-blue w3-hover-border-white w3-round",style:{position:"relative",margin:"0px 8px"},onClick:function(){t.signin()}},n("header:Login"))}function u(e){var t,n=e.accountClient,o=e.user,i=function(e){if(Array.isArray(e))return e}(t=(0,r.useState)(!1))||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),2!==n.length);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(t)||function(e,t){if(e){if("string"==typeof e)return a(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,2):void 0}}(t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),l=i[0],u=i[1];return r.createElement("div",{style:{textAlign:"center",display:"inline-block",marginTop:"4px",marginRight:"4px"}},r.createElement("button",{className:"w3-button w3-circle w3-blue w3-hover-card outline-none",style:{width:"30px",height:"30px",padding:"4px 0"},onClick:function(){u(!l)}},o.profile.displayName&&o.profile.displayName.charAt(0)||"U"),l?r.createElement(s,{accountClient:n,user:o}):null)}function s(e){var t=e.accountClient,n=e.user,a=(0,o.$)().t;return r.createElement("div",{className:"w3-card w3-sand w3-round",style:{position:"absolute",width:"250px",right:"10px",marginTop:"5px",zIndex:1}},r.createElement("p",{className:"text-bold"},n.profile.displayName||"Name"),r.createElement("p",null,r.createElement("button",{className:"w3-button w3-border w3-border-gray w3-round w3-white",onClick:function(){t.signout()}},r.createElement("i",{className:"fas fa-sign-out-alt"})," ",a("header:Signout"))))}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var i,l,u=o(e),s=1;s<arguments.length;s++){for(var c in i=Object(arguments[s]))n.call(i,c)&&(u[c]=i[c]);if(t){l=t(i);for(var f=0;f<l.length;f++)r.call(i,l[f])&&(u[l[f]]=i[l[f]])}}return u}},448:(e,t,n)=>{"use strict";var r=n(294),o=n(418),a=n(840);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(i(227));var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function g(e,t,n,r,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var o=v.hasOwnProperty(t)?v[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);v[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,S=60106,_=60107,x=60108,C=60114,O=60109,P=60110,N=60112,j=60113,L=60120,R=60115,T=60116,I=60121,A=60128,M=60129,z=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var F=Symbol.for;E=F("react.element"),S=F("react.portal"),_=F("react.fragment"),x=F("react.strict_mode"),C=F("react.profiler"),O=F("react.provider"),P=F("react.context"),N=F("react.forward_ref"),j=F("react.suspense"),L=F("react.suspense_list"),R=F("react.memo"),T=F("react.lazy"),I=F("react.block"),F("react.scope"),A=F("react.opaque.id"),M=F("react.debug_trace_mode"),z=F("react.offscreen"),D=F("react.legacy_hidden")}var U,$="function"==typeof Symbol&&Symbol.iterator;function V(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=$&&e[$]||e["@@iterator"])?e:null}function B(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),a=r.stack.split("\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?B(e):""}function q(e){switch(e.tag){case 5:return B(e.type);case 16:return B("Lazy");case 13:return B("Suspense");case 19:return B("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case _:return"Fragment";case S:return"Portal";case C:return"Profiler";case x:return"StrictMode";case j:return"Suspense";case L:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case O:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case R:return Q(e.type);case I:return Q(e._render);case T:t=e._payload,e=e._init;try{return Q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Z(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=Z(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function J(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Z(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function X(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function G(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&oe(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function oe(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function se(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ge=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ve(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ye).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var Ee=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(i(62))}}function _e(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function xe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Oe=null,Pe=null;function Ne(e){if(e=Yr(e)){if("function"!=typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=Xr(t),Ce(e.stateNode,e.type,t))}}function je(e,t){return e(t)}function Le(e,t,n,r,o){return e(t,n,r,o)}function Re(){}var Te=je,Ie=!1,Ae=!1;function Me(){null===Oe&&null===Pe||(Re(),function(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}())}function ze(e,t){var n=e.stateNode;if(null===n)return null;var r=Xr(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,typeof n));return n}var De=!1;if(f)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(me){De=!1}function Ue(e,t,n,r,o,a,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var $e=!1,Ve=null,Be=!1,He=null,We={onError:function(e){$e=!0,Ve=e}};function qe(e,t,n,r,o,a,i,l,u){$e=!1,Ve=null,Ue.apply(We,arguments)}function Qe(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ke(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ze(e){if(Qe(e)!==e)throw Error(i(188))}function Ye(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var Je,Xe,Ge,et,tt=!1,nt=[],rt=null,ot=null,at=null,it=new Map,lt=new Map,ut=[],st="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ct(e,t,n,r,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function ft(e,t){switch(e){case"focusin":case"focusout":rt=null;break;case"dragenter":case"dragleave":ot=null;break;case"mouseover":case"mouseout":at=null;break;case"pointerover":case"pointerout":it.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":lt.delete(t.pointerId)}}function dt(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e=ct(t,n,r,o,a),null!==t&&null!==(t=Yr(t))&&Xe(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function pt(e){var t=Zr(e.target);if(null!==t){var n=Qe(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ke(n)))return e.blockedOn=t,void et(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){Ge(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function ht(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Yr(n))&&Xe(t),e.blockedOn=n,!1;t.shift()}return!0}function mt(e,t,n){ht(e)&&n.delete(t)}function gt(){for(tt=!1;0<nt.length;){var e=nt[0];if(null!==e.blockedOn){null!==(e=Yr(e.blockedOn))&&Je(e);break}for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&nt.shift()}null!==rt&&ht(rt)&&(rt=null),null!==ot&&ht(ot)&&(ot=null),null!==at&&ht(at)&&(at=null),it.forEach(mt),lt.forEach(mt)}function vt(e,t){e.blockedOn===t&&(e.blockedOn=null,tt||(tt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,gt)))}function yt(e){function t(t){return vt(t,e)}if(0<nt.length){vt(nt[0],e);for(var n=1;n<nt.length;n++){var r=nt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==rt&&vt(rt,e),null!==ot&&vt(ot,e),null!==at&&vt(at,e),it.forEach(t),lt.forEach(t),n=0;n<ut.length;n++)(r=ut[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ut.length&&null===(n=ut[0]).blockedOn;)pt(n),null===n.blockedOn&&ut.shift()}function bt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var wt={animationend:bt("Animation","AnimationEnd"),animationiteration:bt("Animation","AnimationIteration"),animationstart:bt("Animation","AnimationStart"),transitionend:bt("Transition","TransitionEnd")},kt={},Et={};function St(e){if(kt[e])return kt[e];if(!wt[e])return e;var t,n=wt[e];for(t in n)if(n.hasOwnProperty(t)&&t in Et)return kt[e]=n[t];return e}f&&(Et=document.createElement("div").style,"AnimationEvent"in window||(delete wt.animationend.animation,delete wt.animationiteration.animation,delete wt.animationstart.animation),"TransitionEvent"in window||delete wt.transitionend.transition);var _t=St("animationend"),xt=St("animationiteration"),Ct=St("animationstart"),Ot=St("transitionend"),Pt=new Map,Nt=new Map,jt=["abort","abort",_t,"animationEnd",xt,"animationIteration",Ct,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ot,"transitionEnd","waiting","waiting"];function Lt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),Nt.set(r,t),Pt.set(r,o),s(o,[r])}}(0,a.unstable_now)();var Rt=8;function Tt(e){if(0!=(1&e))return Rt=15,1;if(0!=(2&e))return Rt=14,2;if(0!=(4&e))return Rt=13,4;var t=24&e;return 0!==t?(Rt=12,t):0!=(32&e)?(Rt=11,32):0!=(t=192&e)?(Rt=10,t):0!=(256&e)?(Rt=9,256):0!=(t=3584&e)?(Rt=8,t):0!=(4096&e)?(Rt=7,4096):0!=(t=4186112&e)?(Rt=6,t):0!=(t=62914560&e)?(Rt=5,t):67108864&e?(Rt=4,67108864):0!=(134217728&e)?(Rt=3,134217728):0!=(t=805306368&e)?(Rt=2,t):0!=(1073741824&e)?(Rt=1,1073741824):(Rt=8,e)}function It(e,t){var n=e.pendingLanes;if(0===n)return Rt=0;var r=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)r=a,o=Rt=15;else if(0!=(a=134217727&n)){var u=a&~i;0!==u?(r=Tt(u),o=Rt):0!=(l&=a)&&(r=Tt(l),o=Rt)}else 0!=(a=n&~i)?(r=Tt(a),o=Rt):0!==l&&(r=Tt(l),o=Rt);if(0===r)return 0;if(r=n&((0>(r=31-Ut(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&i)){if(Tt(t),o<=Rt)return t;Rt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-Ut(t)),r|=e[n],t&=~o;return r}function At(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Mt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=zt(24&~t))?Mt(10,t):e;case 10:return 0===(e=zt(192&~t))?Mt(8,t):e;case 8:return 0===(e=zt(3584&~t))&&0===(e=zt(4186112&~t))&&(e=512),e;case 2:return 0===(t=zt(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function zt(e){return e&-e}function Dt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ft(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Ut(t)]=n}var Ut=Math.clz32?Math.clz32:function(e){return 0===e?32:31-($t(e)/Vt|0)|0},$t=Math.log,Vt=Math.LN2,Bt=a.unstable_UserBlockingPriority,Ht=a.unstable_runWithPriority,Wt=!0;function qt(e,t,n,r){Ie||Re();var o=Kt,a=Ie;Ie=!0;try{Le(o,e,t,n,r)}finally{(Ie=a)||Me()}}function Qt(e,t,n,r){Ht(Bt,Kt.bind(null,e,t,n,r))}function Kt(e,t,n,r){var o;if(Wt)if((o=0==(4&t))&&0<nt.length&&-1<st.indexOf(e))e=ct(null,e,t,n,r),nt.push(e);else{var a=Zt(e,t,n,r);if(null===a)o&&ft(e,r);else{if(o){if(-1<st.indexOf(e))return e=ct(a,e,t,n,r),void nt.push(e);if(function(e,t,n,r,o){switch(t){case"focusin":return rt=dt(rt,e,t,n,r,o),!0;case"dragenter":return ot=dt(ot,e,t,n,r,o),!0;case"mouseover":return at=dt(at,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return it.set(a,dt(it.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,lt.set(a,dt(lt.get(a)||null,e,t,n,r,o)),!0}return!1}(a,e,t,n,r))return;ft(e,r)}Pr(e,t,r,null,n)}}}function Zt(e,t,n,r){var o=xe(r);if(null!==(o=Zr(o))){var a=Qe(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Ke(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Pr(e,t,r,o,n),null}var Yt=null,Jt=null,Xt=null;function Gt(){if(Xt)return Xt;var e,t,n=Jt,r=n.length,o="value"in Yt?Yt.value:Yt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return Xt=o.slice(e,1<t?1-t:void 0)}function en(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function tn(){return!0}function nn(){return!1}function rn(e){function t(t,n,r,o,a){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?tn:nn,this.isPropagationStopped=nn,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=tn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=tn)},persist:function(){},isPersistent:tn}),t}var on,an,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sn=rn(un),cn=o({},un,{view:0,detail:0}),fn=rn(cn),dn=o({},cn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(on=e.screenX-ln.screenX,an=e.screenY-ln.screenY):an=on=0,ln=e),on)},movementY:function(e){return"movementY"in e?e.movementY:an}}),pn=rn(dn),hn=rn(o({},dn,{dataTransfer:0})),mn=rn(o({},cn,{relatedTarget:0})),gn=rn(o({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),vn=rn(o({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),yn=rn(o({},un,{data:0})),bn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},kn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=kn[e])&&!!t[e]}function Sn(){return En}var _n=rn(o({},cn,{key:function(e){if(e.key){var t=bn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=en(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?wn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?en(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?en(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),xn=rn(o({},dn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Cn=rn(o({},cn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),On=rn(o({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),Pn=rn(o({},dn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Nn=[9,13,27,32],jn=f&&"CompositionEvent"in window,Ln=null;f&&"documentMode"in document&&(Ln=document.documentMode);var Rn=f&&"TextEvent"in window&&!Ln,Tn=f&&(!jn||Ln&&8<Ln&&11>=Ln),In=String.fromCharCode(32),An=!1;function Mn(e,t){switch(e){case"keyup":return-1!==Nn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function zn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Dn=!1,Fn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Un(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Fn[e.type]:"textarea"===t}function $n(e,t,n,r){(function(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e})(r),0<(t=jr(t,"onChange")).length&&(n=new sn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Vn=null,Bn=null;function Hn(e){Er(e,0)}function Wn(e){if(J(Jr(e)))return e}function qn(e,t){if("change"===e)return t}var Qn=!1;if(f){var Kn;if(f){var Zn="oninput"in document;if(!Zn){var Yn=document.createElement("div");Yn.setAttribute("oninput","return;"),Zn="function"==typeof Yn.oninput}Kn=Zn}else Kn=!1;Qn=Kn&&(!document.documentMode||9<document.documentMode)}function Jn(){Vn&&(Vn.detachEvent("onpropertychange",Xn),Bn=Vn=null)}function Xn(e){if("value"===e.propertyName&&Wn(Bn)){var t=[];if($n(t,Bn,e,xe(e)),e=Hn,Ie)e(t);else{Ie=!0;try{je(e,t)}finally{Ie=!1,Me()}}}}function Gn(e,t,n){"focusin"===e?(Jn(),Bn=n,(Vn=t).attachEvent("onpropertychange",Xn)):"focusout"===e&&Jn()}function er(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Wn(Bn)}function tr(e,t){if("click"===e)return Wn(t)}function nr(e,t){if("input"===e||"change"===e)return Wn(t)}var rr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},or=Object.prototype.hasOwnProperty;function ar(e,t){if(rr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!or.call(t,n[r])||!rr(e[n[r]],t[n[r]]))return!1;return!0}function ir(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function lr(e,t){var n,r=ir(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ir(r)}}function ur(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ur(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function sr(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var fr=f&&"documentMode"in document&&11>=document.documentMode,dr=null,pr=null,hr=null,mr=!1;function gr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;mr||null==dr||dr!==X(r)||(r="selectionStart"in(r=dr)&&cr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},hr&&ar(hr,r)||(hr=r,0<(r=jr(pr,"onSelect")).length&&(t=new sn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=dr)))}Lt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Lt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Lt(jt,2);for(var vr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),yr=0;yr<vr.length;yr++)Nt.set(vr[yr],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var br="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),wr=new Set("cancel close invalid load scroll toggle".split(" ").concat(br));function kr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,a,l,u,s){if(qe.apply(this,arguments),$e){if(!$e)throw Error(i(198));var c=Ve;$e=!1,Ve=null,Be||(Be=!0,He=c)}}(r,t,void 0,e),e.currentTarget=null}function Er(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==a&&o.isPropagationStopped())break e;kr(o,l,s),a=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==a&&o.isPropagationStopped())break e;kr(o,l,s),a=u}}}if(Be)throw e=He,Be=!1,He=null,e}function Sr(e,t){var n=Gr(t),r=e+"__bubble";n.has(r)||(Or(t,e,2,!1),n.add(r))}var _r="_reactListening"+Math.random().toString(36).slice(2);function xr(e){e[_r]||(e[_r]=!0,l.forEach((function(t){wr.has(t)||Cr(t,!1,e,null),Cr(t,!0,e,null)})))}function Cr(e,t,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=n;if("selectionchange"===e&&9!==n.nodeType&&(a=n.ownerDocument),null!==r&&!t&&wr.has(e)){if("scroll"!==e)return;o|=2,a=r}var i=Gr(a),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(o|=4),Or(a,e,o,t),i.add(l))}function Or(e,t,n,r){var o=Nt.get(t);switch(void 0===o?2:o){case 0:o=qt;break;case 1:o=Qt;break;default:o=Kt}n=o.bind(null,t,n,e),o=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Pr(e,t,n,r,o){var a=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=Zr(l)))return;if(5===(u=i.tag)||6===u){r=a=i;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Ae)return e();Ae=!0;try{Te(e,void 0,void 0)}finally{Ae=!1,Me()}}((function(){var r=a,o=xe(n),i=[];e:{var l=Pt.get(e);if(void 0!==l){var u=sn,s=e;switch(e){case"keypress":if(0===en(n))break e;case"keydown":case"keyup":u=_n;break;case"focusin":s="focus",u=mn;break;case"focusout":s="blur",u=mn;break;case"beforeblur":case"afterblur":u=mn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=pn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Cn;break;case _t:case xt:case Ct:u=gn;break;case Ot:u=On;break;case"scroll":u=fn;break;case"wheel":u=Pn;break;case"copy":case"cut":case"paste":u=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=xn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=ze(h,d))&&c.push(Nr(h,m,p))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,o),i.push({event:l,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Zr(s)&&!s[Qr])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Zr(s):null)&&(s!==(f=Qe(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=pn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=xn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:Jr(u),p=null==s?l:Jr(s),(l=new c(m,h+"leave",u,n,o)).target=f,l.relatedTarget=p,m=null,Zr(o)===r&&((c=new c(d,h+"enter",s,n,o)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Lr(p))h++;for(p=0,m=d;m;m=Lr(m))p++;for(;0<h-p;)c=Lr(c),h--;for(;0<p-h;)d=Lr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Lr(c),d=Lr(d)}c=null}else c=null;null!==u&&Rr(i,l,u,c,!1),null!==s&&null!==f&&Rr(i,f,s,c,!0)}if("select"===(u=(l=r?Jr(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var g=qn;else if(Un(l))if(Qn)g=nr;else{g=er;var v=Gn}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=tr);switch(g&&(g=g(e,r))?$n(i,g,n,o):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&oe(l,"number",l.value)),v=r?Jr(r):window,e){case"focusin":(Un(v)||"true"===v.contentEditable)&&(dr=v,pr=r,hr=null);break;case"focusout":hr=pr=dr=null;break;case"mousedown":mr=!0;break;case"contextmenu":case"mouseup":case"dragend":mr=!1,gr(i,n,o);break;case"selectionchange":if(fr)break;case"keydown":case"keyup":gr(i,n,o)}var y;if(jn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Dn?Mn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Tn&&"ko"!==n.locale&&(Dn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Dn&&(y=Gt()):(Jt="value"in(Yt=o)?Yt.value:Yt.textContent,Dn=!0)),0<(v=jr(r,b)).length&&(b=new yn(b,e,null,n,o),i.push({event:b,listeners:v}),(y||null!==(y=zn(n)))&&(b.data=y))),(y=Rn?function(e,t){switch(e){case"compositionend":return zn(t);case"keypress":return 32!==t.which?null:(An=!0,In);case"textInput":return(e=t.data)===In&&An?null:e;default:return null}}(e,n):function(e,t){if(Dn)return"compositionend"===e||!jn&&Mn(e,t)?(e=Gt(),Xt=Jt=Yt=null,Dn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Tn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=jr(r,"onBeforeInput")).length&&(o=new yn("onBeforeInput","beforeinput",null,n,o),i.push({event:o,listeners:r}),o.data=y)}Er(i,t)}))}function Nr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function jr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=ze(e,n))&&r.unshift(Nr(e,a,o)),null!=(a=ze(e,t))&&r.push(Nr(e,a,o))),e=e.return}return r}function Lr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Rr(e,t,n,r,o){for(var a=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,o?null!=(u=ze(n,a))&&i.unshift(Nr(n,u,l)):o||null!=(u=ze(n,a))&&i.push(Nr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}function Tr(){}var Ir=null,Ar=null;function Mr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function zr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Dr="function"==typeof setTimeout?setTimeout:void 0,Fr="function"==typeof clearTimeout?clearTimeout:void 0;function Ur(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function $r(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Vr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Br=0,Hr=Math.random().toString(36).slice(2),Wr="__reactFiber$"+Hr,qr="__reactProps$"+Hr,Qr="__reactContainer$"+Hr,Kr="__reactEvents$"+Hr;function Zr(e){var t=e[Wr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Qr]||n[Wr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Vr(e);null!==e;){if(n=e[Wr])return n;e=Vr(e)}return t}n=(e=n).parentNode}return null}function Yr(e){return!(e=e[Wr]||e[Qr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Jr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function Xr(e){return e[qr]||null}function Gr(e){var t=e[Kr];return void 0===t&&(t=e[Kr]=new Set),t}var eo=[],to=-1;function no(e){return{current:e}}function ro(e){0>to||(e.current=eo[to],eo[to]=null,to--)}function oo(e,t){to++,eo[to]=e.current,e.current=t}var ao={},io=no(ao),lo=no(!1),uo=ao;function so(e,t){var n=e.type.contextTypes;if(!n)return ao;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function co(e){return null!=e.childContextTypes}function fo(){ro(lo),ro(io)}function po(e,t,n){if(io.current!==ao)throw Error(i(168));oo(io,t),oo(lo,n)}function ho(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(i(108,Q(t)||"Unknown",a));return o({},n,r)}function mo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ao,uo=io.current,oo(io,e),oo(lo,lo.current),!0}function go(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=ho(e,t,uo),r.__reactInternalMemoizedMergedChildContext=e,ro(lo),ro(io),oo(io,e)):ro(lo),oo(lo,n)}var vo=null,yo=null,bo=a.unstable_runWithPriority,wo=a.unstable_scheduleCallback,ko=a.unstable_cancelCallback,Eo=a.unstable_shouldYield,So=a.unstable_requestPaint,_o=a.unstable_now,xo=a.unstable_getCurrentPriorityLevel,Co=a.unstable_ImmediatePriority,Oo=a.unstable_UserBlockingPriority,Po=a.unstable_NormalPriority,No=a.unstable_LowPriority,jo=a.unstable_IdlePriority,Lo={},Ro=void 0!==So?So:function(){},To=null,Io=null,Ao=!1,Mo=_o(),zo=1e4>Mo?_o:function(){return _o()-Mo};function Do(){switch(xo()){case Co:return 99;case Oo:return 98;case Po:return 97;case No:return 96;case jo:return 95;default:throw Error(i(332))}}function Fo(e){switch(e){case 99:return Co;case 98:return Oo;case 97:return Po;case 96:return No;case 95:return jo;default:throw Error(i(332))}}function Uo(e,t){return e=Fo(e),bo(e,t)}function $o(e,t,n){return e=Fo(e),wo(e,t,n)}function Vo(){if(null!==Io){var e=Io;Io=null,ko(e)}Bo()}function Bo(){if(!Ao&&null!==To){Ao=!0;var e=0;try{var t=To;Uo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),To=null}catch(t){throw null!==To&&(To=To.slice(e+1)),wo(Co,Vo),t}finally{Ao=!1}}}var Ho=k.ReactCurrentBatchConfig;function Wo(e,t){if(e&&e.defaultProps){for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var qo=no(null),Qo=null,Ko=null,Zo=null;function Yo(){Zo=Ko=Qo=null}function Jo(e){var t=qo.current;ro(qo),e.type._context._currentValue=t}function Xo(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function Go(e,t){Qo=e,Zo=Ko=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(ji=!0),e.firstContext=null)}function ea(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ko){if(null===Qo)throw Error(i(308));Ko=t,Qo.dependencies={lanes:0,firstContext:t,responders:null}}else Ko=Ko.next=t;return e._currentValue}var ta=!1;function na(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ra(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oa(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function aa(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ia(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=i:a=a.next=i,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function la(e,t,n,r){var a=e.updateQueue;ta=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var s=u,c=s.next;s.next=null,null===l?i=c:l.next=c,l=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==i){for(d=a.baseState,l=0,f=c=s=null;;){u=i.lane;var p=i.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=o({},d,u);break e;case 2:ta=!0}}null!==i.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=a.shared.pending))break;i=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(s=d),a.baseState=s,a.firstBaseUpdate=c,a.lastBaseUpdate=f,Rl|=l,e.lanes=l,e.memoizedState=d}}function ua(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(i(191,o));o.call(r)}}}var sa=(new r.Component).refs;function ca(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var fa={isMounted:function(e){return!!(e=e._reactInternals)&&Qe(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ru(),o=ou(e),a=oa(r,o);a.payload=t,null!=n&&(a.callback=n),aa(e,a),au(e,o,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ru(),o=ou(e),a=oa(r,o);a.tag=1,a.payload=t,null!=n&&(a.callback=n),aa(e,a),au(e,o,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ru(),r=ou(e),o=oa(n,r);o.tag=2,null!=t&&(o.callback=t),aa(e,o),au(e,r,n)}};function da(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!(t.prototype&&t.prototype.isPureReactComponent&&ar(n,r)&&ar(o,a))}function pa(e,t,n){var r=!1,o=ao,a=t.contextType;return"object"==typeof a&&null!==a?a=ea(a):(o=co(t)?uo:io.current,a=(r=null!=(r=t.contextTypes))?so(e,o):ao),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=fa,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ha(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&fa.enqueueReplaceState(t,t.state,null)}function ma(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=sa,na(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=ea(a):(a=co(t)?uo:io.current,o.context=so(e,a)),la(e,n,o,r),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(ca(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&fa.enqueueReplaceState(o,o.state,null),la(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var ga=Array.isArray;function va(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var r=n.stateNode}if(!r)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===sa&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function ya(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ba(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Au(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Fu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=va(e,t,n),r.return=e,r):((r=Mu(n.type,n.key,n.props,null,e.mode,r)).ref=va(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Uu(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=zu(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Fu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=Mu(t.type,t.key,t.props,null,e.mode,n)).ref=va(e,null,t),n.return=e,n;case S:return(t=Uu(t,e.mode,n)).return=e,t}if(ga(t)||V(t))return(t=zu(t,e.mode,n,null)).return=e,t;ya(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===o?n.type===_?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case S:return n.key===o?c(e,t,n,r):null}if(ga(n)||V(n))return null!==o?null:f(e,t,n,r,null);ya(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===_?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case S:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ga(r)||V(r))return f(t,e=e.get(n)||null,r,o,null);ya(t,r)}return null}function m(o,i,l,u){for(var s=null,c=null,f=i,m=i=0,g=null;null!==f&&m<l.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var v=p(o,f,l[m],u);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(o,f),i=a(v,i,m),null===c?s=v:c.sibling=v,c=v,f=g}if(m===l.length)return n(o,f),s;if(null===f){for(;m<l.length;m++)null!==(f=d(o,l[m],u))&&(i=a(f,i,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);m<l.length;m++)null!==(g=h(f,o,m,l[m],u))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),i=a(g,i,m),null===c?s=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(o,e)})),s}function g(o,l,u,s){var c=V(u);if("function"!=typeof c)throw Error(i(150));if(null==(u=c.call(u)))throw Error(i(151));for(var f=c=null,m=l,g=l=0,v=null,y=u.next();null!==m&&!y.done;g++,y=u.next()){m.index>g?(v=m,m=null):v=m.sibling;var b=p(o,m,y.value,s);if(null===b){null===m&&(m=v);break}e&&m&&null===b.alternate&&t(o,m),l=a(b,l,g),null===f?c=b:f.sibling=b,f=b,m=v}if(y.done)return n(o,m),c;if(null===m){for(;!y.done;g++,y=u.next())null!==(y=d(o,y.value,s))&&(l=a(y,l,g),null===f?c=y:f.sibling=y,f=y);return c}for(m=r(o,m);!y.done;g++,y=u.next())null!==(y=h(m,o,g,y.value,s))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),l=a(y,l,g),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return t(o,e)})),c}return function(e,r,a,u){var s="object"==typeof a&&null!==a&&a.type===_&&null===a.key;s&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case E:e:{for(c=a.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(a.type===_){n(e,s.sibling),(r=o(s,a.props.children)).return=e,e=r;break e}break;default:if(s.elementType===a.type){n(e,s.sibling),(r=o(s,a.props)).ref=va(e,s,a),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}a.type===_?((r=zu(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=Mu(a.type,a.key,a.props,null,e.mode,u)).ref=va(e,r,a),u.return=e,e=u)}return l(e);case S:e:{for(s=a.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Uu(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Fu(a,e.mode,u)).return=e,e=r),l(e);if(ga(a))return m(e,r,a,u);if(V(a))return g(e,r,a,u);if(c&&ya(e,a),void 0===a&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,Q(e.type)||"Component"))}return n(e,r)}}var wa=ba(!0),ka=ba(!1),Ea={},Sa=no(Ea),_a=no(Ea),xa=no(Ea);function Ca(e){if(e===Ea)throw Error(i(174));return e}function Oa(e,t){switch(oo(xa,t),oo(_a,e),oo(Sa,Ea),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ro(Sa),oo(Sa,t)}function Pa(){ro(Sa),ro(_a),ro(xa)}function Na(e){Ca(xa.current);var t=Ca(Sa.current),n=pe(t,e.type);t!==n&&(oo(_a,e),oo(Sa,n))}function ja(e){_a.current===e&&(ro(Sa),ro(_a))}var La=no(0);function Ra(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Ta=null,Ia=null,Aa=!1;function Ma(e,t){var n=Tu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function za(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Da(e){if(Aa){var t=Ia;if(t){var n=t;if(!za(e,t)){if(!(t=$r(n.nextSibling))||!za(e,t))return e.flags=-1025&e.flags|2,Aa=!1,void(Ta=e);Ma(Ta,n)}Ta=e,Ia=$r(t.firstChild)}else e.flags=-1025&e.flags|2,Aa=!1,Ta=e}}function Fa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Ta=e}function Ua(e){if(e!==Ta)return!1;if(!Aa)return Fa(e),Aa=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!zr(t,e.memoizedProps))for(t=Ia;t;)Ma(e,t),t=$r(t.nextSibling);if(Fa(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ia=$r(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ia=null}}else Ia=Ta?$r(e.stateNode.nextSibling):null;return!0}function $a(){Ia=Ta=null,Aa=!1}var Va=[];function Ba(){for(var e=0;e<Va.length;e++)Va[e]._workInProgressVersionPrimary=null;Va.length=0}var Ha=k.ReactCurrentDispatcher,Wa=k.ReactCurrentBatchConfig,qa=0,Qa=null,Ka=null,Za=null,Ya=!1,Ja=!1;function Xa(){throw Error(i(321))}function Ga(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!rr(e[n],t[n]))return!1;return!0}function ei(e,t,n,r,o,a){if(qa=a,Qa=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ha.current=null===e||null===e.memoizedState?Ci:Oi,e=n(r,o),Ja){a=0;do{if(Ja=!1,!(25>a))throw Error(i(301));a+=1,Za=Ka=null,t.updateQueue=null,Ha.current=Pi,e=n(r,o)}while(Ja)}if(Ha.current=xi,t=null!==Ka&&null!==Ka.next,qa=0,Za=Ka=Qa=null,Ya=!1,t)throw Error(i(300));return e}function ti(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Za?Qa.memoizedState=Za=e:Za=Za.next=e,Za}function ni(){if(null===Ka){var e=Qa.alternate;e=null!==e?e.memoizedState:null}else e=Ka.next;var t=null===Za?Qa.memoizedState:Za.next;if(null!==t)Za=t,Ka=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Ka=e).memoizedState,baseState:Ka.baseState,baseQueue:Ka.baseQueue,queue:Ka.queue,next:null},null===Za?Qa.memoizedState=Za=e:Za=Za.next=e}return Za}function ri(e,t){return"function"==typeof t?t(e):t}function oi(e){var t=ni(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=Ka,o=r.baseQueue,a=n.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}r.baseQueue=o=a,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=l=a=null,s=o;do{var c=s.lane;if((qa&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=f,a=r):u=u.next=f,Qa.lanes|=c,Rl|=c}s=s.next}while(null!==s&&s!==o);null===u?a=r:u.next=l,rr(r,t.memoizedState)||(ji=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ai(e){var t=ni(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,a=t.memoizedState;if(null!==o){n.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);rr(a,t.memoizedState)||(ji=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function ii(e,t,n){var r=t._getVersion;r=r(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(qa&e)===e)&&(t._workInProgressVersionPrimary=r,Va.push(t))),e)return n(t._source);throw Va.push(t),Error(i(350))}function li(e,t,n,r){var o=_l;if(null===o)throw Error(i(349));var a=t._getVersion,l=a(t._source),u=Ha.current,s=u.useState((function(){return ii(o,t,n)})),c=s[1],f=s[0];s=Za;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var g=Qa;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=a(t._source);if(!rr(l,e)){e=n(t._source),rr(f,e)||(c(e),e=ou(g),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,i=e;0<i;){var u=31-Ut(i),s=1<<u;r[u]|=e,i&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=ou(g);o.mutableReadLanes|=r&o.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),rr(h,n)&&rr(m,t)&&rr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ri,lastRenderedState:f}).dispatch=c=_i.bind(null,Qa,e),s.queue=e,s.baseQueue=null,f=ii(o,t,n),s.memoizedState=s.baseState=f),f}function ui(e,t,n){return li(ni(),e,t,n)}function si(e){var t=ti();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ri,lastRenderedState:e}).dispatch=_i.bind(null,Qa,e),[t.memoizedState,e]}function ci(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Qa.updateQueue)?(t={lastEffect:null},Qa.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function fi(e){return e={current:e},ti().memoizedState=e}function di(){return ni().memoizedState}function pi(e,t,n,r){var o=ti();Qa.flags|=e,o.memoizedState=ci(1|t,n,void 0,void 0===r?null:r)}function hi(e,t,n,r){var o=ni();r=void 0===r?null:r;var a=void 0;if(null!==Ka){var i=Ka.memoizedState;if(a=i.destroy,null!==r&&Ga(r,i.deps))return void ci(t,n,a,r)}Qa.flags|=e,o.memoizedState=ci(1|t,n,a,r)}function mi(e,t){return pi(516,4,e,t)}function gi(e,t){return hi(516,4,e,t)}function vi(e,t){return hi(4,2,e,t)}function yi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function bi(e,t,n){return n=null!=n?n.concat([e]):null,hi(4,2,yi.bind(null,t,e),n)}function wi(){}function ki(e,t){var n=ni();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ga(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ei(e,t){var n=ni();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ga(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Si(e,t){var n=Do();Uo(98>n?98:n,(function(){e(!0)})),Uo(97<n?97:n,(function(){var n=Wa.transition;Wa.transition=1;try{e(!1),t()}finally{Wa.transition=n}}))}function _i(e,t,n){var r=ru(),o=ou(e),a={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Qa||null!==i&&i===Qa)Ja=Ya=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,n);if(a.eagerReducer=i,a.eagerState=u,rr(u,l))return}catch(e){}au(e,o,r)}}var xi={readContext:ea,useCallback:Xa,useContext:Xa,useEffect:Xa,useImperativeHandle:Xa,useLayoutEffect:Xa,useMemo:Xa,useReducer:Xa,useRef:Xa,useState:Xa,useDebugValue:Xa,useDeferredValue:Xa,useTransition:Xa,useMutableSource:Xa,useOpaqueIdentifier:Xa,unstable_isNewReconciler:!1},Ci={readContext:ea,useCallback:function(e,t){return ti().memoizedState=[e,void 0===t?null:t],e},useContext:ea,useEffect:mi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,pi(4,2,yi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return pi(4,2,e,t)},useMemo:function(e,t){var n=ti();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ti();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=_i.bind(null,Qa,e),[r.memoizedState,e]},useRef:fi,useState:si,useDebugValue:wi,useDeferredValue:function(e){var t=si(e),n=t[0],r=t[1];return mi((function(){var t=Wa.transition;Wa.transition=1;try{r(e)}finally{Wa.transition=t}}),[e]),n},useTransition:function(){var e=si(!1),t=e[0];return fi(e=Si.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ti();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},li(r,e,t,n)},useOpaqueIdentifier:function(){if(Aa){var e=!1,t=function(e){return{$$typeof:A,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Br++).toString(36))),Error(i(355))})),n=si(t)[1];return 0==(2&Qa.mode)&&(Qa.flags|=516,ci(5,(function(){n("r:"+(Br++).toString(36))}),void 0,null)),t}return si(t="r:"+(Br++).toString(36)),t},unstable_isNewReconciler:!1},Oi={readContext:ea,useCallback:ki,useContext:ea,useEffect:gi,useImperativeHandle:bi,useLayoutEffect:vi,useMemo:Ei,useReducer:oi,useRef:di,useState:function(){return oi(ri)},useDebugValue:wi,useDeferredValue:function(e){var t=oi(ri),n=t[0],r=t[1];return gi((function(){var t=Wa.transition;Wa.transition=1;try{r(e)}finally{Wa.transition=t}}),[e]),n},useTransition:function(){var e=oi(ri)[0];return[di().current,e]},useMutableSource:ui,useOpaqueIdentifier:function(){return oi(ri)[0]},unstable_isNewReconciler:!1},Pi={readContext:ea,useCallback:ki,useContext:ea,useEffect:gi,useImperativeHandle:bi,useLayoutEffect:vi,useMemo:Ei,useReducer:ai,useRef:di,useState:function(){return ai(ri)},useDebugValue:wi,useDeferredValue:function(e){var t=ai(ri),n=t[0],r=t[1];return gi((function(){var t=Wa.transition;Wa.transition=1;try{r(e)}finally{Wa.transition=t}}),[e]),n},useTransition:function(){var e=ai(ri)[0];return[di().current,e]},useMutableSource:ui,useOpaqueIdentifier:function(){return ai(ri)[0]},unstable_isNewReconciler:!1},Ni=k.ReactCurrentOwner,ji=!1;function Li(e,t,n,r){t.child=null===e?ka(t,null,n,r):wa(t,e.child,n,r)}function Ri(e,t,n,r,o){n=n.render;var a=t.ref;return Go(t,o),r=ei(e,t,n,r,a,o),null===e||ji?(t.flags|=1,Li(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Yi(e,t,o))}function Ti(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||Iu(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Mu(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Ii(e,t,i,r,o,a))}return i=e.child,0==(o&a)&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:ar)(o,r)&&e.ref===t.ref)?Yi(e,t,a):(t.flags|=1,(e=Au(i,r)).ref=t.ref,e.return=t,t.child=e)}function Ii(e,t,n,r,o,a){if(null!==e&&ar(e.memoizedProps,r)&&e.ref===t.ref){if(ji=!1,0==(a&o))return t.lanes=e.lanes,Yi(e,t,a);0!=(16384&e.flags)&&(ji=!0)}return zi(e,t,n,r,a)}function Ai(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},fu(0,n);else{if(0==(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},fu(0,e),null;t.memoizedState={baseLanes:0},fu(0,null!==a?a.baseLanes:n)}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,fu(0,r);return Li(e,t,o,n),t.child}function Mi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function zi(e,t,n,r,o){var a=co(n)?uo:io.current;return a=so(t,a),Go(t,o),n=ei(e,t,n,r,a,o),null===e||ji?(t.flags|=1,Li(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Yi(e,t,o))}function Di(e,t,n,r,o){if(co(n)){var a=!0;mo(t)}else a=!1;if(Go(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),pa(t,n,r),ma(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;s="object"==typeof s&&null!==s?ea(s):so(t,s=co(n)?uo:io.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&ha(t,i,r,s),ta=!1;var d=t.memoizedState;i.state=d,la(t,r,i,o),u=t.memoizedState,l!==r||d!==u||lo.current||ta?("function"==typeof c&&(ca(t,n,c,r),u=t.memoizedState),(l=ta||da(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4)):("function"==typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4),r=!1)}else{i=t.stateNode,ra(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Wo(t.type,l),i.props=s,f=t.pendingProps,d=i.context,u="object"==typeof(u=n.contextType)&&null!==u?ea(u):so(t,u=co(n)?uo:io.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&ha(t,i,r,u),ta=!1,d=t.memoizedState,i.state=d,la(t,r,i,o);var h=t.memoizedState;l!==f||d!==h||lo.current||ta?("function"==typeof p&&(ca(t,n,p,r),h=t.memoizedState),(s=ta||da(t,n,s,r,d,h,u))?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=u,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Fi(e,t,n,r,a,o)}function Fi(e,t,n,r,o,a){Mi(e,t);var i=0!=(64&t.flags);if(!r&&!i)return o&&go(t,n,!1),Yi(e,t,a);r=t.stateNode,Ni.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=wa(t,e.child,null,a),t.child=wa(t,null,l,a)):Li(e,t,l,a),t.memoizedState=r.state,o&&go(t,n,!0),t.child}function Ui(e){var t=e.stateNode;t.pendingContext?po(0,t.pendingContext,t.pendingContext!==t.context):t.context&&po(0,t.context,!1),Oa(e,t.containerInfo)}var $i,Vi,Bi,Hi={dehydrated:null,retryLane:0};function Wi(e,t,n){var r,o=t.pendingProps,a=La.current,i=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),oo(La,1&a),null===e?(void 0!==o.fallback&&Da(t),e=o.children,a=o.fallback,i?(e=qi(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Hi,e):"number"==typeof o.unstable_expectedLoadTime?(e=qi(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Hi,t.lanes=33554432,e):((n=Du({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,i?(o=function(e,t,n,r,o){var a=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:n};return 0==(2&a)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,null!==(i=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Au(i,l),null!==e?r=Au(e,r):(r=zu(r,a,o,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,o.children,o.fallback,n),i=t.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:n}:{baseLanes:a.baseLanes|n},i.childLanes=e.childLanes&~n,t.memoizedState=Hi,o):(n=function(e,t,n,r){var o=e.child;return e=o.sibling,n=Au(o,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,o.children,n),t.memoizedState=null,n))}function qi(e,t,n,r){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=Du(t,o,0,null),n=zu(n,o,r,null),a.return=e,n.return=e,a.sibling=n,e.child=a,n}function Qi(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Xo(e.return,t)}function Ki(e,t,n,r,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=r,i.tail=n,i.tailMode=o,i.lastEffect=a)}function Zi(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(Li(e,t,r.children,n),0!=(2&(r=La.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Qi(e,n);else if(19===e.tag)Qi(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(oo(La,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Ra(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Ki(t,!1,o,n,a,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ra(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Ki(t,!0,n,null,a,t.lastEffect);break;case"together":Ki(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Yi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Rl|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Au(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Au(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function Ji(e,t){if(!Aa)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Xi(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return co(t.type)&&fo(),null;case 3:return Pa(),ro(lo),ro(io),Ba(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ua(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:ja(t);var a=Ca(xa.current);if(n=t.type,null!==e&&null!=t.stateNode)Vi(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(i(166));return null}if(e=Ca(Sa.current),Ua(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Wr]=t,r[qr]=l,n){case"dialog":Sr("cancel",r),Sr("close",r);break;case"iframe":case"object":case"embed":Sr("load",r);break;case"video":case"audio":for(e=0;e<br.length;e++)Sr(br[e],r);break;case"source":Sr("error",r);break;case"img":case"image":case"link":Sr("error",r),Sr("load",r);break;case"details":Sr("toggle",r);break;case"input":ee(r,l),Sr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Sr("invalid",r);break;case"textarea":ue(r,l),Sr("invalid",r)}for(var s in Se(n,l),e=null,l)l.hasOwnProperty(s)&&(a=l[s],"children"===s?"string"==typeof a?r.textContent!==a&&(e=["children",a]):"number"==typeof a&&r.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(s)&&null!=a&&"onScroll"===s&&Sr("scroll",r));switch(n){case"input":Y(r),re(r,l,!0);break;case"textarea":Y(r),ce(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Tr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Wr]=t,e[qr]=r,$i(e,t),t.stateNode=e,s=_e(n,r),n){case"dialog":Sr("cancel",e),Sr("close",e),a=r;break;case"iframe":case"object":case"embed":Sr("load",e),a=r;break;case"video":case"audio":for(a=0;a<br.length;a++)Sr(br[a],e);a=r;break;case"source":Sr("error",e),a=r;break;case"img":case"image":case"link":Sr("error",e),Sr("load",e),a=r;break;case"details":Sr("toggle",e),a=r;break;case"input":ee(e,r),a=G(e,r),Sr("invalid",e);break;case"option":a=ae(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=o({},r,{value:void 0}),Sr("invalid",e);break;case"textarea":ue(e,r),a=le(e,r),Sr("invalid",e);break;default:a=r}Se(n,a);var c=a;for(l in c)if(c.hasOwnProperty(l)){var f=c[l];"style"===l?ke(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&ge(e,f):"children"===l?"string"==typeof f?("textarea"!==n||""!==f)&&ve(e,f):"number"==typeof f&&ve(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Sr("scroll",e):null!=f&&w(e,l,f,s))}switch(n){case"input":Y(e),re(e,r,!1);break;case"textarea":Y(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?ie(e,!!r.multiple,l,!1):null!=r.defaultValue&&ie(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Tr)}Mr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Bi(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));n=Ca(xa.current),Ca(Sa.current),Ua(t)?(r=t.stateNode,n=t.memoizedProps,r[Wr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Wr]=t,t.stateNode=r)}return null;case 13:return ro(La),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Ua(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&La.current)?0===Nl&&(Nl=3):(0!==Nl&&3!==Nl||(Nl=4),null===_l||0==(134217727&Rl)&&0==(134217727&Tl)||su(_l,Cl))),(r||n)&&(t.flags|=4),null);case 4:return Pa(),null===e&&xr(t.stateNode.containerInfo),null;case 10:return Jo(t),null;case 17:return co(t.type)&&fo(),null;case 19:if(ro(La),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)Ji(r,!1);else{if(0!==Nl||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=Ra(e))){for(t.flags|=64,Ji(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return oo(La,1&La.current|2),t.child}e=e.sibling}null!==r.tail&&zo()>zl&&(t.flags|=64,l=!0,Ji(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Ra(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Ji(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Aa)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*zo()-r.renderingStartTime>zl&&1073741824!==n&&(t.flags|=64,l=!0,Ji(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=zo(),n.sibling=null,t=La.current,oo(La,l?1&t|2:1&t),n):null;case 23:case 24:return du(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function Gi(e){switch(e.tag){case 1:co(e.type)&&fo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Pa(),ro(lo),ro(io),Ba(),0!=(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return ja(e),null;case 13:return ro(La),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return ro(La),null;case 4:return Pa(),null;case 10:return Jo(e),null;case 23:case 24:return du(),null;default:return null}}function el(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function tl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}$i=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Vi=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Ca(Sa.current);var i,l=null;switch(n){case"input":a=G(e,a),r=G(e,r),l=[];break;case"option":a=ae(e,a),r=ae(e,r),l=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),l=[];break;case"textarea":a=le(e,a),r=le(e,r),l=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Tr)}for(f in Se(n,r),n=null,a)if(!r.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var s=a[f];for(i in s)s.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in r){var c=r[f];if(s=null!=a?a[f]:void 0,r.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(i in s)!s.hasOwnProperty(i)||c&&c.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in c)c.hasOwnProperty(i)&&s[i]!==c[i]&&(n||(n={}),n[i]=c[i])}else n||(l||(l=[]),l.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(l=l||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(l=l||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Sr("scroll",e),l||s===c||(l=[])):"object"==typeof c&&null!==c&&c.$$typeof===A?c.toString():(l=l||[]).push(f,c))}n&&(l=l||[]).push("style",n);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Bi=function(e,t,n,r){n!==r&&(t.flags|=4)};var nl="function"==typeof WeakMap?WeakMap:Map;function rl(e,t,n){(n=oa(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){$l||($l=!0,Vl=r),tl(0,t)},n}function ol(e,t,n){(n=oa(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return tl(0,t),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Bl?Bl=new Set([this]):Bl.add(this),tl(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var al="function"==typeof WeakSet?WeakSet:Set;function il(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Nu(e,t)}else t.current=null}function ll(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Wo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Ur(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function ul(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(Cu(n,e),xu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Wo(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&ua(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}ua(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Mr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&yt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function sl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=we("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function cl(e,t){if(yo&&"function"==typeof yo.onCommitFiberUnmount)try{yo.onCommitFiberUnmount(vo,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))Cu(t,n);else{r=t;try{o()}catch(e){Nu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(il(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Nu(t,e)}break;case 5:il(t);break;case 4:gl(e,t)}}function fl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function dl(e){return 5===e.tag||3===e.tag||4===e.tag}function pl(e){e:{for(var t=e.return;null!==t;){if(dl(t))break e;t=t.return}throw Error(i(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(i(161))}16&n.flags&&(ve(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||dl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?hl(e,n,t):ml(e,n,t)}function hl(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Tr));else if(4!==r&&null!==(e=e.child))for(hl(e,t,n),e=e.sibling;null!==e;)hl(e,t,n),e=e.sibling}function ml(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ml(e,t,n),e=e.sibling;null!==e;)ml(e,t,n),e=e.sibling}function gl(e,t){for(var n,r,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(n=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,s=u;;)if(cl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(cl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function vl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var o=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[qr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),_e(e,o),t=_e(e,r),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?ke(n,u):"dangerouslySetInnerHTML"===l?ge(n,u):"children"===l?ve(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(a=r.value)?ie(n,!!r.multiple,a,!1):e!==!!r.multiple&&(null!=r.defaultValue?ie(n,!!r.multiple,r.defaultValue,!0):ie(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,yt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Ml=zo(),sl(t.child,!0)),void yl(t);case 19:return void yl(t);case 17:return;case 23:case 24:return void sl(t,null!==t.memoizedState)}throw Error(i(163))}function yl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new al),t.forEach((function(t){var r=Lu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function bl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var wl=Math.ceil,kl=k.ReactCurrentDispatcher,El=k.ReactCurrentOwner,Sl=0,_l=null,xl=null,Cl=0,Ol=0,Pl=no(0),Nl=0,jl=null,Ll=0,Rl=0,Tl=0,Il=0,Al=null,Ml=0,zl=1/0;function Dl(){zl=zo()+500}var Fl,Ul=null,$l=!1,Vl=null,Bl=null,Hl=!1,Wl=null,ql=90,Ql=[],Kl=[],Zl=null,Yl=0,Jl=null,Xl=-1,Gl=0,eu=0,tu=null,nu=!1;function ru(){return 0!=(48&Sl)?zo():-1!==Xl?Xl:Xl=zo()}function ou(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Do()?1:2;if(0===Gl&&(Gl=Ll),0!==Ho.transition){0!==eu&&(eu=null!==Al?Al.pendingLanes:0),e=Gl;var t=4186112&~eu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Do(),Mt(0!=(4&Sl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),Gl)}function au(e,t,n){if(50<Yl)throw Yl=0,Jl=null,Error(i(185));if(null===(e=iu(e,t)))return null;Ft(e,t,n),e===_l&&(Tl|=t,4===Nl&&su(e,Cl));var r=Do();1===t?0!=(8&Sl)&&0==(48&Sl)?cu(e):(lu(e,n),0===Sl&&(Dl(),Vo())):(0==(4&Sl)||98!==r&&99!==r||(null===Zl?Zl=new Set([e]):Zl.add(e)),lu(e,n)),Al=e}function iu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function lu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Ut(l),s=1<<u,c=a[u];if(-1===c){if(0==(s&r)||0!=(s&o)){c=t,Tt(s);var f=Rt;a[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);l&=~s}if(r=It(e,e===_l?Cl:0),t=Rt,0===r)null!==n&&(n!==Lo&&ko(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Lo&&ko(n)}15===t?(n=cu.bind(null,e),null===To?(To=[n],Io=wo(Co,Bo)):To.push(n),n=Lo):n=14===t?$o(99,cu.bind(null,e)):$o(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),uu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function uu(e){if(Xl=-1,eu=Gl=0,0!=(48&Sl))throw Error(i(327));var t=e.callbackNode;if(_u()&&e.callbackNode!==t)return null;var n=It(e,e===_l?Cl:0);if(0===n)return null;var r=n,o=Sl;Sl|=16;var a=mu();for(_l===e&&Cl===r||(Dl(),pu(e,r));;)try{yu();break}catch(t){hu(e,t)}if(Yo(),kl.current=a,Sl=o,null!==xl?r=0:(_l=null,Cl=0,r=Nl),0!=(Ll&Tl))pu(e,0);else if(0!==r){if(2===r&&(Sl|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(n=At(e))&&(r=gu(e,n))),1===r)throw t=jl,pu(e,0),su(e,n),lu(e,zo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(i(345));case 2:ku(e);break;case 3:if(su(e,n),(62914560&n)===n&&10<(r=Ml+500-zo())){if(0!==It(e,0))break;if(((o=e.suspendedLanes)&n)!==n){ru(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Dr(ku.bind(null,e),r);break}ku(e);break;case 4:if(su(e,n),(4186112&n)===n)break;for(r=e.eventTimes,o=-1;0<n;){var l=31-Ut(n);a=1<<l,(l=r[l])>o&&(o=l),n&=~a}if(n=o,10<(n=(120>(n=zo()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*wl(n/1960))-n)){e.timeoutHandle=Dr(ku.bind(null,e),n);break}ku(e);break;case 5:ku(e);break;default:throw Error(i(329))}}return lu(e,zo()),e.callbackNode===t?uu.bind(null,e):null}function su(e,t){for(t&=~Il,t&=~Tl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ut(t),r=1<<n;e[n]=-1,t&=~r}}function cu(e){if(0!=(48&Sl))throw Error(i(327));if(_u(),e===_l&&0!=(e.expiredLanes&Cl)){var t=Cl,n=gu(e,t);0!=(Ll&Tl)&&(n=gu(e,t=It(e,t)))}else n=gu(e,t=It(e,0));if(0!==e.tag&&2===n&&(Sl|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(t=At(e))&&(n=gu(e,t))),1===n)throw n=jl,pu(e,0),su(e,t),lu(e,zo()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,ku(e),lu(e,zo()),null}function fu(e,t){oo(Pl,Ol),Ol|=t,Ll|=t}function du(){Ol=Pl.current,ro(Pl)}function pu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Fr(n)),null!==xl)for(n=xl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&fo();break;case 3:Pa(),ro(lo),ro(io),Ba();break;case 5:ja(r);break;case 4:Pa();break;case 13:case 19:ro(La);break;case 10:Jo(r);break;case 23:case 24:du()}n=n.return}_l=e,xl=Au(e.current,null),Cl=Ol=Ll=t,Nl=0,jl=null,Il=Tl=Rl=0}function hu(e,t){for(;;){var n=xl;try{if(Yo(),Ha.current=xi,Ya){for(var r=Qa.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}Ya=!1}if(qa=0,Za=Ka=Qa=null,Ja=!1,El.current=null,null===n||null===n.return){Nl=1,jl=t,xl=null;break}e:{var a=e,i=n.return,l=n,u=t;if(t=Cl,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.lanes=c.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!=(1&La.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var g=d.updateQueue;if(null===g){var v=new Set;v.add(s),d.updateQueue=v}else g.add(s);if(0==(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=oa(-1,1);y.tag=2,aa(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new nl,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(l)){u.add(l);var w=ju.bind(null,a,s,l);s.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((Q(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Nl&&(Nl=2),u=el(u,l),d=i;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,ia(d,rl(0,a,t));break e;case 1:a=u;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===Bl||!Bl.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,ia(d,ol(d,a,t));break e}}d=d.return}while(null!==d)}wu(n)}catch(e){t=e,xl===n&&null!==n&&(xl=n=n.return);continue}break}}function mu(){var e=kl.current;return kl.current=xi,null===e?xi:e}function gu(e,t){var n=Sl;Sl|=16;var r=mu();for(_l===e&&Cl===t||pu(e,t);;)try{vu();break}catch(t){hu(e,t)}if(Yo(),Sl=n,kl.current=r,null!==xl)throw Error(i(261));return _l=null,Cl=0,Nl}function vu(){for(;null!==xl;)bu(xl)}function yu(){for(;null!==xl&&!Eo();)bu(xl)}function bu(e){var t=Fl(e.alternate,e,Ol);e.memoizedProps=e.pendingProps,null===t?wu(e):xl=t,El.current=null}function wu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=Xi(n,t,Ol)))return void(xl=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Ol)||0==(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=Gi(t)))return n.flags&=2047,void(xl=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(xl=t);xl=t=e}while(null!==t);0===Nl&&(Nl=5)}function ku(e){var t=Do();return Uo(99,Eu.bind(null,e,t)),null}function Eu(e,t){do{_u()}while(null!==Wl);if(0!=(48&Sl))throw Error(i(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null;var r=n.lanes|n.childLanes,o=r,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<a;){var s=31-Ut(a),c=1<<s;o[s]=0,l[s]=-1,u[s]=-1,a&=~c}if(null!==Zl&&0==(24&r)&&Zl.has(e)&&Zl.delete(e),e===_l&&(xl=_l=null,Cl=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=Sl,Sl|=32,El.current=null,Ir=Wt,cr(l=sr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,a=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,g=l,v=null;t:for(;;){for(var y;g!==u||0!==a&&3!==g.nodeType||(d=f+a),g!==s||0!==c&&3!==g.nodeType||(p=f+c),3===g.nodeType&&(f+=g.nodeValue.length),null!==(y=g.firstChild);)v=g,g=y;for(;;){if(g===l)break t;if(v===u&&++h===a&&(d=f),v===s&&++m===c&&(p=f),null!==(y=g.nextSibling))break;v=(g=v).parentNode}g=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Ar={focusedElem:l,selectionRange:u},Wt=!1,tu=null,nu=!1,Ul=r;do{try{Su()}catch(e){if(null===Ul)throw Error(i(330));Nu(Ul,e),Ul=Ul.nextEffect}}while(null!==Ul);tu=null,Ul=r;do{try{for(l=e;null!==Ul;){var b=Ul.flags;if(16&b&&ve(Ul.stateNode,""),128&b){var w=Ul.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:pl(Ul),Ul.flags&=-3;break;case 6:pl(Ul),Ul.flags&=-3,vl(Ul.alternate,Ul);break;case 1024:Ul.flags&=-1025;break;case 1028:Ul.flags&=-1025,vl(Ul.alternate,Ul);break;case 4:vl(Ul.alternate,Ul);break;case 8:gl(l,u=Ul);var E=u.alternate;fl(u),null!==E&&fl(E)}Ul=Ul.nextEffect}}catch(e){if(null===Ul)throw Error(i(330));Nu(Ul,e),Ul=Ul.nextEffect}}while(null!==Ul);if(k=Ar,w=sr(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&ur(b.ownerDocument.documentElement,b)){null!==l&&cr(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(l.start,u),l=void 0===l.end?E:Math.min(l.end,u),!k.extend&&E>l&&(u=l,l=E,E=u),u=lr(b,E),a=lr(b,l),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>l?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Wt=!!Ir,Ar=Ir=null,e.current=n,Ul=r;do{try{for(b=e;null!==Ul;){var S=Ul.flags;if(36&S&&ul(b,Ul.alternate,Ul),128&S){w=void 0;var _=Ul.ref;if(null!==_){var x=Ul.stateNode;switch(Ul.tag){case 5:w=x;break;default:w=x}"function"==typeof _?_(w):_.current=w}}Ul=Ul.nextEffect}}catch(e){if(null===Ul)throw Error(i(330));Nu(Ul,e),Ul=Ul.nextEffect}}while(null!==Ul);Ul=null,Ro(),Sl=o}else e.current=n;if(Hl)Hl=!1,Wl=e,ql=t;else for(Ul=r;null!==Ul;)t=Ul.nextEffect,Ul.nextEffect=null,8&Ul.flags&&((S=Ul).sibling=null,S.stateNode=null),Ul=t;if(0===(r=e.pendingLanes)&&(Bl=null),1===r?e===Jl?Yl++:(Yl=0,Jl=e):Yl=0,n=n.stateNode,yo&&"function"==typeof yo.onCommitFiberRoot)try{yo.onCommitFiberRoot(vo,n,void 0,64==(64&n.current.flags))}catch(e){}if(lu(e,zo()),$l)throw $l=!1,e=Vl,Vl=null,e;return 0!=(8&Sl)||Vo(),null}function Su(){for(;null!==Ul;){var e=Ul.alternate;nu||null===tu||(0!=(8&Ul.flags)?Ye(Ul,tu)&&(nu=!0):13===Ul.tag&&bl(e,Ul)&&Ye(Ul,tu)&&(nu=!0));var t=Ul.flags;0!=(256&t)&&ll(e,Ul),0==(512&t)||Hl||(Hl=!0,$o(97,(function(){return _u(),null}))),Ul=Ul.nextEffect}}function _u(){if(90!==ql){var e=97<ql?97:ql;return ql=90,Uo(e,Ou)}return!1}function xu(e,t){Ql.push(t,e),Hl||(Hl=!0,$o(97,(function(){return _u(),null})))}function Cu(e,t){Kl.push(t,e),Hl||(Hl=!0,$o(97,(function(){return _u(),null})))}function Ou(){if(null===Wl)return!1;var e=Wl;if(Wl=null,0!=(48&Sl))throw Error(i(331));var t=Sl;Sl|=32;var n=Kl;Kl=[];for(var r=0;r<n.length;r+=2){var o=n[r],a=n[r+1],l=o.destroy;if(o.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));Nu(a,e)}}for(n=Ql,Ql=[],r=0;r<n.length;r+=2){o=n[r],a=n[r+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(i(330));Nu(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Sl=t,Vo(),!0}function Pu(e,t,n){aa(e,t=rl(0,t=el(n,t),1)),t=ru(),null!==(e=iu(e,1))&&(Ft(e,1,t),lu(e,t))}function Nu(e,t){if(3===e.tag)Pu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Pu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Bl||!Bl.has(r))){var o=ol(n,e=el(t,e),1);if(aa(n,o),o=ru(),null!==(n=iu(n,1)))Ft(n,1,o),lu(n,o);else if("function"==typeof r.componentDidCatch&&(null===Bl||!Bl.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function ju(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ru(),e.pingedLanes|=e.suspendedLanes&n,_l===e&&(Cl&n)===n&&(4===Nl||3===Nl&&(62914560&Cl)===Cl&&500>zo()-Ml?pu(e,0):Il|=n),lu(e,t)}function Lu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Do()?1:2:(0===Gl&&(Gl=Ll),0===(t=zt(62914560&~Gl))&&(t=4194304))),n=ru(),null!==(e=iu(e,t))&&(Ft(e,t,n),lu(e,n))}function Ru(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Tu(e,t,n,r){return new Ru(e,t,n,r)}function Iu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Au(e,t){var n=e.alternate;return null===n?((n=Tu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Mu(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)Iu(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case _:return zu(n.children,o,a,t);case M:l=8,o|=16;break;case x:l=8,o|=1;break;case C:return(e=Tu(12,n,t,8|o)).elementType=C,e.type=C,e.lanes=a,e;case j:return(e=Tu(13,n,t,o)).type=j,e.elementType=j,e.lanes=a,e;case L:return(e=Tu(19,n,t,o)).elementType=L,e.lanes=a,e;case z:return Du(n,o,a,t);case D:return(e=Tu(24,n,t,o)).elementType=D,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case O:l=10;break e;case P:l=9;break e;case N:l=11;break e;case R:l=14;break e;case T:l=16,r=null;break e;case I:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Tu(l,n,t,o)).elementType=e,t.type=r,t.lanes=a,t}function zu(e,t,n,r){return(e=Tu(7,e,r,t)).lanes=n,e}function Du(e,t,n,r){return(e=Tu(23,e,r,t)).elementType=z,e.lanes=n,e}function Fu(e,t,n){return(e=Tu(6,e,null,t)).lanes=n,e}function Uu(e,t,n){return(t=Tu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $u(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Dt(0),this.expirationTimes=Dt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Dt(0),this.mutableSourceEagerHydrationData=null}function Vu(e,t,n,r){var o=t.current,a=ru(),l=ou(o);e:if(n){t:{if(Qe(n=n._reactInternals)!==n||1!==n.tag)throw Error(i(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(co(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===n.tag){var s=n.type;if(co(s)){n=ho(n,s,u);break e}}n=u}else n=ao;return null===t.context?t.context=n:t.pendingContext=n,(t=oa(a,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),aa(o,t),au(o,l,a),l}function Bu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Hu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Wu(e,t){Hu(e,t),(e=e.alternate)&&Hu(e,t)}function qu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new $u(e,t,null!=n&&!0===n.hydrate),t=Tu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,na(t),e[Qr]=n.current,xr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(t=r[e])._getVersion;o=o(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=n}Fl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||lo.current)ji=!0;else{if(0==(n&r)){switch(ji=!1,t.tag){case 3:Ui(t),$a();break;case 5:Na(t);break;case 1:co(t.type)&&mo(t);break;case 4:Oa(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var o=t.type._context;oo(qo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Wi(e,t,n):(oo(La,1&La.current),null!==(t=Yi(e,t,n))?t.sibling:null);oo(La,1&La.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Zi(e,t,n);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),oo(La,La.current),r)break;return null;case 23:case 24:return t.lanes=0,Ai(e,t,n)}return Yi(e,t,n)}ji=0!=(16384&e.flags)}else ji=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=so(t,io.current),Go(t,n),o=ei(null,t,r,e,o,n),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,co(r)){var a=!0;mo(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,na(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&ca(t,r,l,e),o.updater=fa,t.stateNode=o,o._reactInternals=t,ma(t,r,e,n),t=Fi(null,t,r,!0,a,n)}else t.tag=0,Li(null,t,o,n),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"==typeof e)return Iu(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===R)return 14}return 2}(o),e=Wo(o,e),a){case 0:t=zi(null,t,o,e,n);break e;case 1:t=Di(null,t,o,e,n);break e;case 11:t=Ri(null,t,o,e,n);break e;case 14:t=Ti(null,t,o,Wo(o.type,e),r,n);break e}throw Error(i(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,zi(e,t,r,o=t.elementType===r?o:Wo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Di(e,t,r,o=t.elementType===r?o:Wo(r,o),n);case 3:if(Ui(t),r=t.updateQueue,null===e||null===r)throw Error(i(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ra(e,t),la(t,r,null,n),(r=t.memoizedState.element)===o)$a(),t=Yi(e,t,n);else{if((a=(o=t.stateNode).hydrate)&&(Ia=$r(t.stateNode.containerInfo.firstChild),Ta=t,a=Aa=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],Va.push(a);for(n=ka(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Li(e,t,r,n),$a();t=t.child}return t;case 5:return Na(t),null===e&&Da(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,zr(r,o)?l=null:null!==a&&zr(r,a)&&(t.flags|=16),Mi(e,t),Li(e,t,l,n),t.child;case 6:return null===e&&Da(t),null;case 13:return Wi(e,t,n);case 4:return Oa(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=wa(t,null,r,n):Li(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ri(e,t,r,o=t.elementType===r?o:Wo(r,o),n);case 7:return Li(e,t,t.pendingProps,n),t.child;case 8:case 12:return Li(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,l=t.memoizedProps,a=o.value;var u=t.type._context;if(oo(qo,u._currentValue),u._currentValue=a,null!==l)if(u=l.value,0==(a=rr(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!lo.current){t=Yi(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&a)){1===u.tag&&((c=oa(-1,n&-n)).tag=2,aa(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),Xo(u.return,n),s.lanes|=n;break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Li(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,Go(t,n),r=r(o=ea(o,a.unstable_observedBits)),t.flags|=1,Li(e,t,r,n),t.child;case 14:return a=Wo(o=t.type,t.pendingProps),Ti(e,t,o,a=Wo(o.type,a),r,n);case 15:return Ii(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Wo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,co(r)?(e=!0,mo(t)):e=!1,Go(t,n),pa(t,r,o),ma(t,r,o,n),Fi(null,t,r,!0,e,n);case 19:return Zi(e,t,n);case 23:case 24:return Ai(e,t,n)}throw Error(i(156,t.tag))},qu.prototype.render=function(e){Vu(e,this._internalRoot,null,null)},qu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Vu(null,e,null,(function(){t[Qr]=null}))},Je=function(e){13===e.tag&&(au(e,4,ru()),Wu(e,4))},Xe=function(e){13===e.tag&&(au(e,67108864,ru()),Wu(e,67108864))},Ge=function(e){if(13===e.tag){var t=ru(),n=ou(e);au(e,n,t),Wu(e,n)}},et=function(e,t){return t()},Ce=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=Xr(r);if(!o)throw Error(i(90));J(r),ne(r,o)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ie(e,!!n.multiple,t,!1)}},je=function(e,t){var n=Sl;Sl|=1;try{return e(t)}finally{0===(Sl=n)&&(Dl(),Vo())}},Le=function(e,t,n,r,o){var a=Sl;Sl|=4;try{return Uo(98,e.bind(null,t,n,r,o))}finally{0===(Sl=a)&&(Dl(),Vo())}},Re=function(){0==(49&Sl)&&(function(){if(null!==Zl){var e=Zl;Zl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,lu(e,zo())}))}Vo()}(),_u())},Te=function(e,t){var n=Sl;Sl|=2;try{return e(t)}finally{0===(Sl=n)&&(Dl(),Vo())}};var Qu={findFiberByHostInstance:Zr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Ku={bundleType:Qu.bundleType,version:Qu.version,rendererPackageName:Qu.rendererPackageName,rendererConfig:Qu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Qe(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){n=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===n)return Ze(o),e;if(a===r)return Ze(o),t;a=a.sibling}throw Error(i(188))}if(n.return!==r.return)n=o,r=a;else{for(var l=!1,u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Qu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Zu=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Zu.isDisabled&&Zu.supportsFiber)try{vo=Zu.inject(Ku),yo=Zu}catch(me){}}t.render=function(e,t,n){if(!function(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}(t))throw Error(i(200));return function(e,t,n,r,o){var a=n._reactRootContainer;if(a){var i=a._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Bu(i);l.call(e)}}Vu(t,i,null,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new qu(e,0,t?{hydrate:!0}:void 0)}(n,!1),i=a._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Bu(i);u.call(e)}}!function(e,t){var n=Sl;Sl&=-2,Sl|=8;try{e()}finally{0===(Sl=n)&&(Dl(),Vo())}}((function(){Vu(t,i,null,o)}))}return Bu(i)}(0,e,t,0,n)}},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},718:(e,t,n)=>{"use strict";n.d(t,{OO:()=>f,JP:()=>d,zv:()=>p,nI:()=>h,Db:()=>m});var r=n(670),o=n(816),a=n(949),i=n(294);function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){(0,a.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var s,c={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0},f=i.createContext();function d(){return c}var p=function(){function e(){(0,r.Z)(this,e),this.usedNamespaces={}}return(0,o.Z)(e,[{key:"addUsedNamespaces",value:function(e){var t=this;e.forEach((function(e){t.usedNamespaces[e]||(t.usedNamespaces[e]=!0)}))}},{key:"getUsedNamespaces",value:function(){return Object.keys(this.usedNamespaces)}}]),e}();function h(){return s}var m={type:"3rdParty",init:function(e){!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};c=u(u({},c),e)}(e.options.react),function(e){s=e}(e)}}},687:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n.d(t,{$:()=>m});var a=n(949),i=n(294),l=n(718);function u(){if(console&&console.warn){for(var e,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];"string"==typeof n[0]&&(n[0]="react-i18next:: ".concat(n[0])),(e=console).warn.apply(e,n)}}var s={};function c(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];"string"==typeof t[0]&&s[t[0]]||("string"==typeof t[0]&&(s[t[0]]=new Date),u.apply(void 0,t))}function f(e,t,n){e.loadNamespaces(t,(function(){e.isInitialized?n():e.on("initialized",(function t(){setTimeout((function(){e.off("initialized",t)}),0),n()}))}))}function d(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t.languages||!t.languages.length)return c("i18n.languages were undefined or empty",t.languages),!0;var r=t.languages[0],o=!!t.options&&t.options.fallbackLng,a=t.languages[t.languages.length-1];if("cimode"===r.toLowerCase())return!0;var i=function(e,n){var r=t.services.backendConnector.state["".concat(e,"|").concat(n)];return-1===r||2===r};return!(n.bindI18n&&n.bindI18n.indexOf("languageChanging")>-1&&t.services.backendConnector.backend&&t.isLanguageChangingTo&&!i(t.isLanguageChangingTo,e)||!t.hasResourceBundle(r,e)&&t.services.backendConnector.backend&&(!i(r,e)||o&&!i(a,e)))}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function h(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){(0,a.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.i18n,r=(0,i.useContext)(l.OO)||{},a=r.i18n,u=r.defaultNS,s=n||a||(0,l.nI)();if(s&&!s.reportNamespaces&&(s.reportNamespaces=new l.zv),!s){c("You will need to pass in an i18next instance by using initReactI18next");var p=function(e){return Array.isArray(e)?e[e.length-1]:e},m=[p,{},!1];return m.t=p,m.i18n={},m.ready=!1,m}s.options.react&&void 0!==s.options.react.wait&&c("It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");var g=h(h(h({},(0,l.JP)()),s.options.react),t),v=g.useSuspense,y=e||u||s.options&&s.options.defaultNS;y="string"==typeof y?[y]:y||["translation"],s.reportNamespaces.addUsedNamespaces&&s.reportNamespaces.addUsedNamespaces(y);var b=(s.isInitialized||s.initializedStoreOnce)&&y.every((function(e){return d(e,s,g)}));function w(){return{t:s.getFixedT(null,"fallback"===g.nsMode?y:y[0])}}var k=(0,i.useState)(w()),E=o(k,2),S=E[0],_=E[1],x=(0,i.useRef)(!0);(0,i.useEffect)((function(){var e=g.bindI18n,t=g.bindI18nStore;function n(){x.current&&_(w())}return x.current=!0,b||v||f(s,y,(function(){x.current&&_(w())})),e&&s&&s.on(e,n),t&&s&&s.store.on(t,n),function(){x.current=!1,e&&s&&e.split(" ").forEach((function(e){return s.off(e,n)})),t&&s&&t.split(" ").forEach((function(e){return s.store.off(e,n)}))}}),[s,y.join()]);var C=(0,i.useRef)(!0);(0,i.useEffect)((function(){x.current&&!C.current&&_(w()),C.current=!1}),[s]);var O=[S.t,s,b];if(O.t=S.t,O.i18n=s,O.ready=b,b)return O;if(!b&&!v)return O;throw new Promise((function(e){f(s,y,(function(){e()}))}))}},408:(e,t,n)=>{"use strict";var r=n(418),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function v(){}function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=g.prototype;var b=y.prototype=new v;b.constructor=y,r(b,g.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,a={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:w.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var x=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function O(e,t,n,r,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return i=i(u=e),e=""===r?"."+C(u,0):r,Array.isArray(i)?(n="",null!=e&&(n=e.replace(x,"$&/")+"/"),O(i,t,n,"",(function(e){return e}))):null!=i&&(_(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(x,"$&/")+"/")+e)),t.push(i)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+C(l=e[s],s);u+=O(l,t,n,c,i)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),s=0;!(l=e.next()).done;)u+=O(l=l.value,t,n,c=r+C(l,s++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function P(e,t,n){if(null==e)return e;var r=[],o=0;return O(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function N(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var j={current:null};function L(){var e=j.current;if(null===e)throw Error(p(321));return e}var R={ReactCurrentDispatcher:j,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!_(e))throw Error(p(143));return e}},t.Component=g,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var a=r({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)k.call(t,c)&&!E.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];a.children=s}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="17.0.1"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,o,a;if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,f=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,g=null,v=-1,y=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();b=e+y;try{g(!0,e)?k.postMessage(null):(m=!1,g=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){g=e,m||(m=!0,k.postMessage(null))},r=function(e,n){v=d((function(){e(t.unstable_now())}),n)},o=function(){p(v),v=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<x(o,t)))break e;e[r]=t,e[n]=o,n=r}}function S(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>x(i,n))void 0!==u&&0>x(u,i)?(e[r]=u,e[l]=n,r=l):(e[r]=i,e[a]=n,r=a);else{if(!(void 0!==u&&0>x(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function x(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],O=[],P=1,N=null,j=3,L=!1,R=!1,T=!1;function I(e){for(var t=S(O);null!==t;){if(null===t.callback)_(O);else{if(!(t.startTime<=e))break;_(O),t.sortIndex=t.expirationTime,E(C,t)}t=S(O)}}function A(e){if(T=!1,I(e),!R)if(null!==S(C))R=!0,n(M);else{var t=S(O);null!==t&&r(A,t.startTime-e)}}function M(e,n){R=!1,T&&(T=!1,o()),L=!0;var a=j;try{for(I(n),N=S(C);null!==N&&(!(N.expirationTime>n)||e&&!t.unstable_shouldYield());){var i=N.callback;if("function"==typeof i){N.callback=null,j=N.priorityLevel;var l=i(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?N.callback=l:N===S(C)&&_(C),I(n)}else _(C);N=S(C)}if(null!==N)var u=!0;else{var s=S(O);null!==s&&r(A,s.startTime-n),u=!1}return u}finally{N=null,j=a,L=!1}}var z=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){R||L||(R=!0,n(M))},t.unstable_getCurrentPriorityLevel=function(){return j},t.unstable_getFirstCallbackNode=function(){return S(C)},t.unstable_next=function(e){switch(j){case 1:case 2:case 3:var t=3;break;default:t=j}var n=j;j=t;try{return e()}finally{j=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=z,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=j;j=e;try{return t()}finally{j=n}},t.unstable_scheduleCallback=function(e,a,i){var l=t.unstable_now();switch(i="object"==typeof i&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:a,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,E(O,e),null===S(C)&&e===S(O)&&(T?o():T=!0,r(A,i-l))):(e.sortIndex=u,E(C,e),R||L||(R=!0,n(M))),e},t.unstable_wrapCallback=function(e){var t=j;return function(){var n=j;j=t;try{return e.apply(this,arguments)}finally{j=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},417:e=>{"use strict";e.exports=JSON.parse('{"View Course":"View Course"}')},928:e=>{"use strict";e.exports=JSON.parse('{"Enroll Now":"Enroll Now","Limited-Time Offer":"Limited-Time Offer","Hurry-Up Limited Offer":"Hurry-Up Limited Offer","One-Time Offer":"One-Time Offer","Knowledge":"Knowledge for you","Benefit":"Benefit for you from this course","Content":"Course content"}')},263:e=>{"use strict";e.exports=JSON.parse('{"Courses":"Courses","Enrolled":"Study","Login":"Login","Signout":"Sign out"}')},600:e=>{"use strict";e.exports=JSON.parse('{"Opps!":"Opps!","Need signin":"You need to sign-in to continue","Sign-in Now":"Login Now","Create account":"Create account"}')},508:e=>{"use strict";e.exports=JSON.parse('{"View Course":"Xem khóa học"}')},722:e=>{"use strict";e.exports=JSON.parse('{"Enroll Now":"Đăng ký ngay","Limited-Time Offer":"Ưu đãi có giới hạn thời gian","Hurry-Up Limited Offer":"Ưu đãi có giới hạn số lượng","One-Time Offer":"Ưu đãi đặc biệt một lần duy nhất","Knowledge":"Kiến thức trong khóa học","Benefit":"Lợi ích dành cho bạn khi tham gia khóa học","Content":"Các nội dung kiến thức trong khóa học"}')},561:e=>{"use strict";e.exports=JSON.parse('{"Courses":"Danh mục Khóa học","Enrolled":"Khóa học của tôi","Login":"Login","Signout":"Logout"}')},976:e=>{"use strict";e.exports=JSON.parse('{"Opps!":"Ố ô!","Need signin":"Bạn cần đăng nhập để tiếp tục","Sign-in Now":"Đăng nhập","Create account":"Tạo tài khoản"}')},259:(e,t,n)=>{var r={"./en/browse.json":417,"./en/course.json":928,"./en/header.json":263,"./en/popup.json":600,"./vi/browse.json":508,"./vi/course.json":722,"./vi/header.json":561,"./vi/popup.json":976};function o(e){var t=a(e);return n(t)}function a(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=a,e.exports=o,o.id=259}},n={};function r(e){if(n[e])return n[e].exports;var o=n[e]={exports:{}};return t[e](o,o.exports,r),o.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{"use strict";r.r(o),r.d(o,{default:()=>Ke});var e=r(294),t=r(935),n=r(253),a=r(308),i=r.n(a);function l(e){return new Promise((function(t,n){i().get(e,{timeout:3e4}).then((function(r){200===r.status?t(JSON.parse(r.responseText)):n("Request to ".concat(e," return ").concat(r.status," code"))}))}))}const u={__endpoint:null,setEndpoint:function(e){return this.__endpoint=e,this},fetch:function(){var e=this;if(!this.__endpoint)throw new Error("# Data fetcher: Missing endpoint");return new Promise((function(t,n){Promise.all([l(e.__endpoint.programs),l(e.__endpoint.promotions)]).then(t).catch(n)}))}};function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var c=r(949);function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?Object(arguments[t]):{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){(0,c.Z)(e,t,n[t])}))}return e}var d=r(670),p=r(816);function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function m(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?h(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}var b={type:"logger",log:function(e){this.output("log",e)},warn:function(e){this.output("warn",e)},error:function(e){this.output("error",e)},output:function(e,t){console&&console[e]&&console[e].apply(console,t)}},w=new(function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,d.Z)(this,e),this.init(t,n)}return(0,p.Z)(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||b,this.options=t,this.debug=t.debug}},{key:"setDebug",value:function(e){this.debug=e}},{key:"log",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"log","",!0)}},{key:"warn",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","",!0)}},{key:"error",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"error","")}},{key:"deprecate",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}},{key:"forward",value:function(e,t,n,r){return r&&!this.debug?null:("string"==typeof e[0]&&(e[0]="".concat(n).concat(this.prefix," ").concat(e[0])),this.logger[t](e))}},{key:"create",value:function(t){return new e(this.logger,f({},{prefix:"".concat(this.prefix,":").concat(t,":")},this.options))}}]),e}()),k=function(){function e(){(0,d.Z)(this,e),this.observers={}}return(0,p.Z)(e,[{key:"on",value:function(e,t){var n=this;return e.split(" ").forEach((function(e){n.observers[e]=n.observers[e]||[],n.observers[e].push(t)})),this}},{key:"off",value:function(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter((function(e){return e!==t})):delete this.observers[e])}},{key:"emit",value:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];if(this.observers[e]){var o=[].concat(this.observers[e]);o.forEach((function(e){e.apply(void 0,n)}))}if(this.observers["*"]){var a=[].concat(this.observers["*"]);a.forEach((function(t){t.apply(t,[e].concat(n))}))}}}]),e}();function E(){var e,t,n=new Promise((function(n,r){e=n,t=r}));return n.resolve=e,n.reject=t,n}function S(e){return null==e?"":""+e}function _(e,t,n){e.forEach((function(e){t[e]&&(n[e]=t[e])}))}function x(e,t,n){function r(e){return e&&e.indexOf("###")>-1?e.replace(/###/g,"."):e}function o(){return!e||"string"==typeof e}for(var a="string"!=typeof t?[].concat(t):t.split(".");a.length>1;){if(o())return{};var i=r(a.shift());!e[i]&&n&&(e[i]=new n),e=Object.prototype.hasOwnProperty.call(e,i)?e[i]:{}}return o()?{}:{obj:e,k:r(a.shift())}}function C(e,t,n){var r=x(e,t,Object);r.obj[r.k]=n}function O(e,t){var n=x(e,t),r=n.obj,o=n.k;if(r)return r[o]}function P(e,t,n){var r=O(e,n);return void 0!==r?r:O(t,n)}function N(e,t,n){for(var r in t)"__proto__"!==r&&"constructor"!==r&&(r in e?"string"==typeof e[r]||e[r]instanceof String||"string"==typeof t[r]||t[r]instanceof String?n&&(e[r]=t[r]):N(e[r],t[r],n):e[r]=t[r]);return e}function j(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var L={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function R(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(function(e){return L[e]})):e}var T="undefined"!=typeof window&&window.navigator&&window.navigator.userAgent&&window.navigator.userAgent.indexOf("MSIE")>-1,I=function(e){function t(e){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};return(0,d.Z)(this,t),n=m(this,g(t).call(this)),T&&k.call(h(n)),n.data=e||{},n.options=r,void 0===n.options.keySeparator&&(n.options.keySeparator="."),n}return y(t,e),(0,p.Z)(t,[{key:"addNamespaces",value:function(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}},{key:"removeNamespaces",value:function(e){var t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=void 0!==r.keySeparator?r.keySeparator:this.options.keySeparator,a=[e,t];return n&&"string"!=typeof n&&(a=a.concat(n)),n&&"string"==typeof n&&(a=a.concat(o?n.split(o):n)),e.indexOf(".")>-1&&(a=e.split(".")),O(this.data,a)}},{key:"addResource",value:function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1},a=this.options.keySeparator;void 0===a&&(a=".");var i=[e,t];n&&(i=i.concat(a?n.split(a):n)),e.indexOf(".")>-1&&(r=t,t=(i=e.split("."))[1]),this.addNamespaces(t),C(this.data,i,r),o.silent||this.emit("added",e,t,n,r)}},{key:"addResources",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(var o in n)"string"!=typeof n[o]&&"[object Array]"!==Object.prototype.toString.apply(n[o])||this.addResource(e,t,o,n[o],{silent:!0});r.silent||this.emit("added",e,t,n)}},{key:"addResourceBundle",value:function(e,t,n,r,o){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},i=[e,t];e.indexOf(".")>-1&&(r=n,n=t,t=(i=e.split("."))[1]),this.addNamespaces(t);var l=O(this.data,i)||{};r?N(l,n,o):l=f({},l,n),C(this.data,i,l),a.silent||this.emit("added",e,t,n)}},{key:"removeResourceBundle",value:function(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t)}},{key:"hasResourceBundle",value:function(e,t){return void 0!==this.getResource(e,t)}},{key:"getResourceBundle",value:function(e,t){return t||(t=this.options.defaultNS),"v1"===this.options.compatibilityAPI?f({},{},this.getResource(e,t)):this.getResource(e,t)}},{key:"getDataByLanguage",value:function(e){return this.data[e]}},{key:"toJSON",value:function(){return this.data}}]),t}(k),A={processors:{},addPostProcessor:function(e){this.processors[e.name]=e},handle:function(e,t,n,r,o){var a=this;return e.forEach((function(e){a.processors[e]&&(t=a.processors[e].process(t,n,r,o))})),t}},M={},z=function(e){function t(e){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,d.Z)(this,t),n=m(this,g(t).call(this)),T&&k.call(h(n)),_(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],e,h(n)),n.options=r,void 0===n.options.keySeparator&&(n.options.keySeparator="."),n.logger=w.create("translator"),n}return y(t,e),(0,p.Z)(t,[{key:"changeLanguage",value:function(e){e&&(this.language=e)}},{key:"exists",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}},n=this.resolve(e,t);return n&&void 0!==n.res}},{key:"extractFromKey",value:function(e,t){var n=void 0!==t.nsSeparator?t.nsSeparator:this.options.nsSeparator;void 0===n&&(n=":");var r=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,o=t.ns||this.options.defaultNS;if(n&&e.indexOf(n)>-1){var a=e.match(this.interpolator.nestingRegexp);if(a&&a.length>0)return{key:e,namespaces:o};var i=e.split(n);(n!==r||n===r&&this.options.ns.indexOf(i[0])>-1)&&(o=i.shift()),e=i.join(r)}return"string"==typeof o&&(o=[o]),{key:e,namespaces:o}}},{key:"translate",value:function(e,n,r){var o=this;if("object"!==s(n)&&this.options.overloadTranslationOptionHandler&&(n=this.options.overloadTranslationOptionHandler(arguments)),n||(n={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);var a=void 0!==n.keySeparator?n.keySeparator:this.options.keySeparator,i=this.extractFromKey(e[e.length-1],n),l=i.key,u=i.namespaces,c=u[u.length-1],d=n.lng||this.language,p=n.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(d&&"cimode"===d.toLowerCase()){if(p){var h=n.nsSeparator||this.options.nsSeparator;return c+h+l}return l}var m=this.resolve(e,n),g=m&&m.res,v=m&&m.usedKey||l,y=m&&m.exactUsedKey||l,b=Object.prototype.toString.apply(g),w=["[object Number]","[object Function]","[object RegExp]"],k=void 0!==n.joinArrays?n.joinArrays:this.options.joinArrays,E=!this.i18nFormat||this.i18nFormat.handleAsObject,S="string"!=typeof g&&"boolean"!=typeof g&&"number"!=typeof g;if(E&&g&&S&&w.indexOf(b)<0&&("string"!=typeof k||"[object Array]"!==b)){if(!n.returnObjects&&!this.options.returnObjects)return this.logger.warn("accessing an object - but returnObjects options is not enabled!"),this.options.returnedObjectHandler?this.options.returnedObjectHandler(v,g,n):"key '".concat(l," (").concat(this.language,")' returned an object instead of string.");if(a){var _="[object Array]"===b,x=_?[]:{},C=_?y:v;for(var O in g)if(Object.prototype.hasOwnProperty.call(g,O)){var P="".concat(C).concat(a).concat(O);x[O]=this.translate(P,f({},n,{joinArrays:!1,ns:u})),x[O]===P&&(x[O]=g[O])}g=x}}else if(E&&"string"==typeof k&&"[object Array]"===b)(g=g.join(k))&&(g=this.extendTranslation(g,e,n,r));else{var N=!1,j=!1,L=void 0!==n.count&&"string"!=typeof n.count,R=t.hasDefaultValue(n),T=L?this.pluralResolver.getSuffix(d,n.count):"",I=n["defaultValue".concat(T)]||n.defaultValue;!this.isValidLookup(g)&&R&&(N=!0,g=I),this.isValidLookup(g)||(j=!0,g=l);var A=R&&I!==g&&this.options.updateMissing;if(j||N||A){if(this.logger.log(A?"updateKey":"missingKey",d,c,l,A?I:g),a){var M=this.resolve(l,f({},n,{keySeparator:!1}));M&&M.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}var z=[],D=this.languageUtils.getFallbackCodes(this.options.fallbackLng,n.lng||this.language);if("fallback"===this.options.saveMissingTo&&D&&D[0])for(var F=0;F<D.length;F++)z.push(D[F]);else"all"===this.options.saveMissingTo?z=this.languageUtils.toResolveHierarchy(n.lng||this.language):z.push(n.lng||this.language);var U=function(e,t,r){o.options.missingKeyHandler?o.options.missingKeyHandler(e,c,t,A?r:g,A,n):o.backendConnector&&o.backendConnector.saveMissing&&o.backendConnector.saveMissing(e,c,t,A?r:g,A,n),o.emit("missingKey",e,c,t,g)};this.options.saveMissing&&(this.options.saveMissingPlurals&&L?z.forEach((function(e){o.pluralResolver.getSuffixes(e).forEach((function(t){U([e],l+t,n["defaultValue".concat(t)]||I)}))})):U(z,l,I))}g=this.extendTranslation(g,e,n,m,r),j&&g===l&&this.options.appendNamespaceToMissingKey&&(g="".concat(c,":").concat(l)),j&&this.options.parseMissingKeyHandler&&(g=this.options.parseMissingKeyHandler(g))}return g}},{key:"extendTranslation",value:function(e,t,n,r,o){var a=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,n,r.usedLng,r.usedNS,r.usedKey,{resolved:r});else if(!n.skipInterpolation){n.interpolation&&this.interpolator.init(f({},n,{interpolation:f({},this.options.interpolation,n.interpolation)}));var i,l=n.interpolation&&n.interpolation.skipOnVariables||this.options.interpolation.skipOnVariables;if(l){var u=e.match(this.interpolator.nestingRegexp);i=u&&u.length}var s=n.replace&&"string"!=typeof n.replace?n.replace:n;if(this.options.interpolation.defaultVariables&&(s=f({},this.options.interpolation.defaultVariables,s)),e=this.interpolator.interpolate(e,s,n.lng||this.language,n),l){var c=e.match(this.interpolator.nestingRegexp);i<(c&&c.length)&&(n.nest=!1)}!1!==n.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,r=new Array(e),i=0;i<e;i++)r[i]=arguments[i];return o&&o[0]===r[0]&&!n.context?(a.logger.warn("It seems you are nesting recursively key: ".concat(r[0]," in key: ").concat(t[0])),null):a.translate.apply(a,r.concat([t]))}),n)),n.interpolation&&this.interpolator.reset()}var d=n.postProcess||this.options.postProcess,p="string"==typeof d?[d]:d;return null!=e&&p&&p.length&&!1!==n.applyPostProcessor&&(e=A.handle(p,e,t,this.options&&this.options.postProcessPassResolved?f({i18nResolved:r},n):n,this)),e}},{key:"resolve",value:function(e){var t,n,r,o,a,i=this,l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof e&&(e=[e]),e.forEach((function(e){if(!i.isValidLookup(t)){var u=i.extractFromKey(e,l),s=u.key;n=s;var c=u.namespaces;i.options.fallbackNS&&(c=c.concat(i.options.fallbackNS));var f=void 0!==l.count&&"string"!=typeof l.count,d=void 0!==l.context&&"string"==typeof l.context&&""!==l.context,p=l.lngs?l.lngs:i.languageUtils.toResolveHierarchy(l.lng||i.language,l.fallbackLng);c.forEach((function(e){i.isValidLookup(t)||(a=e,!M["".concat(p[0],"-").concat(e)]&&i.utils&&i.utils.hasLoadedNamespace&&!i.utils.hasLoadedNamespace(a)&&(M["".concat(p[0],"-").concat(e)]=!0,i.logger.warn('key "'.concat(n,'" for languages "').concat(p.join(", "),'" won\'t get resolved as namespace "').concat(a,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),p.forEach((function(n){if(!i.isValidLookup(t)){o=n;var a,u,c=s,p=[c];for(i.i18nFormat&&i.i18nFormat.addLookupKeys?i.i18nFormat.addLookupKeys(p,s,n,e,l):(f&&(a=i.pluralResolver.getSuffix(n,l.count)),f&&d&&p.push(c+a),d&&p.push(c+="".concat(i.options.contextSeparator).concat(l.context)),f&&p.push(c+=a));u=p.pop();)i.isValidLookup(t)||(r=u,t=i.getResource(n,e,u,l))}})))}))}})),{res:t,usedKey:n,exactUsedKey:r,usedLng:o,usedNS:a}}},{key:"isValidLookup",value:function(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,n,r):this.resourceStore.getResource(e,t,n,r)}}],[{key:"hasDefaultValue",value:function(e){var t="defaultValue";for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&t===n.substring(0,t.length)&&void 0!==e[n])return!0;return!1}}]),t}(k);function D(e){return e.charAt(0).toUpperCase()+e.slice(1)}var F=function(){function e(t){(0,d.Z)(this,e),this.options=t,this.whitelist=this.options.supportedLngs||!1,this.supportedLngs=this.options.supportedLngs||!1,this.logger=w.create("languageUtils")}return(0,p.Z)(e,[{key:"getScriptPartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return null;var t=e.split("-");return 2===t.length?null:(t.pop(),"x"===t[t.length-1].toLowerCase()?null:this.formatLanguageCode(t.join("-")))}},{key:"getLanguagePartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return e;var t=e.split("-");return this.formatLanguageCode(t[0])}},{key:"formatLanguageCode",value:function(e){if("string"==typeof e&&e.indexOf("-")>-1){var t=["hans","hant","latn","cyrl","cans","mong","arab"],n=e.split("-");return this.options.lowerCaseLng?n=n.map((function(e){return e.toLowerCase()})):2===n.length?(n[0]=n[0].toLowerCase(),n[1]=n[1].toUpperCase(),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=D(n[1].toLowerCase()))):3===n.length&&(n[0]=n[0].toLowerCase(),2===n[1].length&&(n[1]=n[1].toUpperCase()),"sgn"!==n[0]&&2===n[2].length&&(n[2]=n[2].toUpperCase()),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=D(n[1].toLowerCase())),t.indexOf(n[2].toLowerCase())>-1&&(n[2]=D(n[2].toLowerCase()))),n.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}},{key:"isWhitelisted",value:function(e){return this.logger.deprecate("languageUtils.isWhitelisted",'function "isWhitelisted" will be renamed to "isSupportedCode" in the next major - please make sure to rename it\'s usage asap.'),this.isSupportedCode(e)}},{key:"isSupportedCode",value:function(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}},{key:"getBestMatchFromCodes",value:function(e){var t,n=this;return e?(e.forEach((function(e){if(!t){var r=n.formatLanguageCode(e);n.options.supportedLngs&&!n.isSupportedCode(r)||(t=r)}})),!t&&this.options.supportedLngs&&e.forEach((function(e){if(!t){var r=n.getLanguagePartFromCode(e);if(n.isSupportedCode(r))return t=r;t=n.options.supportedLngs.find((function(e){if(0===e.indexOf(r))return e}))}})),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t):null}},{key:"getFallbackCodes",value:function(e,t){if(!e)return[];if("function"==typeof e&&(e=e(t)),"string"==typeof e&&(e=[e]),"[object Array]"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];var n=e[t];return n||(n=e[this.getScriptPartFromCode(t)]),n||(n=e[this.formatLanguageCode(t)]),n||(n=e[this.getLanguagePartFromCode(t)]),n||(n=e.default),n||[]}},{key:"toResolveHierarchy",value:function(e,t){var n=this,r=this.getFallbackCodes(t||this.options.fallbackLng||[],e),o=[],a=function(e){e&&(n.isSupportedCode(e)?o.push(e):n.logger.warn("rejecting language code not found in supportedLngs: ".concat(e)))};return"string"==typeof e&&e.indexOf("-")>-1?("languageOnly"!==this.options.load&&a(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&a(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&a(this.getLanguagePartFromCode(e))):"string"==typeof e&&a(this.formatLanguageCode(e)),r.forEach((function(e){o.indexOf(e)<0&&a(n.formatLanguageCode(e))})),o}}]),e}(),U=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","kk","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],$={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}};function V(){var e={};return U.forEach((function(t){t.lngs.forEach((function(n){e[n]={numbers:t.nr,plurals:$[t.fc]}}))})),e}var B=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};(0,d.Z)(this,e),this.languageUtils=t,this.options=n,this.logger=w.create("pluralResolver"),this.rules=V()}return(0,p.Z)(e,[{key:"addRule",value:function(e,t){this.rules[e]=t}},{key:"getRule",value:function(e){return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}},{key:"needsPlural",value:function(e){var t=this.getRule(e);return t&&t.numbers.length>1}},{key:"getPluralFormsOfKey",value:function(e,t){return this.getSuffixes(e).map((function(e){return t+e}))}},{key:"getSuffixes",value:function(e){var t=this,n=this.getRule(e);return n?n.numbers.map((function(n){return t.getSuffix(e,n)})):[]}},{key:"getSuffix",value:function(e,t){var n=this,r=this.getRule(e);if(r){var o=r.noAbs?r.plurals(t):r.plurals(Math.abs(t)),a=r.numbers[o];this.options.simplifyPluralSuffix&&2===r.numbers.length&&1===r.numbers[0]&&(2===a?a="plural":1===a&&(a=""));var i=function(){return n.options.prepend&&a.toString()?n.options.prepend+a.toString():a.toString()};return"v1"===this.options.compatibilityJSON?1===a?"":"number"==typeof a?"_plural_".concat(a.toString()):i():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===r.numbers.length&&1===r.numbers[0]?i():this.options.prepend&&o.toString()?this.options.prepend+o.toString():o.toString()}return this.logger.warn("no plural rule found for: ".concat(e)),""}}]),e}(),H=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,d.Z)(this,e),this.logger=w.create("interpolator"),this.options=t,this.format=t.interpolation&&t.interpolation.format||function(e){return e},this.init(t)}return(0,p.Z)(e,[{key:"init",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});var t=e.interpolation;this.escape=void 0!==t.escape?t.escape:R,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?j(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?j(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?j(t.nestingPrefix):t.nestingPrefixEscaped||j("$t("),this.nestingSuffix=t.nestingSuffix?j(t.nestingSuffix):t.nestingSuffixEscaped||j(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp()}},{key:"reset",value:function(){this.options&&this.init(this.options)}},{key:"resetRegExp",value:function(){var e="".concat(this.prefix,"(.+?)").concat(this.suffix);this.regexp=new RegExp(e,"g");var t="".concat(this.prefix).concat(this.unescapePrefix,"(.+?)").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=new RegExp(t,"g");var n="".concat(this.nestingPrefix,"(.+?)").concat(this.nestingSuffix);this.nestingRegexp=new RegExp(n,"g")}},{key:"interpolate",value:function(e,t,n,r){var o,a,i,l=this,u=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function s(e){return e.replace(/\$/g,"$$$$")}var c=function(e){if(e.indexOf(l.formatSeparator)<0){var o=P(t,u,e);return l.alwaysFormat?l.format(o,void 0,n):o}var a=e.split(l.formatSeparator),i=a.shift().trim(),s=a.join(l.formatSeparator).trim();return l.format(P(t,u,i),s,n,r)};this.resetRegExp();var f=r&&r.missingInterpolationHandler||this.options.missingInterpolationHandler,d=r&&r.interpolation&&r.interpolation.skipOnVariables||this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:function(e){return s(e)}},{regex:this.regexp,safeValue:function(e){return l.escapeValue?s(l.escape(e)):s(e)}}].forEach((function(t){for(i=0;o=t.regex.exec(e);){if(void 0===(a=c(o[1].trim())))if("function"==typeof f){var n=f(e,o,r);a="string"==typeof n?n:""}else{if(d){a=o[0];continue}l.logger.warn("missed to pass in variable ".concat(o[1]," for interpolating ").concat(e)),a=""}else"string"==typeof a||l.useRawValueToEscape||(a=S(a));if(e=e.replace(o[0],t.safeValue(a)),t.regex.lastIndex=0,++i>=l.maxReplaces)break}})),e}},{key:"nest",value:function(e,t){var n,r,o=this,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=f({},a);function l(e,t){var n=this.nestingOptionsSeparator;if(e.indexOf(n)<0)return e;var r=e.split(new RegExp("".concat(n,"[ ]*{"))),o="{".concat(r[1]);e=r[0],o=(o=this.interpolate(o,i)).replace(/'/g,'"');try{i=JSON.parse(o),t&&(i=f({},t,i))}catch(t){return this.logger.warn("failed parsing options string in nesting for key ".concat(e),t),"".concat(e).concat(n).concat(o)}return delete i.defaultValue,e}for(i.applyPostProcessor=!1,delete i.defaultValue;n=this.nestingRegexp.exec(e);){var u=[],s=!1;if(n[0].includes(this.formatSeparator)&&!/{.*}/.test(n[1])){var c=n[1].split(this.formatSeparator).map((function(e){return e.trim()}));n[1]=c.shift(),u=c,s=!0}if((r=t(l.call(this,n[1].trim(),i),i))&&n[0]===e&&"string"!=typeof r)return r;"string"!=typeof r&&(r=S(r)),r||(this.logger.warn("missed to resolve ".concat(n[1]," for nesting ").concat(e)),r=""),s&&(r=u.reduce((function(e,t){return o.format(e,t,a.lng,a)}),r.trim())),e=e.replace(n[0],r),this.regexp.lastIndex=0}return e}}]),e}(),W=function(e){function t(e,n,r){var o,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return(0,d.Z)(this,t),o=m(this,g(t).call(this)),T&&k.call(h(o)),o.backend=e,o.store=n,o.services=r,o.languageUtils=r.languageUtils,o.options=a,o.logger=w.create("backendConnector"),o.state={},o.queue=[],o.backend&&o.backend.init&&o.backend.init(r,a.backend,a),o}return y(t,e),(0,p.Z)(t,[{key:"queueLoad",value:function(e,t,n,r){var o=this,a=[],i=[],l=[],u=[];return e.forEach((function(e){var r=!0;t.forEach((function(t){var l="".concat(e,"|").concat(t);!n.reload&&o.store.hasResourceBundle(e,t)?o.state[l]=2:o.state[l]<0||(1===o.state[l]?i.indexOf(l)<0&&i.push(l):(o.state[l]=1,r=!1,i.indexOf(l)<0&&i.push(l),a.indexOf(l)<0&&a.push(l),u.indexOf(t)<0&&u.push(t)))})),r||l.push(e)})),(a.length||i.length)&&this.queue.push({pending:i,loaded:{},errors:[],callback:r}),{toLoad:a,pending:i,toLoadLanguages:l,toLoadNamespaces:u}}},{key:"loaded",value:function(e,t,n){var r=e.split("|"),o=r[0],a=r[1];t&&this.emit("failedLoading",o,a,t),n&&this.store.addResourceBundle(o,a,n),this.state[e]=t?-1:2;var i={};this.queue.forEach((function(n){var r,l,u,s,c;r=n.loaded,l=a,(s=(u=x(r,[o],Object)).obj)[c=u.k]=s[c]||[],s[c].push(l),function(e,t){for(var n=e.indexOf(t);-1!==n;)e.splice(n,1),n=e.indexOf(t)}(n.pending,e),t&&n.errors.push(t),0!==n.pending.length||n.done||(Object.keys(n.loaded).forEach((function(e){i[e]||(i[e]=[]),n.loaded[e].length&&n.loaded[e].forEach((function(t){i[e].indexOf(t)<0&&i[e].push(t)}))})),n.done=!0,n.errors.length?n.callback(n.errors):n.callback())})),this.emit("loaded",i),this.queue=this.queue.filter((function(e){return!e.done}))}},{key:"read",value:function(e,t,n){var r=this,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:350,i=arguments.length>5?arguments[5]:void 0;return e.length?this.backend[n](e,t,(function(l,u){l&&u&&o<5?setTimeout((function(){r.read.call(r,e,t,n,o+1,2*a,i)}),a):i(l,u)})):i(null,{})}},{key:"prepareLoading",value:function(e,t){var n=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),o&&o();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof t&&(t=[t]);var a=this.queueLoad(e,t,r,o);if(!a.toLoad.length)return a.pending.length||o(),null;a.toLoad.forEach((function(e){n.loadOne(e)}))}},{key:"load",value:function(e,t,n){this.prepareLoading(e,t,{},n)}},{key:"reload",value:function(e,t,n){this.prepareLoading(e,t,{reload:!0},n)}},{key:"loadOne",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=e.split("|"),o=r[0],a=r[1];this.read(o,a,"read",void 0,void 0,(function(r,i){r&&t.logger.warn("".concat(n,"loading namespace ").concat(a," for language ").concat(o," failed"),r),!r&&i&&t.logger.log("".concat(n,"loaded namespace ").concat(a," for language ").concat(o),i),t.loaded(e,r,i)}))}},{key:"saveMissing",value:function(e,t,n,r,o){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t)?this.logger.warn('did not save key "'.concat(n,'" as the namespace "').concat(t,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"):null!=n&&""!==n&&(this.backend&&this.backend.create&&this.backend.create(e,t,n,r,null,f({},a,{isUpdate:o})),e&&e[0]&&this.store.addResource(e[0],t,n,r))}}]),t}(k);function q(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,whitelist:!1,nonExplicitWhitelist:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!0,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){var t={};if("object"===s(e[1])&&(t=e[1]),"string"==typeof e[1]&&(t.defaultValue=e[1]),"string"==typeof e[2]&&(t.tDescription=e[2]),"object"===s(e[2])||"object"===s(e[3])){var n=e[3]||e[2];Object.keys(n).forEach((function(e){t[e]=n[e]}))}return t},interpolation:{escapeValue:!0,format:function(e,t,n,r){return e},prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!1}}}function Q(e){return"string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.whitelist&&(e.whitelist&&e.whitelist.indexOf("cimode")<0&&(e.whitelist=e.whitelist.concat(["cimode"])),e.supportedLngs=e.whitelist),e.nonExplicitWhitelist&&(e.nonExplicitSupportedLngs=e.nonExplicitWhitelist),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function K(){}const Z=new(function(e){function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;if((0,d.Z)(this,t),e=m(this,g(t).call(this)),T&&k.call(h(e)),e.options=Q(n),e.services={},e.logger=w,e.modules={external:[]},r&&!e.isInitialized&&!n.isClone){if(!e.options.initImmediate)return e.init(n,r),m(e,h(e));setTimeout((function(){e.init(n,r)}),0)}return e}return y(t,e),(0,p.Z)(t,[{key:"init",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;function r(e){return e?"function"==typeof e?new e:e:null}if("function"==typeof t&&(n=t,t={}),t.whitelist&&!t.supportedLngs&&this.logger.deprecate("whitelist",'option "whitelist" will be renamed to "supportedLngs" in the next major - please make sure to rename this option asap.'),t.nonExplicitWhitelist&&!t.nonExplicitSupportedLngs&&this.logger.deprecate("whitelist",'options "nonExplicitWhitelist" will be renamed to "nonExplicitSupportedLngs" in the next major - please make sure to rename this option asap.'),this.options=f({},q(),this.options,Q(t)),this.format=this.options.interpolation.format,n||(n=K),!this.options.isClone){this.modules.logger?w.init(r(this.modules.logger),this.options):w.init(null,this.options);var o=new F(this.options);this.store=new I(this.options.resources,this.options);var a=this.services;a.logger=w,a.resourceStore=this.store,a.languageUtils=o,a.pluralResolver=new B(o,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),a.interpolator=new H(this.options),a.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},a.backendConnector=new W(r(this.modules.backend),a.resourceStore,a,this.options),a.backendConnector.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];e.emit.apply(e,[t].concat(r))})),this.modules.languageDetector&&(a.languageDetector=r(this.modules.languageDetector),a.languageDetector.init(a,this.options.detection,this.options)),this.modules.i18nFormat&&(a.i18nFormat=r(this.modules.i18nFormat),a.i18nFormat.init&&a.i18nFormat.init(this)),this.translator=new z(this.services,this.options),this.translator.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];e.emit.apply(e,[t].concat(r))})),this.modules.external.forEach((function(t){t.init&&t.init(e)}))}if(this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){var i=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);i.length>0&&"dev"!==i[0]&&(this.options.lng=i[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined");var l=["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"];l.forEach((function(t){e[t]=function(){var n;return(n=e.store)[t].apply(n,arguments)}}));var u=["addResource","addResources","addResourceBundle","removeResourceBundle"];u.forEach((function(t){e[t]=function(){var n;return(n=e.store)[t].apply(n,arguments),e}}));var s=E(),c=function(){var t=function(t,r){e.isInitialized&&e.logger.warn("init: i18next is already initialized. You should call init just once!"),e.isInitialized=!0,e.options.isClone||e.logger.log("initialized",e.options),e.emit("initialized",e.options),s.resolve(r),n(t,r)};if(e.languages&&"v1"!==e.options.compatibilityAPI&&!e.isInitialized)return t(null,e.t.bind(e));e.changeLanguage(e.options.lng,t)};return this.options.resources||!this.options.initImmediate?c():setTimeout(c,0),s}},{key:"loadResources",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:K,r=n,o="string"==typeof e?e:this.language;if("function"==typeof e&&(r=e),!this.options.resources||this.options.partialBundledLanguages){if(o&&"cimode"===o.toLowerCase())return r();var a=[],i=function(e){e&&t.services.languageUtils.toResolveHierarchy(e).forEach((function(e){a.indexOf(e)<0&&a.push(e)}))};if(o)i(o);else{var l=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);l.forEach((function(e){return i(e)}))}this.options.preload&&this.options.preload.forEach((function(e){return i(e)})),this.services.backendConnector.load(a,this.options.ns,r)}else r(null)}},{key:"reloadResources",value:function(e,t,n){var r=E();return e||(e=this.languages),t||(t=this.options.ns),n||(n=K),this.services.backendConnector.reload(e,t,(function(e){r.resolve(),n(e)})),r}},{key:"use",value:function(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&A.addPostProcessor(e),"3rdParty"===e.type&&this.modules.external.push(e),this}},{key:"changeLanguage",value:function(e,t){var n=this;this.isLanguageChangingTo=e;var r=E();this.emit("languageChanging",e);var o=function(e){var o="string"==typeof e?e:n.services.languageUtils.getBestMatchFromCodes(e);o&&(n.language||(n.language=o,n.languages=n.services.languageUtils.toResolveHierarchy(o)),n.translator.language||n.translator.changeLanguage(o),n.services.languageDetector&&n.services.languageDetector.cacheUserLanguage(o)),n.loadResources(o,(function(e){!function(e,o){o?(n.language=o,n.languages=n.services.languageUtils.toResolveHierarchy(o),n.translator.changeLanguage(o),n.isLanguageChangingTo=void 0,n.emit("languageChanged",o),n.logger.log("languageChanged",o)):n.isLanguageChangingTo=void 0,r.resolve((function(){return n.t.apply(n,arguments)})),t&&t(e,(function(){return n.t.apply(n,arguments)}))}(e,o)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect(o):o(e):o(this.services.languageDetector.detect()),r}},{key:"getFixedT",value:function(e,t){var n=this,r=function e(t,r){var o;if("object"!==s(r)){for(var a=arguments.length,i=new Array(a>2?a-2:0),l=2;l<a;l++)i[l-2]=arguments[l];o=n.options.overloadTranslationOptionHandler([t,r].concat(i))}else o=f({},r);return o.lng=o.lng||e.lng,o.lngs=o.lngs||e.lngs,o.ns=o.ns||e.ns,n.t(t,o)};return"string"==typeof e?r.lng=e:r.lngs=e,r.ns=t,r}},{key:"t",value:function(){var e;return this.translator&&(e=this.translator).translate.apply(e,arguments)}},{key:"exists",value:function(){var e;return this.translator&&(e=this.translator).exists.apply(e,arguments)}},{key:"setDefaultNamespace",value:function(e){this.options.defaultNS=e}},{key:"hasLoadedNamespace",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;var r=this.languages[0],o=!!this.options&&this.options.fallbackLng,a=this.languages[this.languages.length-1];if("cimode"===r.toLowerCase())return!0;var i=function(e,n){var r=t.services.backendConnector.state["".concat(e,"|").concat(n)];return-1===r||2===r};if(n.precheck){var l=n.precheck(this,i);if(void 0!==l)return l}return!!this.hasResourceBundle(r,e)||!this.services.backendConnector.backend||!(!i(r,e)||o&&!i(a,e))}},{key:"loadNamespaces",value:function(e,t){var n=this,r=E();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((function(e){n.options.ns.indexOf(e)<0&&n.options.ns.push(e)})),this.loadResources((function(e){r.resolve(),t&&t(e)})),r):(t&&t(),Promise.resolve())}},{key:"loadLanguages",value:function(e,t){var n=E();"string"==typeof e&&(e=[e]);var r=this.options.preload||[],o=e.filter((function(e){return r.indexOf(e)<0}));return o.length?(this.options.preload=r.concat(o),this.loadResources((function(e){n.resolve(),t&&t(e)})),n):(t&&t(),Promise.resolve())}},{key:"dir",value:function(e){return e||(e=this.languages&&this.languages.length>0?this.languages[0]:this.language),e?["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam"].indexOf(this.services.languageUtils.getLanguagePartFromCode(e))>=0?"rtl":"ltr":"rtl"}},{key:"createInstance",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;return new t(e,n)}},{key:"cloneInstance",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:K,o=f({},this.options,n,{isClone:!0}),a=new t(o),i=["store","services","language"];return i.forEach((function(t){a[t]=e[t]})),a.services=f({},this.services),a.services.utils={hasLoadedNamespace:a.hasLoadedNamespace.bind(a)},a.translator=new z(a.services,a.options),a.translator.on("*",(function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];a.emit.apply(a,[e].concat(n))})),a.init(o,r),a.translator.options=a.options,a.translator.backendConnector.services.utils={hasLoadedNamespace:a.hasLoadedNamespace.bind(a)},a}}]),t}(k));var Y=r(718);const J=function(e,t){var n={};return["en","vi"].forEach((function(e){n[e]={},t.forEach((function(t){n[e][t]=r(259)("./".concat(e,"/").concat(t,".json"))}))})),n}(0,["browse","header","course","popup"]),X={__language:"en",setLanguage:function(e){return e&&(this.__language=e),this},init:function(){Z.use(Y.Db).init({resources:J,lng:this.__language,fallbackLng:"en",interpolation:{escapeValue:!1}})}};var G=r(642),ee=r(472);function te(e){return["Foundation","Advanced","Master"][e-1]}function ne(e,t,n){var r,o,a=(""+e).split("."),i="";for(t||(t="."),n||0===n||(n=3),r=a[0].length;r>n;)o=r-n,i=t+a[0].slice(o,r)+i,r=o;return i=a[0].slice(0,r)+i,a[0]=i,a.join(".")}function re(t){var n=t.level,r=function(e){return[!1,!1,!1].map((function(t,n){return n===e-1}))}(n);return e.createElement("div",{className:"w3-container"},e.createElement("div",{className:"w3-bar-item  w3-right"},r.map((function(t,n){var r=t?"w3-green":"w3-grey w3-opacity";return e.createElement("div",{key:n,className:r,style:{width:"8px",height:"8px",marginLeft:"2px",display:"inline-block"}})})),e.createElement("span",{className:"w3-small"}," ",te(n)," ")))}function oe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var ae={discount:"sale",gift:"gift",new:"new",best:"best choice"},ie={sale:"red",gift:"blue",new:"yellow","best choice":"yellow"};function le(e,t){if(Array.isArray(e)){var n={};return e.forEach((function(e){return n[e.id]=ue(e,t)})),n}return ue(e,t)}function ue(e,t){var n,r=t.map((function(t){return function(e,t){return t.scopes.find((function(t){return t.courseId===e.id}))?ae[t.type]:void 0}(e,t)})).filter((function(e){return e}));return e.tags&&r.push.apply(r,function(e){if(Array.isArray(e))return oe(e)}(n=e.tags.map((function(e){return ae[e]||e})))||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(n)||function(e,t){if(e){if("string"==typeof e)return oe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?oe(e,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r.filter((function(e,t){return r.indexOf(e)===t}))}function se(e){return ie[e]}function ce(t){var n=t.tags;return n&&0!==n.length?e.createElement("span",null,n.map((function(t){return e.createElement("label",{key:t,className:"w3-tag w3-".concat(se(t)),style:{marginRight:"4px"}}," ",t.toUpperCase()," ")}))):null}function fe(t){var n=t.skills;return e.createElement("div",null,n.map((function(t){return e.createElement("span",{key:t},e.createElement("span",{className:"w3-tag w3-round w3-left-align w3-green",style:{margin:"4px 0"}},e.createElement("i",{className:"fas fa-award w3-text-yellow"})," ",t)," ")})),e.createElement("br",null))}function de(t){var n=t.course,r=t.tag;return e.createElement("div",{className:"w3-bar-item"},e.createElement("div",{className:"w3-cell-row"},e.createElement("img",{src:n.thumbnail,className:"w3-container w3-cell w3-hide-small",style:{width:"150px",borderRadius:"24px"}}),e.createElement("div",{className:"w3-cell",style:{maxWidth:"530px"}},e.createElement(ce,{tags:r}),e.createElement("div",{className:"cursor-pointer w3-text-dark-grey",style:{fontWeight:"bold",padding:"0 0 4px 0"}},e.createElement("a",{href:"/course/".concat(n.id),className:"w3-hover-text-blue",style:{textDecoration:"none"},onClick:function(e){e.preventDefault(),e.stopPropagation();var t=n.id;G.$n.navigate("course",{params:{cid:t}})}},n.title)),e.createElement("div",{className:"w3-small w3-text-dark-grey",style:{fontStyle:"italic",padding:"0 0 8px 0"}}," ",n.snippet," "),e.createElement(fe,{skills:n.skills}))))}var pe=r(687);function he(t){var n=t.course;return function(t){var r=(0,pe.$)().t;return e.createElement("div",null,e.createElement("div",{className:"w3-bar-item w3-hide-large",style:{width:"100%"}},e.createElement("div",{className:"w3-hide-small",style:{width:"150px",height:"10px",display:"inline-block"}})," ",e.createElement("a",{href:"/course/".concat(n.id),className:"w3-button w3-round w3-blue w3-card-4 w3-right",onClick:t},r("browse:View Course"))),e.createElement("div",{className:"w3-bar-item w3-right w3-hide-medium w3-hide-small"},e.createElement("a",{href:"/course/".concat(n.id),className:"w3-button w3-round w3-blue w3-card-4",onClick:t},r("browse:View Course")),e.createElement("br",null)," ",e.createElement("br",null)));function t(e){e.preventDefault(),e.stopPropagation();var t=n.id;G.$n.navigate("course",{params:{cid:t}})}}(t.navigate)}function me(t){var n=t.course,r=t.tag;return e.createElement("div",null,e.createElement(re,{level:n.level}),e.createElement("div",{className:"w3-bar"},e.createElement(de,{course:n,tag:r}),e.createElement(he,{course:n})))}function ge(t){var n=t.course;return e.createElement("div",null,e.createElement("h2",{style:{fontWeight:"bold",fontFamily:"Raleway",margin:"0 0 10px 0"}}," ",n.title," "),e.createElement("span",{className:"w3-tag w3-green"},"  ",te(n.level)," "))}function ve(t){var n=t.course,r=(0,pe.$)().t;return e.createElement("div",null,e.createElement("p",{style:{textAlign:"justify",marginRight:"16px"}},n.description),e.createElement("p",{className:"text-bold"}," ",r("course:Knowledge")," "),e.createElement("div",null,e.createElement(fe,{skills:n.skills})))}function ye(t){var n=t.course;return e.createElement("div",{className:"embed-responsive",style:{textAlign:"center"}},e.createElement("iframe",{src:n.video}))}function be(t){var n=t.enroll,r=(0,pe.$)().t;return e.createElement("button",{className:"w3-button w3-card w3-red",onClick:n},e.createElement("i",{className:"fas fa-thumbs-up",style:{marginRight:"6px"}})," ",r("course:Enroll Now"))}function we(t){var n=t.price,r=t.visible,o=t.enroll,a=t.headerPadding,i=(0,pe.$)().t;return e.createElement("div",{className:"w3-border-bottom w3-border-gray sticky w3-white w3-animate-opacity",style:{top:"".concat(a,"px"),zIndex:1,display:r?"block":"none"}},e.createElement("div",{style:{maxWidth:"1200px",margin:"auto"}},e.createElement("div",{className:"w3-text-gray",style:{paddingLeft:"16px"}},n.discount?i("course:Limited-Time Offer"):null),e.createElement("div",{style:{textAlign:"right",padding:"8px 16px"}},e.createElement("span",{className:"w3-xlarge w3-text-gray",style:{textDecoration:"line-through",marginRight:"6px"}},n.discount?e.createElement("span",null," ",ne(n.origin)," đ "):null),e.createElement("span",{className:"w3-large w3-text-red",style:{marginRight:"4px"}},n.discount?ne(n.sale):ne(n.origin)," đ"),e.createElement(be,{enroll:o}))))}function ke(t){var n=t.price,r=t.enroll,o=(0,pe.$)().t;return e.createElement("p",null,e.createElement("span",{className:"w3-text-gray"},n.discount?o("course:Limited-Time Offer"):null),n.discount?e.createElement("br",null):null,e.createElement("span",{className:"w3-xlarge w3-text-gray",style:{textDecoration:"line-through",marginRight:"6px"}},n.discount?e.createElement("span",null," ",ne(n.origin)," đ "):null),e.createElement("span",{className:"w3-large w3-text-red"},n.discount?ne(n.sale):ne(n.origin)," đ"),e.createElement("br",null),e.createElement(be,{enroll:r}))}function Ee(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Se(t){var n,r=t.course,o=function(e){if(Array.isArray(e))return e}(n=(0,e.useState)(!0))||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),2!==n.length);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(n)||function(e,t){if(e){if("string"==typeof e)return Ee(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ee(e,2):void 0}}(n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),a=o[0],i=o[1],l=(0,pe.$)().t,u=r.benefits||[];return e.createElement("div",null,e.createElement("h3",{className:"cursor-pointer",style:{fontFamily:"Raleway"},onClick:function(){i(!a)}},e.createElement("div",{className:"w3-blue",style:{display:"inline-block",padding:"0 8px"}},e.createElement("div",{className:"w3-cell"}," ",e.createElement("i",{className:"fas fa-caret-".concat(a?"up":"down"),style:{marginRight:"8px"}})," "),e.createElement("div",{className:"w3-cell"}," ",l("course:Benefit")," "))),e.createElement("div",{style:{display:a?"block":"none"}},u.map((function(t,n){var r=t.heading,o=t.detail,a=t.image;return e.createElement(_e,{key:n,heading:r,detail:o,image:a,type:n%2})}))))}function _e(t){var n=t.heading,r=t.detail,o=t.image,a=t.type,i=0===a?"w3-white":"w3-light-gray";return e.createElement("div",{className:"w3-row-padding w3-padding-32 w3-container ".concat(i)},e.createElement("div",{className:"w3-content"},0===a?e.createElement(xe,{heading:n,detail:r}):e.createElement(Ce,{image:o}),0===a?e.createElement(Ce,{image:o}):e.createElement(xe,{heading:n,detail:r})))}function xe(t){var n=t.heading,r=t.detail;return e.createElement("div",{className:"w3-twothird",style:{padding:"16px"}},e.createElement("h5",{style:{fontFamily:"Raleway",textAlign:"justify"}},n),r.map((function(t,n){return e.createElement("p",{key:n,className:"w3-text-grey",style:{textAlign:"justify"}},t)})))}function Ce(t){var n=t.image;return e.createElement("div",{className:"w3-third w3-center",style:{padding:"24px 0"}},e.createElement("img",{src:n,width:200}))}function Oe(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Pe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Pe(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Pe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Ne(t){var n=t.course,r=Oe((0,e.useState)(!0),2),o=r[0],a=r[1],i=(0,pe.$)().t,l=n.content||[];return e.createElement("div",null,e.createElement("h3",{className:"cursor-pointer",style:{fontFamily:"Raleway"},onClick:function(){a(!o)}},e.createElement("div",{className:"w3-blue",style:{display:"inline-block",padding:"0 8px"}},e.createElement("div",{className:"w3-cell"}," ",e.createElement("i",{className:"fas fa-caret-".concat(o?"up":"down"),style:{marginRight:"8px"}})," "),e.createElement("div",{className:"w3-cell"}," ",i("course:Content")," "))),e.createElement("div",{style:{display:o?"block":"none"}},l.map((function(t,n){var r=t.heading,o=t.detail,a=t.media;return e.createElement(je,{key:n,heading:r,detail:o,media:a})}))))}function je(t){var n=t.heading,r=t.detail,o=t.media,a=Oe((0,e.useState)(!0),2),i=a[0],l=a[1];return e.createElement("div",null,e.createElement("h4",{className:"cursor-pointer w3-green w3-border w3-border-gray w3-container",style:{fontFamily:"Raleway",margin:"10px 0 0 0"},onClick:function(){l(!i)}},n," ",e.createElement("i",{className:"w3-right fas fa-caret-".concat(i?"up":"down"),style:{marginRight:"8px"}})),e.createElement("div",{className:"w3-cell-row w3-container w3-light-gray",style:{display:i?"block":"none"}},e.createElement("div",{className:"w3-cell"},r.map((function(t,n){return e.createElement("p",{key:n,className:"w3-text-gray"}," ",t," ")}))),e.createElement("div",{className:"w3-cell"},o.map((function(t,n){return e.createElement(u,{key:n,type:t})})))));function u(t){var n=t.type;return e.createElement("i",{className:"w3-text-gray w3-large ".concat({video:"fas fa-film",quiz:"fas fa-pencil-alt"}[n]),style:{padding:"6px"}})}}function Le(t){var n=t.self,r=(0,pe.$)().t;return e.createElement("div",{className:"w3-panel w3-display-container w3-card w3-white",style:{width:"90%",maxWidth:"480px",margin:"auto"}},e.createElement("span",{className:"w3-button w3-xlarge w3-display-topright w3-text-red",onClick:function(){return n.reject()}},"×"),e.createElement("h3",null,r("popup:Opps!")),e.createElement("div",null,e.createElement("h4",null,r("popup:Need signin")),e.createElement("div",{className:"w3-cell-row",style:{margin:"32px 0 16px 0"}},e.createElement("div",{className:"w3-cell",style:{textAlign:"center"}},e.createElement("button",{className:"w3-button w3-blue",onClick:function(){n.resolve("signin")}},r("popup:Sign-in Now"))),e.createElement("div",{className:"w3-cell",style:{textAlign:"center"}},e.createElement("button",{className:"w3-button w3-text-orange",onClick:function(){n.resolve("signup")}},r("popup:Create account"))))))}function Re(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Te(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const Ie={home:{Page:function(){return e.createElement("div",{className:"w3-container",style:{maxWidth:"1200px",margin:"auto",paddingTop:"64px"}},e.createElement("h3",null," Page Home "))},url:"/"},browse:{Page:function(t){var n=t.route,r=t.headerPadding,o=n.data,a=o.program,i=o.courses,l=o.tags;return e.createElement("div",{className:"w3-container",style:{maxWidth:"1200px",margin:"auto",paddingTop:"".concat(r,"px")}},e.createElement("h3",{className:"w3-container"}," ",a.title," "),e.createElement("div",null,e.createElement("ul",{className:"w3-ul"},i.map((function(t){return e.createElement("li",{key:t.id},e.createElement(me,{course:t,tag:l[t.id]}))})))))},url:"/browse/:pid",title:"Browse: {{program.title}}",data:function(e){var t=e.params,n=e.props;return new Promise((function(e,r){var o=n.programs.filter((function(e){return e.id===t.pid}))[0];o?Promise.all(o.courses.map((function(e){return l("".concat(n.endpoint.courses,"/").concat(e))}))).then((function(t){return e({program:o,courses:t,tags:le(t,n.promotions)})})).catch(r):r("Program is not found")}))},reject:function(e){return e.nav.navigate("error404")}},course:{Page:function(t){var n,r=t.route,o=t.page,a=t.user,i=t.accountClient,l=t.showHeaderSeparator,u=t.headerPadding,s=r.data,c=s.course,f=s.promotion,d=s.tags,p=function(e){if(Array.isArray(e))return e}(n=(0,e.useState)(!1))||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),2!==n.length);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(n)||function(e,t){if(e){if("string"==typeof e)return Re(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Re(e,2):void 0}}(n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),h=p[0],m=p[1],g=(0,e.useRef)(null);(0,e.useEffect)((function(){return window.addEventListener("scroll",b),function(){return window.removeEventListener("scroll",b)}})),(0,e.useEffect)((function(){return r.isActive&&l(!h)}),[h]);var v,y=(v=f&&f.discount?Math.max(f.discount.reduce((function(e,t){return e-t.value}),c.price),0):void 0,{origin:c.price,sale:v,discount:!(void 0===v||v===c.price)});return e.createElement("div",{style:{paddingTop:"".concat(u,"px")}},e.createElement(we,{price:y,visible:h,enroll:w,headerPadding:u}),e.createElement("div",{className:"w3-container",style:{maxWidth:"1200px",margin:"auto"}},e.createElement("div",{style:{marginTop:"10px"}},e.createElement(ce,{tags:d})," "),e.createElement(ge,{course:c}),e.createElement("div",{className:"w3-row"},e.createElement("div",{className:"w3-half",style:{marginBottom:"32px"}},e.createElement(ve,{course:c})),e.createElement("div",{className:"w3-half ",style:{maxWidth:"480px",marginBottom:"32px"}},e.createElement(ye,{course:c}),e.createElement(ke,{price:y,enroll:w}))),e.createElement("div",{ref:g},e.createElement(Se,{course:c})),e.createElement("div",null,e.createElement(Ne,{course:c}))));function b(){if(!r.isActive)return!1;g.current.getBoundingClientRect().top<2*u?!h&&m(!0):h&&m(!1)}function w(){a?E():o.popup(Le,{overlay:!0,onClickOverlay:function(e){return e.reject()}}).then(k).then(E).catch((function(e){}))}function k(e){return i[e]()}function E(){console.log("Proceed to enroll")}},url:"/course/:cid",title:"Course: {{course.title}}",data:function(e){var t=e.params,n=e.props;return new Promise((function(e,r){if(!t||!t.cid)return Promise.reject("Bad request");var o,a,i,u=(o=t.cid,a=n.promotions,i={},a.forEach((function(e){var t,n;i[e.type]||(i[e.type]=[]),(t=i[e.type]).push.apply(t,function(e){if(Array.isArray(e))return Te(e)}(n=e.scopes.filter((function(e){return e.courseId===o})))||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(n)||function(e,t){if(e){if("string"==typeof e)return Te(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Te(e,t):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())})),i);l("".concat(n.endpoint.courses,"/").concat(t.cid)).then((function(t){return e({course:t,promotion:u,tags:le(t,n.promotions)})})).catch(r)}))},reject:function(e){return e.nav.navigate("error404")}},error404:{Page:function(t){var n=t.route.data;return e.createElement("div",{className:"w3-container"},e.createElement("h3",{className:"w3-text-red"}," Error ",n.code," "),e.createElement("p",null," ",n.message," "))},url:"/error/404",title:"Error {{code}}",data:{code:404,message:"Page not found"}}};function Ae(){return(Ae=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Me(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var ze={Desktop:r(737).Z,Mobile:r(814).Z};function De(t){var n,r=function(e){if(Array.isArray(e))return e}(n=(0,e.useState)(!1))||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),2!==n.length);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(n)||function(e,t){if(e){if("string"==typeof e)return Me(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Me(e,2):void 0}}(n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),o=r[0],a=r[1];return(0,e.useEffect)((function(){return window.addEventListener("scroll",i),function(){return window.removeEventListener("scroll",i)}})),e.createElement("div",{className:"w3-top",style:{display:t.visible?"block":"none"}},e.createElement("div",{className:"w3-hide-small w3-hide-medium",style:{position:"relative",marginBottom:"".concat(t.headerHeight/2,"px")}},e.createElement(ze.Desktop,Ae({isScrollDown:o},t))),e.createElement("div",{className:"w3-hide-large",style:{position:"relative",marginBottom:"".concat(t.headerHeight/2,"px")}},e.createElement(ze.Mobile,Ae({isScrollDown:o},t))));function i(){window.pageYOffset>0?!1===o&&a(!0):!0===o&&a(!1)}}function Fe(t){var n=t.stickable;return e.createElement("div",{className:"w3-white w3-border-top w3-border-gray ".concat(n?"w3-bottom":""),style:{marginTop:"32px"}},e.createElement("div",{className:"w3-container",style:{padding:"16px",maxWidth:"1200px",margin:"auto"}},"Footer"))}function Ue(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function $e(){var t,n=function(e){if(Array.isArray(e))return e}(t=(0,e.useState)(!1))||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),2!==n.length);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(t)||function(e,t){if(e){if("string"==typeof e)return Ue(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ue(e,2):void 0}}(t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),r=n[0],o=n[1];return(0,e.useEffect)((function(){return window.addEventListener("scroll",a),function(){return window.removeEventListener("scroll",a)}})),e.createElement("div",{className:"w3-button w3-hover-none w3-circle w3-border w3-border-gray w3-card w3-light-gray w3-bottom w3-animate-opacity",style:{width:"35px",height:"35px",right:"10px",bottom:"30%",textAlign:"center",padding:"4px 0",display:r?"block":"none"},onClick:function(e){return window.scrollTo({top:0,behavior:"smooth"})}},e.createElement("i",{className:"fas fa-arrow-up w3-text-gray"}));function a(){var e=window.innerHeight||document.documentElement.clientHeight;window.pageYOffset>e/2?!1===r&&o(!0):!0===r&&o(!1)}}function Ve(){return(Ve=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Be(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return He(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?He(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function He(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function We(t){var n=Be((0,e.useState)(!0),2),r=n[0],o=n[1],a=Be((0,e.useState)(!0),2),i=a[0],l=a[1],u=Be((0,e.useState)(!1),2),s=u[0],c=u[1];return(0,e.useEffect)((function(){return window.addEventListener("resize",f),function(){return removeEventListener("resize",f)}})),e.createElement("div",null,e.createElement(ee.d,{accountClient:t.accountClient},e.createElement(De,{programs:t.programs,visible:r,cardStyle:i,headerHeight:64,endpoint:t.endpoint}),e.createElement(G.C3,Ve({routes:Ie,initialRoute:"home",fallbackRoute:"error404",onChangeRoute:function(e){(function(e){r&&/error/.test(e.url)?o(!1):r||/error/.test(e.url)||o(!0)})(e),window.scrollTo({top:0})},onEnterPage:function(){d()}},t,{showHeaderSeparator:function(e){l(e)},headerPadding:64})),e.createElement(Fe,{stickable:s})),e.createElement($e,null));function f(){d()}function d(){var e;e=window.innerHeight||document.documentElement.clientHeight,document.body.getBoundingClientRect().height>e?c(!1):c(!0)}}function qe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const Qe={__configs:null,config:function(e){return this.__configs=e,this},start:function(){var r=this;this.verifyConfigs(),X.setLanguage(this.__configs.language).init();var o=new n.Z({app:this.__configs.app,baseurl:this.__configs.endpoint.account,session:this.__configs.accountSessionName||"_r_s_sess_"});o.on("authenticating",(function(){console.log("--\x3e authenticating...")})).on("authenticated",(function(e){console.log("--\x3e authenticated"),console.log(e)})).on("unauthenticated",(function(){console.log("--\x3e unauthenticated")})),o.sso(),u.setEndpoint(this.__configs.endpoint).fetch().then((function(n){var a,i=function(e){if(Array.isArray(e))return e}(a=n)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(r=(i=l.next()).done)&&(n.push(i.value),2!==n.length);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==l.return||l.return()}finally{if(o)throw a}}return n}}(a)||function(e,t){if(e){if("string"==typeof e)return qe(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?qe(e,2):void 0}}(a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),l=i[0],u=i[1];(0,t.render)(e.createElement(We,{accountClient:o,programs:l,promotions:u,endpoint:r.__configs.endpoint}),document.getElementById("root"))})).catch((function(e){return console.error(e)}))},verifyConfigs:function(){if(null===this.__configs)throw new Error("# Application: missing configs");if(!this.__configs.app)throw new Error("# Application: missing app in configs");if(!this.__configs.endpoint)throw new Error("# Application: missing endpoint in configs");if(!this.__configs.endpoint.account)throw new Error("# Application: missing account endpont in configs");return!0}};function Ke(e){new Promise((function(e,t){"serviceWorker"in navigator?window.addEventListener("load",(function(){navigator.serviceWorker.register("/sw.js").then((function(t){t.installing?t.installing.addEventListener("statechange",(function(t){return"activated"===t.target.state&&e()})):e()})).catch((function(t){return e()}))})):e()})).then((function(t){return Qe.config(e).start()})).catch((function(e){return console.error(e)}))}})(),e.exports=o})()}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(700);n.n(e)()({language:"vi",app:"dev",endpoint:{account:"https://studiha.github.io",programs:"https://studiha.github.io/api/programs.json",courses:"https://studiha.github.io/api/courses",promotions:"https://studiha.github.io/api/promotions.json",logo:"https://studiha.github.io/public/img/logo.png"}})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2svX2luZGV4Lm1qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MvX2luZGV4Lm1qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkvX2luZGV4Lm1qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0ByZWFsbWpzL2FjY291bnQtY2xpZW50L2Rpc3QvYWNjb3VudC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0ByZWFsbWpzL2FjY291bnQtY2xpZW50L2Rpc3QvaWZyYW1lLmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvQHJlYWxtanMvYWNjb3VudC1jbGllbnQvZGlzdC91dGlsLmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvQHJlYWxtanMvcmVhY3QtbmF2aS9kaXN0L05hdmlnYXRvci5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0ByZWFsbWpzL3JlYWN0LW5hdmkvZGlzdC9hbmltYXRpb24uanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AcmVhbG1qcy9yZWFjdC1uYXZpL2Rpc3QvYm9keS1zY3JvbGwuanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AcmVhbG1qcy9yZWFjdC1uYXZpL2Rpc3QvaHJlZi5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0ByZWFsbWpzL3JlYWN0LW5hdmkvZGlzdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0ByZWFsbWpzL3JlYWN0LW5hdmkvZGlzdC9uYXYuanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AcmVhbG1qcy9yZWFjdC1uYXZpL2Rpc3Qvc3R5bGUuanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AcmVhbG1qcy9yZWFjdC1uYXZpL2Rpc3QvdXRpbC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0ByZWFsbWpzL3JlYWN0LXVzZXIvZGlzdC9Db21wb25lbnRzL1VzZXJQcm92aWRlci5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0ByZWFsbWpzL3JlYWN0LXVzZXIvZGlzdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0ByZWFsbWpzL3JlYWN0LXVzZXIvbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0ByZWFsbWpzL3JlYWN0LXVzZXIvbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvQHJlYWxtanMveGh0dHAtcmVxdWVzdC9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AcmVhbG1qcy94aHR0cC1yZXF1ZXN0L3NyYy9zdG9yYWdlLmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvV2lkZ2V0L0hlYWRlci9DYXJ0LmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1dpZGdldC9IZWFkZXIvRW5yb2xsZWRCdXR0b24uanN4Iiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvV2lkZ2V0L0hlYWRlci9Db3Vyc2UuRHJvcGRvd24uanN4Iiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvV2lkZ2V0L0hlYWRlci9IZWFkZXIuZGVza3RvcC5qc3giLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9XaWRnZXQvSGVhZGVyL0NvdXJzZS5BY2NvcmRpb24uanN4Iiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvV2lkZ2V0L0hlYWRlci9TaWRlYmFyLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1dpZGdldC9IZWFkZXIvSGVhZGVyLm1vYmkuanN4Iiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvV2lkZ2V0L0hlYWRlci9Mb2dvLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1dpZGdldC9IZWFkZXIvVXNlci5qc3giLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9yZWFjdC1pMThuZXh0L2Rpc3QvZXMvY29udGV4dC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlMaWtlVG9BcnJheS9faW5kZXgubWpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5L19pbmRleC5tanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aEhvbGVzL19pbmRleC5tanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2l0ZXJhYmxlVG9BcnJheUxpbWl0L19pbmRleC5tanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5L19pbmRleC5tanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL25vbkl0ZXJhYmxlUmVzdC9faW5kZXgubWpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3V0aWxzLmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvcmVhY3QtaTE4bmV4dC9kaXN0L2VzL3VzZVRyYW5zbGF0aW9uLmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbW50L2Uvd29yay9wcm9qZWN0L2VkZW4vQ291cnNlU3RvcmUvd2ViYXBwL3NyYy9sb2NhbGVzfHN5bmN8L15cXC5cXC8uKlxcLmpzb24kLyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvd2VicGFjazovQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2RlbGl2ZXJ5L3dlYnBhY2s6L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvd2VicGFjazovQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvd2VicGFjazovQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9saWIvZmV0Y2hlci5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL2xpYi9kYXRhLmZldGNoZXIudXRpbC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mL19pbmRleC5tanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL29iamVjdFNwcmVhZC9faW5kZXgubWpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQvX2luZGV4Lm1qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi9faW5kZXgubWpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZi9faW5kZXgubWpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi9faW5kZXgubWpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy9faW5kZXgubWpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9ub2RlX21vZHVsZXMvaTE4bmV4dC9kaXN0L2VzbS9pMThuZXh0LmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvbG9jYWxlcy9yZXNvdXJjZXMuanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9sb2NhbGVzL2luZGV4LmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvbGliL2dlbmVyYWwudXRpbC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQnJvd3NlL0NvbXBvbmVudC9MZXZlbEluZGljYXRvcnMuanN4Iiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvbGliL3RhZy51dGlsLmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvV2lkZ2V0L0NvbW1vbi9UYWdzLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1dpZGdldC9Db21tb24vU2tpbGxMaXN0LmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQnJvd3NlL0NvbXBvbmVudC9Db3Vyc2VJbmZvLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQnJvd3NlL0NvbXBvbmVudC9BY3Rpb25CdXR0b25zLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQnJvd3NlL0NvbXBvbmVudC9Db3Vyc2VEaXNwbGF5SXRlbS5qc3giLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9QYWdlL0NvdXJzZS9Db21wb25lbnQvVGl0bGUuanN4Iiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvUGFnZS9Db3Vyc2UvQ29tcG9uZW50L0Rlc2NyaXB0aW9uLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQ291cnNlL0NvbXBvbmVudC9WaWRlby5qc3giLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9QYWdlL0NvdXJzZS9Db21wb25lbnQvRW5yb2xsQnV0dG9uLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQ291cnNlL0NvbXBvbmVudC9TYWxlQmFyLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQ291cnNlL0NvbXBvbmVudC9TYWxlQm94LmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQ291cnNlL0NvbXBvbmVudC9CZW5lZml0LmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQ291cnNlL0NvbXBvbmVudC9Db250ZW50LmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQ291cnNlL1BvcHVwL1NpZ25pblJlcXVlc3QuanN4Iiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvcm91dGVzLmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvUGFnZS9Ib21lL0hvbWUuanN4Iiwid2VicGFjazovL2RlbGl2ZXJ5L0BzdHVkaWhhL2NvdXJzZXN0b3JlLXdlYmFwcC9zcmMvUGFnZS9Ccm93c2UvQnJvd3NlLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQnJvd3NlL2RhdGEudXRpbC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1BhZ2UvQ291cnNlL0NvdXJzZS5qc3giLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9QYWdlL0NvdXJzZS9kYXRhLnV0aWwuanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9saWIvcHJvbW90aW9uLnV0aWwuanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9QYWdlL0Vycm9yL0Vycm9yLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1dpZGdldC9IZWFkZXIvSGVhZGVyLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1dpZGdldC9Gb290ZXIvRm9vdGVyLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1dpZGdldC9Db21tb24vU2Nyb2xsVG9wQnV0dG9uLmpzeCIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL1dlYmFwcC5qc3giLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9saWIvYXBwbGljYXRpb24udXRpbC5qcyIsIndlYnBhY2s6Ly9kZWxpdmVyeS9Ac3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAvc3JjL3NjcmlwdC9hcHAuanMiLCJ3ZWJwYWNrOi8vZGVsaXZlcnkvQHN0dWRpaGEvY291cnNlc3RvcmUtd2ViYXBwL3NyYy9saWIvc2VydmljZXdvcmtlci51dGlsLmpzIiwid2VicGFjazovL2RlbGl2ZXJ5L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2RlbGl2ZXJ5L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2RlbGl2ZXJ5L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9kZWxpdmVyeS93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2RlbGl2ZXJ5Ly4vc3JjL2FwcC5qcyJdLCJuYW1lcyI6WyJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX2RlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImkiLCJsZW5ndGgiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJrZXkiLCJfY3JlYXRlQ2xhc3MiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJfZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJ2YWx1ZSIsImV4cG9ydHMiLCJfdXRpbCIsIl9pZnJhbWUiLCJfX2VzTW9kdWxlIiwib3duS2V5cyIsIm9iamVjdCIsImVudW1lcmFibGVPbmx5Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bWJvbHMiLCJmaWx0ZXIiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJwdXNoIiwiYXBwbHkiLCJBY2NvdW50Q2xpZW50IiwiX3RoaXMiLCJ0aGlzIiwidmFsaWRhdGVQcm9wcyIsImluaXRQcm9wcyIsImlmcmFtZSIsImJhc2V1cmwiLCJfcHJvcHMiLCJfZXZlbnRIYW5kbGVycyIsImZvckVhY2giLCJtZXRob2QiLCJiaW5kIiwicHJvcCIsImlzTm90T2JqZWN0IiwiRXJyb3IiLCJwIiwiYXBwIiwic2Vzc2lvbiIsInNldCIsInNldERlZmF1bFByb3BzIiwidGltZW91dCIsImNvb2tpZSIsImV2ZW50IiwiX3RoaXMyIiwiX2xlbiIsImFyZ3VtZW50cyIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJmbiIsImNhbGwiLCJjb25jYXQiLCJjYWxsYmFjayIsIl9kb25lIiwiX3RoaXMzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlbWl0IiwiX3NldFRpbWVvdXQiLCJvcGVuIiwicGF0aCIsInF1ZXJ5IiwiZ2V0Iiwib25Mb2FkZWQiLCJfY2xlYXJUaW1lb3V0IiwiZG9uZSIsImRhdGEiLCJvblNTT0Zvcm1SZXNvbHZlZCIsInN0YXR1cyIsInByb2Nlc3NTaWduZWRJbiIsInByb2Nlc3NTaWduaW5nb3V0IiwiX2RvbmUyIiwiX3RoaXM0IiwibmFtZSIsImRpc3BsYXkiLCJvbkF1dGhlbkZvcm1SZXNvbHZlZCIsIl9kb25lMyIsIl90aGlzNSIsImhlaWdodCIsIl90aGlzNiIsInNldExvY2FsU2Vzc2lvbiIsInRoZW4iLCJ1c2VyIiwiZXJyIiwicHJvY2Vzc05hbWUiLCJjb2RlIiwiX2RvbmU0IiwiX3RoaXM3Iiwic2lkIiwiZ2V0TG9jYWxTZXNzaW9uIiwib25TaWdub3V0Rm9ybVJlc29sdmVkIiwiX3RoaXM4IiwiX3RoaXM5IiwiY2xlYXJMb2NhbFNlc3Npb24iLCJfdGhpczEwIiwiU3RvcmFnZSIsIkpTT04iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJ0b2tlbiIsIl90aGlzMTEiLCJyZW1vdmVJdGVtIiwiX3RoaXMxMiIsInNvdXJjZSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsIl90aGlzMTMiLCJfdG8iLCJzZXRUaW1lb3V0IiwiY2xvc2UiLCJjbGVhclRpbWVvdXQiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJhcnIiLCJpc0FycmF5IiwiX2FycmF5TGlrZVRvQXJyYXkiLCJpdGVyIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJmcm9tIiwibyIsIm1pbkxlbiIsIm4iLCJ0b1N0cmluZyIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJ0ZXN0IiwibGVuIiwiYXJyMiIsIklmcmFtZSIsInJlcGxhY2UiLCJfbGF6eUZuIiwiX29uSWZyYW1lTG9hZGVkIiwiX2lmcmFtZUNsb3NlZCIsIm1lc3NhZ2VIYW5kbGVyIiwiaGFuZGxlSWZyYW1lTWVzc2FnZSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInByb2Nlc3NBZnRlckRvbVJlYWR5Iiwid2luZG93IiwicHJvY2Vzc0lmcmFtZU1lc3NhZ2UiLCJmIiwib3JpZ2luIiwibWVzc2FnZSIsInN0eWxlIiwid2lkdGgiLCJfY2xvc2VJZnJhbWUiLCJwb3AiLCJfcmVmIiwiX2xhenlFeGVjdXRlIiwiX3JlZjIiLCJ1cmwiLCJfY29uc3RydWN0VVJMIiwiX29wZW5JZnJhbWUiLCJkaXYiLCJnZXRFbGVtZW50QnlJZCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImFwcGVuZENoaWxkIiwic3JjIiwiYXR0ciIsImJvcmRlciIsIm1hcmdpbiIsIndyYXBwZXIiLCJwb3NpdGlvbiIsInRvcCIsInpJbmRleCIsImlubmVySFRNTCIsIl9pc0RvbUNvbnRlbnRMb2FkZWQiLCJyZWFkeVN0YXRlIiwiaXNPYmplY3QiLCJfcXVlcnkiLCJ0IiwiZ2V0Q2xhc3MiLCJ1dGlsIiwibW9kdWxlIiwiX3JlYWN0IiwiX3R5cGVvZiIsImNhY2hlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiaGFzIiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiaGFzT3duUHJvcGVydHkiLCJkZXNjIiwiX25hdiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfaHJlZiIsIl9hbmltYXRpb24iLCJfc3R5bGUiLCJXZWFrTWFwIiwiX29iamVjdFNwcmVhZCIsIl9jcmVhdGVTdXBlciIsIkRlcml2ZWQiLCJyZXN1bHQiLCJTdXBlciIsIl9nZXRQcm90b3R5cGVPZiIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJOZXdUYXJnZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsIlJlZmVyZW5jZUVycm9yIiwic2hhbSIsIlByb3h5IiwiRGF0ZSIsImUiLCJzZXRQcm90b3R5cGVPZiIsImdldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiX3NldFByb3RvdHlwZU9mIiwiYm9keVNjcm9sbCIsImhyZWYiLCJQYWdlIiwiX0NvbXBvbmVudCIsIl9zdXBlciIsImZpcmUiLCJvblBhZ2VSZW5kZXJlZCIsInJvdXRlIiwiYWN0aXZlIiwib25FbnRlclBhZ2UiLCJwcmV2UHJvcHMiLCJjaGlsZHJlbiIsIkNvbXBvbmVudCIsIlBvcHVwIiwiX0NvbXBvbmVudDIiLCJfc3VwZXIyIiwiY2xhc3NOYW1lIiwic2hvdyIsIlRvYXN0IiwiX0NvbXBvbmVudDMiLCJfc3VwZXIzIiwibGVmdCIsIm9wYWNpdHkiLCJib3R0b20iLCJhbmltIiwiTmF2aWdhdG9yIiwiX0NvbXBvbmVudDQiLCJfc3VwZXI0IiwiX192YWxpZGF0ZVByb3BzIiwic3RhdGUiLCJyb3V0ZVN0YWNrIiwiYWN0aXZlUm91dGVOYW1lIiwiX19maW5kSW5pdGlhbFJvdXRlTmFtZSIsInNob3dQb3B1cCIsInRvYXN0cyIsIl9fc3VwcG9ydGVkUGFnZUV2ZW50cyIsIl9fZXZlbnRzIiwiX19yZWdpc3RlcmVkUm91dGVzIiwiX19yZWdpc3RlclJvdXRlcyIsInJvdXRlcyIsIl9fcG9wdXBTdGFjayIsIl9fZ2xvYmFsIiwicG9wdXAiLCJQb3B1cENvbXBvbmVudCIsIm9wdGlvbnMiLCJjYiIsIl9fY3JlYXRlUG9wdXAiLCJub1VybCIsIm1hdGNoVXJsUGF0aCIsIm5hdiIsIm5hdmlnYXRlIiwicm91dGVIYW5kbGVyIiwiX19jcmVhdGVJbmplY3RQYWdlIiwiX19maXJlIiwib25Qb3BTdGF0ZSIsImhhbmRsZUNsaWNrT25Nb2RhbCIsImFwcGVuZFN0eWxlIiwicmVnaXN0ZXIiLCJnZXRQYXRoTmFtZSIsImluZGV4IiwiZmluZEluZGV4Iiwic3BsaWNlIiwidW5zaGlmdCIsInVpZCIsInNldFN0YXRlIiwiX19pbml0Um91dGVTdGFjayIsInRpdGxlIiwibWFrZVRpdGxlIiwicGFyYW1zIiwiZGVzdHJveSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJtYXAiLCJwYWdlIiwicGFzc2luZ1JvdXRlT2JqIiwiaXNBY3RpdmUiLCJQYWdlQ29tcG9uZW50Iiwib3ZlcmxheSIsIm9uQ2xpY2siLCJzdG9wUHJvcGFnYXRpb24iLCJ0b2FzdCIsImFuaW1hdGVDbG9zaW5nIiwiaW5pdGlhbFJvdXRlIiwiZmFsbGJhY2tSb3V0ZSIsImNvbnNvbGUiLCJ3YXJuIiwicmVkaXJlY3QiLCJfX2ZpbmRSb3V0ZU5hbWVGcm9tVVJMIiwiX19jcmVhdGVJbml0Um91dGUiLCJfX2xvYWRSb3V0ZVN0YWNrRnJvbVNlc3Npb25TdG9yYWdlIiwiX3JvdXRlIiwiaXNTYW1lUm91dGUiLCJpbml0Um91dGVOYW1lIiwiaW5pdFJvdXRlIiwiZXh0cmFjdFVybFBhcmFtcyIsImJ1aWxkVXJsUGF0aCIsImNyZWF0ZVJvdXRlVWlkIiwiaXNGdW5jdGlvbiIsIm9uQ2hhbmdlUm91dGUiLCJfX3ZhbGlkYXRlUm91dGVzIiwiX19iaW5kUGFnZUV2ZW50Iiwib24iLCJoYW5kbGVyIiwiaW5kZXhPZiIsImRlbGV0ZUFsbFBvcHVwcyIsIl9fZGVsZXRlQWxsUG9wdXBzIiwiY2FwaXRhbGl6ZSIsIl9sb29wIiwiZXJyb3IiLCJjaGFuZ2VSb3V0ZSIsInJvdXRlRGF0YSIsIm5vVXBkYXRlVXJsIiwicmVsb2FkIiwiX19zYXZlUm91dGVTdGFja1RvU2Vzc2lvblN0b3JhZ2UiLCJzY29wZSIsIl9fcG9wdXBSZXNvbHZlIiwiX19wb3B1cFJlamVjdCIsImRpc2FibGUiLCJlbmFibGUiLCJUb2FzdENvbXBvbmVudCIsIl9fYW5pbWF0ZUNsb3NlVG9hc3QiLCJ0b0xvd2VyQ2FzZSIsIl9fY2xvc2VUb2FzdCIsInBhZ2VEYXRhIiwic2Vzc2lvblN0b3JhZ2UiLCJvbkNsaWNrT3ZlcmxheSIsIl9fcmpzV2lkZ2V0VHlwZSIsIl9kZWZhdWx0IiwiZHVyYXRpb24iLCJkaXJlY3Rpb24iLCJhbmltYXRpb25OYW1lIiwiYW5pbWF0aW9uRHVyYXRpb24iLCJhbmltYXRpb25EaXJlY3Rpb24iLCJvcmlnaW5hbEJvZHlTdHlsZSIsImJvZHkiLCJjc3NUZXh0Iiwic2Nyb2xsWSIsInNjcm9sbFRvIiwicGFyc2VJbnQiLCJIcmVmIiwiX19oYW5kbGVycyIsImhhc2hDaGFuZ2UiLCJwb3BTdGF0ZSIsIl9fZGVmYXVsdFRpdGxlIiwiaGlzdG9yeSIsInB1c2hTdGF0ZSIsImV2dCIsIl9fbWF0Y2hGcm9tVVJMIiwic3BsaXQiLCJwYXJ0IiwibG9jYXRpb24iLCJtYXRjaCIsInBhcmFtIiwic3BsaXR0ZWQiLCJwYXRocyIsInUiLCJ0cmltIiwidXJscyIsInJldHVyblVybCIsIl9OYXZpZ2F0b3IiLCJfX2lzTmF2UmVnaXN0ZXJlZCIsIl9fcG9wdXAiLCJfX3JvdXRlIiwibmF2aWdhdG9yIiwiX19uYXYiLCJfX3RvYXN0IiwiX19jcmVhdGVUb2FzdCIsImhlYWQiLCJjcmVhdGVUZXh0Tm9kZSIsImNvbXBhcmVPYmplY3QiLCJhIiwiYiIsInBhcnNlUGF0dGVybnNGcm9tVGl0bGUiLCJieSIsInBhdHRlcm5zIiwiZGVlcEdldERhdGEiLCJwYXR0ZXJuIiwic3RyIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJzb3J0IiwiZmlyc3RuYW1lIiwibG9jYWxlQ29tcGFyZSIsIlJlZ0V4cCIsIlVzZXJQcm92aWRlciIsImFjY291bnRDbGllbnQiLCJwYXNzVXNlclRvQ2hpbGRyZW5Qcm9wcyIsIkNoaWxkcmVuIiwiY2hpbGQiLCJjbG9uZUVsZW1lbnQiLCJfVXNlclByb3ZpZGVyIiwibCIsImZvciIsInEiLCJyIiwidiIsInciLCJ4IiwieSIsInoiLCJBIiwiQiIsIkMiLCJjIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiRCIsImlzTW91bnRlZCIsImVucXVldWVGb3JjZVVwZGF0ZSIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlU2V0U3RhdGUiLCJFIiwiRiIsImNvbnRleHQiLCJyZWZzIiwidXBkYXRlciIsIkciLCJIIiwiaXNSZWFjdENvbXBvbmVudCIsImZvcmNlVXBkYXRlIiwiSSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSiIsImN1cnJlbnQiLCJLIiwiTCIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTSIsImQiLCJnIiwiayIsImgiLCJtIiwiZGVmYXVsdFByb3BzIiwiJCR0eXBlb2YiLCJ0eXBlIiwiX293bmVyIiwiTyIsIlAiLCJRIiwiUiIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlMiLCJUIiwiVSIsIm5leHQiLCJqb2luIiwiViIsIlciLCJhYSIsIlgiLCJZIiwiWiIsImJhIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJSZWFjdEN1cnJlbnRPd25lciIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwiYXNzaWduIiwidG9BcnJheSIsIm9ubHkiLCJGcmFnbWVudCIsIlByb2ZpbGVyIiwiUHVyZUNvbXBvbmVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfY29udGV4dCIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwicmVuZGVyIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsIm1lbW8iLCJjb21wYXJlIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRGVidWdWYWx1ZSIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwidmVyc2lvbiIsInN0b3JhZ2UiLCJyZXF1ZXN0IiwiaGVhZGVyIiwiWE1MSHR0cFJlcXVlc3QiLCJzZXRSZXF1ZXN0SGVhZGVyIiwiYXV0aGVuIiwidG8iLCJyZXNwb25zZVRleHQiLCJzZW5kIiwidXNlVHJhbnNsYXRpb24iLCJwcm9ncmFtcyIsImNvbnRlbnRWaXNpYmxlIiwic2V0Q29udGVudFZpc2libGUiLCJiYWNrZ3JvdW5kIiwib25Nb3VzZUVudGVyIiwib25Nb3VzZUxlYXZlIiwicGFkZGluZ1RvcCIsInByb2dyYW0iLCJpZCIsInBpZCIsInByZXZlbnREZWZhdWx0IiwiaXNTY3JvbGxEb3duIiwiY2FyZFN0eWxlIiwiZW5kcG9pbnQiLCJtYXhXaWR0aCIsIm1hcmdpblJpZ2h0IiwibWFyZ2luVG9wIiwiTG9nbyIsImltZ3VybCIsImxvZ28iLCJFbnJvbGxlZEJ1dHRvbiIsIkNhcnQiLCJVc2VyIiwiYWNjb3JkaW9uVmlzaWJsZSIsInNldEFjY29yZGlvblZpc2libGUiLCJtYXJnaW5MZWZ0IiwibWluV2lkdGgiLCJoaWRlIiwibWFyZ2luQm90dG9tIiwicGFkZGluZyIsIlNpZGViYXIiLCJmb250RmFtaWx5IiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJVc2VyU25pcGV0IiwiTG9naW4iLCJzaWduaW4iLCJzaG93RHJvcCIsInNldFNob3dEcm9wIiwidGV4dEFsaWduIiwicHJvZmlsZSIsImRpc3BsYXlOYW1lIiwiRHJvcE1lbnUiLCJyaWdodCIsInNpZ25vdXQiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwidGVzdDMiLCJsZXR0ZXIiLCJzIiwiU2V0IiwiY2EiLCJkYSIsImVhIiwiYWRkIiwiZmEiLCJoYSIsImlhIiwiamEiLCJrYSIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwib2EiLCJwYSIsInFhIiwiaXNOYU4iLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInhsaW5rSHJlZiIsInJhIiwic2EiLCJ0YSIsInVhIiwid2EiLCJ4YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIk1hIiwiS2EiLCJMYSIsIk5hIiwic3RhY2siLCJPYSIsIlBhIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJRYSIsInRhZyIsIl9yZW5kZXIiLCJSYSIsIl9wYXlsb2FkIiwiX2luaXQiLCJTYSIsIlRhIiwibm9kZU5hbWUiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiV2EiLCJjaGVja2VkIiwiWGEiLCJhY3RpdmVFbGVtZW50IiwiWWEiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlphIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIiRhIiwiYWIiLCJiYiIsIm93bmVyRG9jdW1lbnQiLCJlYiIsImZiIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJ2YWx1ZU9mIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsInBiIiwibGFzdENoaWxkIiwibm9kZVR5cGUiLCJub2RlVmFsdWUiLCJxYiIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInJiIiwic2IiLCJ0YiIsInNldFByb3BlcnR5Iiwic3Vic3RyaW5nIiwidWIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInRyYWNrIiwid2JyIiwidmIiLCJ3YiIsImlzIiwieGIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJDYiIsInN0YXRlTm9kZSIsIkRiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJGYiIsIk9iIiwiUGIiLCJRYiIsIlJiIiwib25FcnJvciIsIlNiIiwiVGIiLCJVYiIsIlZiIiwiV2IiLCJYYiIsIlpiIiwiYWx0ZXJuYXRlIiwicmV0dXJuIiwiZmxhZ3MiLCIkYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiYWMiLCJkYyIsImVjIiwiZmMiLCJnYyIsImhjIiwiaWMiLCJqYyIsImtjIiwibGMiLCJtYyIsIm5jIiwiTWFwIiwib2MiLCJwYyIsInFjIiwicmMiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwibmF0aXZlRXZlbnQiLCJ0YXJnZXRDb250YWluZXJzIiwic2MiLCJkZWxldGUiLCJwb2ludGVySWQiLCJ0YyIsInZjIiwid2MiLCJsYW5lUHJpb3JpdHkiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJjb250YWluZXJJbmZvIiwieGMiLCJ5YyIsInNoaWZ0IiwiemMiLCJBYyIsIkJjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiQ2MiLCJEYyIsIkVjIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiRmMiLCJHYyIsIkhjIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIkljIiwiSmMiLCJLYyIsIkxjIiwiTWMiLCJOYyIsIk9jIiwiUGMiLCJ1bnN0YWJsZV9ub3ciLCJSYyIsIlVjIiwicGVuZGluZ0xhbmVzIiwiZXhwaXJlZExhbmVzIiwic3VzcGVuZGVkTGFuZXMiLCJwaW5nZWRMYW5lcyIsIlZjIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwiV2MiLCJYYyIsIlljIiwiWmMiLCIkYyIsImV2ZW50VGltZXMiLCJNYXRoIiwiY2x6MzIiLCJiZCIsImNkIiwibG9nIiwiTE4yIiwiZGQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVkIiwiZmQiLCJnZCIsImhkIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsIm9kIiwia2V5Q29kZSIsImNoYXJDb2RlIiwicGQiLCJxZCIsInJkIiwiX3JlYWN0TmFtZSIsIl90YXJnZXRJbnN0IiwiY3VycmVudFRhcmdldCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImlzUGVyc2lzdGVudCIsIndkIiwieGQiLCJ5ZCIsInNkIiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwibm93IiwiaXNUcnVzdGVkIiwidGQiLCJ1ZCIsInZpZXciLCJkZXRhaWwiLCJ2ZCIsIkFkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiZ2V0TW9kaWZpZXJTdGF0ZSIsInpkIiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIkJkIiwiRGQiLCJkYXRhVHJhbnNmZXIiLCJGZCIsIkhkIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSmQiLCJjbGlwYm9hcmREYXRhIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwicmVwZWF0IiwibG9jYWxlIiwid2hpY2giLCJUZCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIlpkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsIndlZWsiLCJtZSIsIm5lIiwiRWIiLCJvZSIsImxpc3RlbmVycyIsInBlIiwicWUiLCJyZSIsInNlIiwidGUiLCJ1ZSIsInZlIiwid2UiLCJ4ZSIsInllIiwiemUiLCJvbmlucHV0IiwiQWUiLCJkZXRhY2hFdmVudCIsIkJlIiwiQ2UiLCJhdHRhY2hFdmVudCIsIkRlIiwiRWUiLCJGZSIsIkhlIiwiSWUiLCJKZSIsIktlIiwiTGUiLCJub2RlIiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJNZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJOZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsIk9lIiwiY29udGVudEVkaXRhYmxlIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJkZWZhdWx0VmlldyIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiVmUiLCJXZSIsIlhlIiwiWWUiLCJaZSIsImxpc3RlbmVyIiwiJGUiLCJhZiIsImJmIiwicmFuZG9tIiwiY2YiLCJkZiIsImNhcHR1cmUiLCJwYXNzaXZlIiwiZWYiLCJmZiIsInBhcmVudFdpbmRvdyIsImdmIiwiaGYiLCJjaGFyIiwiamYiLCJrZiIsImxmIiwibWYiLCJhdXRvRm9jdXMiLCJuZiIsIl9faHRtbCIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJwcmV2aW91c1NpYmxpbmciLCJ0ZiIsInZmIiwid2YiLCJ4ZiIsInlmIiwiemYiLCJBZiIsIkJmIiwiQ2YiLCJOIiwiRGYiLCJFZiIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkZmIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJHZiIsIkhmIiwiSWYiLCJnZXRDaGlsZENvbnRleHQiLCJKZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJRZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiUmYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJTZiIsIlRmIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJVZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiVmYiLCJXZiIsIlhmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJZZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsIm5nIiwib2ciLCJwZyIsInFnIiwicmciLCJzZyIsImNoaWxkTGFuZXMiLCJ0ZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwidWciLCJ2ZyIsIm9ic2VydmVkQml0cyIsInJlc3BvbmRlcnMiLCJ3ZyIsInhnIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJmaXJzdEJhc2VVcGRhdGUiLCJsYXN0QmFzZVVwZGF0ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwieWciLCJ6ZyIsImV2ZW50VGltZSIsImxhbmUiLCJwYXlsb2FkIiwiQWciLCJCZyIsIkNnIiwiRGciLCJFZyIsIkZnIiwiR2ciLCJLZyIsIl9yZWFjdEludGVybmFscyIsIkhnIiwiSWciLCJKZyIsIkxnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiTWciLCJjb250ZXh0VHlwZSIsIk5nIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiT2ciLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlBnIiwiUWciLCJfc3RyaW5nUmVmIiwiUmciLCJTZyIsImxhc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJzaWJsaW5nIiwiVGciLCJVZyIsIm1vZGUiLCJlbGVtZW50VHlwZSIsIlZnIiwiaW1wbGVtZW50YXRpb24iLCJXZyIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJlaCIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJmaCIsImdoIiwiaGgiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJ3aCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJiYXNlUXVldWUiLCJxdWV1ZSIsIkloIiwiSmgiLCJLaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsIkxoIiwiTWgiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJtdXRhYmxlUmVhZExhbmVzIiwiTmgiLCJnZXRTbmFwc2hvdCIsInN1YnNjcmliZSIsInNldFNuYXBzaG90IiwiT2giLCJQaCIsIlFoIiwiUmgiLCJkZXBzIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJyZWFkQ29udGV4dCIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwidXNlTXV0YWJsZVNvdXJjZSIsInVzZU9wYXF1ZUlkZW50aWZpZXIiLCJ1bnN0YWJsZV9pc05ld1JlY29uY2lsZXIiLCJlaSIsImZpIiwiZ2kiLCJoaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJiYXNlTGFuZXMiLCJuaSIsIm9pIiwicGkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJxaSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsInJpIiwicGVuZGluZ0NvbnRleHQiLCJCaSIsIkRpIiwiRWkiLCJzaSIsInJldHJ5TGFuZSIsInRpIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsInVpIiwidW5zdGFibGVfZXhwZWN0ZWRMb2FkVGltZSIsInZpIiwieWkiLCJ6aSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwibGFzdCIsInRhaWwiLCJ0YWlsTW9kZSIsIkFpIiwiRmkiLCJHaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsIkhpIiwiSWkiLCJKaSIsIktpIiwiTGkiLCJNaSIsIk5pIiwiT2kiLCJQaSIsImVsZW1lbnQiLCJRaSIsIlJpIiwiU2kiLCJjb21wb25lbnREaWRDYXRjaCIsIlRpIiwiY29tcG9uZW50U3RhY2siLCJVaSIsIldlYWtTZXQiLCJWaSIsIldpIiwiWGkiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIllpIiwiWmkiLCIkaSIsImZvY3VzIiwiYWoiLCJiaiIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiY29tcG9uZW50V2lsbFVubW91bnQiLCJjaiIsImRqIiwiZWoiLCJmaiIsImdqIiwiaGoiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiaWoiLCJqaiIsImtqIiwibGoiLCJtaiIsIm5qIiwiY2VpbCIsIm9qIiwicGoiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJJbmZpbml0eSIsIndqIiwiY2siLCJ4aiIsInlqIiwiemoiLCJBaiIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiSWoiLCJKaiIsIktqIiwiTGoiLCJNaiIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImNhbGxiYWNrUHJpb3JpdHkiLCJOaiIsIk9qIiwiUGoiLCJRaiIsIlJqIiwiU2oiLCJUaiIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJVaiIsInRpbWVvdXRIYW5kbGUiLCJwaW5nQ2FjaGUiLCJZaiIsIlpqIiwidmEiLCJhayIsImJrIiwiZGsiLCJyYW5nZUNvdW50IiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsImVrIiwibWluIiwiZXh0ZW5kIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwic2Nyb2xsTGVmdCIsInNjcm9sbFRvcCIsIm9uQ29tbWl0RmliZXJSb290IiwiZmsiLCJnayIsImlrIiwicGVuZGluZ0NoaWxkcmVuIiwiamsiLCJtdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhIiwibGsiLCJtayIsIm5rIiwib2siLCJxayIsImh5ZHJhdGlvbk9wdGlvbnMiLCJtdXRhYmxlU291cmNlcyIsIl9pbnRlcm5hbFJvb3QiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJ3ayIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJ4ayIsInJlbmRlcmVyQ29uZmlnIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGgiLCJvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGgiLCJvdmVycmlkZVByb3BzIiwib3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGgiLCJvdmVycmlkZVByb3BzUmVuYW1lUGF0aCIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwieWsiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsInJrIiwiaGFzQXR0cmlidXRlIiwidGsiLCJjaGVja0RDRSIsImkxOG5JbnN0YW5jZSIsImRlZmF1bHRPcHRpb25zIiwiYmluZEkxOG4iLCJiaW5kSTE4blN0b3JlIiwidHJhbnNFbXB0eU5vZGVWYWx1ZSIsInRyYW5zU3VwcG9ydEJhc2ljSHRtbE5vZGVzIiwidHJhbnNLZWVwQmFzaWNIdG1sTm9kZXNGb3IiLCJ1c2VTdXNwZW5zZSIsIkkxOG5Db250ZXh0IiwiZ2V0RGVmYXVsdHMiLCJSZXBvcnROYW1lc3BhY2VzIiwidXNlZE5hbWVzcGFjZXMiLCJuYW1lc3BhY2VzIiwibnMiLCJnZXRJMThuIiwiaW5pdFJlYWN0STE4bmV4dCIsImluaXQiLCJyZWFjdCIsIl9zbGljZWRUb0FycmF5IiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsIl9zIiwiX2kiLCJfY29uc29sZSIsImFscmVhZHlXYXJuZWQiLCJ3YXJuT25jZSIsIl9sZW4yIiwiX2tleTIiLCJsb2FkTmFtZXNwYWNlcyIsImkxOG4iLCJpc0luaXRpYWxpemVkIiwiaW5pdGlhbGl6ZWQiLCJvZmYiLCJoYXNMb2FkZWROYW1lc3BhY2UiLCJsYW5ndWFnZXMiLCJsbmciLCJmYWxsYmFja0xuZyIsImxhc3RMbmciLCJsb2FkTm90UGVuZGluZyIsImxvYWRTdGF0ZSIsInNlcnZpY2VzIiwiYmFja2VuZENvbm5lY3RvciIsImJhY2tlbmQiLCJpc0xhbmd1YWdlQ2hhbmdpbmdUbyIsImhhc1Jlc291cmNlQnVuZGxlIiwiaTE4bkZyb21Qcm9wcyIsImkxOG5Gcm9tQ29udGV4dCIsImRlZmF1bHROU0Zyb21Db250ZXh0IiwiZGVmYXVsdE5TIiwicmVwb3J0TmFtZXNwYWNlcyIsIm5vdFJlYWR5VCIsInJldE5vdFJlYWR5IiwicmVhZHkiLCJ3YWl0IiwiaTE4bk9wdGlvbnMiLCJhZGRVc2VkTmFtZXNwYWNlcyIsImluaXRpYWxpemVkU3RvcmVPbmNlIiwiZXZlcnkiLCJnZXRUIiwiZ2V0Rml4ZWRUIiwibnNNb2RlIiwiX3VzZVN0YXRlIiwiX3VzZVN0YXRlMiIsInNldFQiLCJib3VuZFJlc2V0Iiwic3RvcmUiLCJpc0luaXRpYWwiLCJyZXQiLCJkZWZhdWx0IiwicGVyZm9ybWFuY2UiLCJNZXNzYWdlQ2hhbm5lbCIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsImV4cGlyYXRpb25UaW1lIiwicHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJ1bnN0YWJsZV9uZXh0IiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJkZWxheSIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsIndlYnBhY2tDb250ZXh0IiwicmVxIiwid2VicGFja0NvbnRleHRSZXNvbHZlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIm1vZHVsZUlkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdldHRlciIsImRlZmluaXRpb24iLCJ0b1N0cmluZ1RhZyIsImZldGNoIiwieGh0dHAiLCJyZXMiLCJfX2VuZHBvaW50Iiwic2V0RW5kcG9pbnQiLCJhbGwiLCJwcm9tb3Rpb25zIiwiY29uc29sZUxvZ2dlciIsIm91dHB1dCIsImJhc2VMb2dnZXIiLCJMb2dnZXIiLCJjb25jcmV0ZUxvZ2dlciIsInByZWZpeCIsImxvZ2dlciIsImRlYnVnIiwiYm9vbCIsImZvcndhcmQiLCJfbGVuMyIsIl9rZXkzIiwiX2xlbjQiLCJfa2V5NCIsImx2bCIsImRlYnVnT25seSIsIm1vZHVsZU5hbWUiLCJFdmVudEVtaXR0ZXIiLCJvYnNlcnZlcnMiLCJldmVudHMiLCJjbG9uZWQiLCJvYnNlcnZlciIsIl9jbG9uZWQiLCJkZWZlciIsInJlaiIsInByb21pc2UiLCJtYWtlU3RyaW5nIiwiY29weSIsImdldExhc3RPZlBhdGgiLCJFbXB0eSIsImNsZWFuS2V5IiwiY2FuTm90VHJhdmVyc2VEZWVwZXIiLCJzZXRQYXRoIiwibmV3VmFsdWUiLCJfZ2V0TGFzdE9mUGF0aCIsImdldFBhdGgiLCJfZ2V0TGFzdE9mUGF0aDMiLCJnZXRQYXRoV2l0aERlZmF1bHRzIiwiZGVmYXVsdERhdGEiLCJkZWVwRXh0ZW5kIiwib3ZlcndyaXRlIiwicmVnZXhFc2NhcGUiLCJfZW50aXR5TWFwIiwiaXNJRTEwIiwidXNlckFnZW50IiwiUmVzb3VyY2VTdG9yZSIsIl9FdmVudEVtaXR0ZXIiLCJrZXlTZXBhcmF0b3IiLCJzaWxlbnQiLCJhZGROYW1lc3BhY2VzIiwicmVzb3VyY2VzIiwiYWRkUmVzb3VyY2UiLCJkZWVwIiwicGFjayIsInJlbW92ZU5hbWVzcGFjZXMiLCJnZXRSZXNvdXJjZSIsImNvbXBhdGliaWxpdHlBUEkiLCJwb3N0UHJvY2Vzc29yIiwicHJvY2Vzc29ycyIsImFkZFBvc3RQcm9jZXNzb3IiLCJoYW5kbGUiLCJ0cmFuc2xhdG9yIiwicHJvY2Vzc29yIiwicHJvY2VzcyIsImNoZWNrZWRMb2FkZWRGb3IiLCJUcmFuc2xhdG9yIiwibGFuZ3VhZ2UiLCJpbnRlcnBvbGF0aW9uIiwicmVzb2x2ZWQiLCJuc1NlcGFyYXRvciIsImludGVycG9sYXRvciIsIm5lc3RpbmdSZWdleHAiLCJwYXJ0cyIsImxhc3RLZXkiLCJvdmVybG9hZFRyYW5zbGF0aW9uT3B0aW9uSGFuZGxlciIsIl90aGlzJGV4dHJhY3RGcm9tS2V5IiwiZXh0cmFjdEZyb21LZXkiLCJuYW1lc3BhY2UiLCJhcHBlbmROYW1lc3BhY2VUb0NJTW9kZSIsInJlc1VzZWRLZXkiLCJ1c2VkS2V5IiwicmVzRXhhY3RVc2VkS2V5IiwiZXhhY3RVc2VkS2V5IiwicmVzVHlwZSIsIm5vT2JqZWN0Iiwiam9pbkFycmF5cyIsImhhbmRsZUFzT2JqZWN0SW5JMThuRm9ybWF0IiwiaTE4bkZvcm1hdCIsImhhbmRsZUFzT2JqZWN0IiwicmV0dXJuT2JqZWN0cyIsInJldHVybmVkT2JqZWN0SGFuZGxlciIsInJlc1R5cGVJc0FycmF5IiwibmV3S2V5VG9Vc2UiLCJkZWVwS2V5IiwidHJhbnNsYXRlIiwiZXh0ZW5kVHJhbnNsYXRpb24iLCJ1c2VkRGVmYXVsdCIsIm5lZWRzUGx1cmFsSGFuZGxpbmciLCJoYXNEZWZhdWx0VmFsdWUiLCJkZWZhdWx0VmFsdWVTdWZmaXgiLCJwbHVyYWxSZXNvbHZlciIsImdldFN1ZmZpeCIsImlzVmFsaWRMb29rdXAiLCJ1cGRhdGVNaXNzaW5nIiwibG5ncyIsImZhbGxiYWNrTG5ncyIsImxhbmd1YWdlVXRpbHMiLCJnZXRGYWxsYmFja0NvZGVzIiwic2F2ZU1pc3NpbmdUbyIsInRvUmVzb2x2ZUhpZXJhcmNoeSIsImZhbGxiYWNrVmFsdWUiLCJtaXNzaW5nS2V5SGFuZGxlciIsInNhdmVNaXNzaW5nIiwic2F2ZU1pc3NpbmdQbHVyYWxzIiwiZ2V0U3VmZml4ZXMiLCJzdWZmaXgiLCJhcHBlbmROYW1lc3BhY2VUb01pc3NpbmdLZXkiLCJwYXJzZU1pc3NpbmdLZXlIYW5kbGVyIiwidXNlZExuZyIsInVzZWROUyIsInNraXBJbnRlcnBvbGF0aW9uIiwibmVzdEJlZiIsInNraXBPblZhcmlhYmxlcyIsImRlZmF1bHRWYXJpYWJsZXMiLCJpbnRlcnBvbGF0ZSIsIm5hIiwibmVzdCIsInJlc2V0IiwicG9zdFByb2Nlc3MiLCJwb3N0UHJvY2Vzc29yTmFtZXMiLCJhcHBseVBvc3RQcm9jZXNzb3IiLCJwb3N0UHJvY2Vzc1Bhc3NSZXNvbHZlZCIsImkxOG5SZXNvbHZlZCIsImZvdW5kIiwiZXh0cmFjdGVkIiwiZmFsbGJhY2tOUyIsIm5lZWRzQ29udGV4dEhhbmRsaW5nIiwiY29kZXMiLCJ1dGlscyIsInBsdXJhbFN1ZmZpeCIsInBvc3NpYmxlS2V5IiwiZmluYWxLZXkiLCJmaW5hbEtleXMiLCJhZGRMb29rdXBLZXlzIiwiY29udGV4dFNlcGFyYXRvciIsInJldHVybk51bGwiLCJyZXR1cm5FbXB0eVN0cmluZyIsInJlc291cmNlU3RvcmUiLCJvcHRpb24iLCJzdHJpbmciLCJMYW5ndWFnZVV0aWwiLCJ3aGl0ZWxpc3QiLCJzdXBwb3J0ZWRMbmdzIiwiZm9ybWF0TGFuZ3VhZ2VDb2RlIiwic3BlY2lhbENhc2VzIiwibG93ZXJDYXNlTG5nIiwiY2xlYW5Db2RlIiwiZGVwcmVjYXRlIiwiaXNTdXBwb3J0ZWRDb2RlIiwibG9hZCIsIm5vbkV4cGxpY2l0U3VwcG9ydGVkTG5ncyIsImdldExhbmd1YWdlUGFydEZyb21Db2RlIiwiY2xlYW5lZExuZyIsImxuZ09ubHkiLCJmaW5kIiwic3VwcG9ydGVkTG5nIiwiZmFsbGJhY2tzIiwiZ2V0U2NyaXB0UGFydEZyb21Db2RlIiwiZmFsbGJhY2tDb2RlIiwiZmFsbGJhY2tDb2RlcyIsImFkZENvZGUiLCJzZXRzIiwibnIiLCJfcnVsZXNQbHVyYWxzVHlwZXMiLCIxIiwiTnVtYmVyIiwiMiIsIjMiLCI0IiwiNSIsIjYiLCI3IiwiMTAiLCIxMSIsIjE0IiwiMTUiLCIyMSIsIjIyIiwiY3JlYXRlUnVsZXMiLCJydWxlcyIsIm51bWJlcnMiLCJwbHVyYWxzIiwiUGx1cmFsUmVzb2x2ZXIiLCJydWxlIiwiZ2V0UnVsZSIsImlkeCIsIm5vQWJzIiwiYWJzIiwic2ltcGxpZnlQbHVyYWxTdWZmaXgiLCJyZXR1cm5TdWZmaXgiLCJwcmVwZW5kIiwiY29tcGF0aWJpbGl0eUpTT04iLCJJbnRlcnBvbGF0b3IiLCJmb3JtYXQiLCJlc2NhcGVWYWx1ZSIsImlPcHRzIiwiZXNjYXBlIiwidXNlUmF3VmFsdWVUb0VzY2FwZSIsInByZWZpeEVzY2FwZWQiLCJzdWZmaXhFc2NhcGVkIiwiZm9ybWF0U2VwYXJhdG9yIiwidW5lc2NhcGVQcmVmaXgiLCJ1bmVzY2FwZVN1ZmZpeCIsIm5lc3RpbmdQcmVmaXgiLCJuZXN0aW5nUHJlZml4RXNjYXBlZCIsIm5lc3RpbmdTdWZmaXgiLCJuZXN0aW5nU3VmZml4RXNjYXBlZCIsIm5lc3RpbmdPcHRpb25zU2VwYXJhdG9yIiwibWF4UmVwbGFjZXMiLCJhbHdheXNGb3JtYXQiLCJyZXNldFJlZ0V4cCIsInJlZ2V4cFN0ciIsInJlZ2V4cCIsInJlZ2V4cFVuZXNjYXBlU3RyIiwicmVnZXhwVW5lc2NhcGUiLCJuZXN0aW5nUmVnZXhwU3RyIiwicmVwbGFjZXMiLCJyZWdleFNhZmUiLCJoYW5kbGVGb3JtYXQiLCJtaXNzaW5nSW50ZXJwb2xhdGlvbkhhbmRsZXIiLCJyZWdleCIsInNhZmVWYWx1ZSIsInRvZG8iLCJleGVjIiwidGVtcCIsImxhc3RJbmRleCIsImNsb25lZE9wdGlvbnMiLCJoYW5kbGVIYXNPcHRpb25zIiwiaW5oZXJpdGVkT3B0aW9ucyIsInNlcCIsIm9wdGlvbnNTdHJpbmciLCJmb3JtYXR0ZXJzIiwiZG9SZWR1Y2UiLCJpbmNsdWRlcyIsImVsZW0iLCJyZWR1Y2UiLCJDb25uZWN0b3IiLCJ0b0xvYWQiLCJ0b0xvYWRMYW5ndWFnZXMiLCJ0b0xvYWROYW1lc3BhY2VzIiwiaGFzQWxsTmFtZXNwYWNlcyIsImxvYWRlZCIsImVycm9ycyIsImFkZFJlc291cmNlQnVuZGxlIiwiX2dldExhc3RPZlBhdGgyIiwid2hhdCIsImZjTmFtZSIsInRyaWVkIiwicmVhZCIsInF1ZXVlTG9hZCIsImxvYWRPbmUiLCJwcmVwYXJlTG9hZGluZyIsInVuZGVmaW5lZCIsImlzVXBkYXRlIiwiaW5pdEltbWVkaWF0ZSIsIm5vbkV4cGxpY2l0V2hpdGVsaXN0IiwicHJlbG9hZCIsInBsdXJhbFNlcGFyYXRvciIsInBhcnRpYWxCdW5kbGVkTGFuZ3VhZ2VzIiwidERlc2NyaXB0aW9uIiwiX2Zvcm1hdCIsInRyYW5zZm9ybU9wdGlvbnMiLCJub29wIiwiSTE4biIsIm1vZHVsZXMiLCJleHRlcm5hbCIsImlzQ2xvbmUiLCJjcmVhdGVDbGFzc09uRGVtYW5kIiwiQ2xhc3NPck9iamVjdCIsImx1IiwibGFuZ3VhZ2VEZXRlY3RvciIsImRldGVjdGlvbiIsInN0b3JlQXBpIiwiX3RoaXMyJHN0b3JlIiwic3RvcmVBcGlDaGFpbmVkIiwiX3RoaXMyJHN0b3JlMiIsImRlZmVycmVkIiwiZmluaXNoIiwiY2hhbmdlTGFuZ3VhZ2UiLCJ1c2VkQ2FsbGJhY2siLCJhcHBlbmQiLCJzZXRMbmciLCJnZXRCZXN0TWF0Y2hGcm9tQ29kZXMiLCJjYWNoZVVzZXJMYW5ndWFnZSIsImxvYWRSZXNvdXJjZXMiLCJhc3luYyIsImRldGVjdCIsImZpeGVkVCIsIm9wdHMiLCJyZXN0IiwiX3RoaXMkdHJhbnNsYXRvciIsIl90aGlzJHRyYW5zbGF0b3IyIiwiZXhpc3RzIiwicHJlY2hlY2siLCJwcmVSZXN1bHQiLCJwcmVsb2FkZWQiLCJuZXdMbmdzIiwibWVyZ2VkT3B0aW9ucyIsImNsb25lIiwibWVtYmVyc1RvQ29weSIsImxhbmciLCJyZXF1aXJlIiwiX19sYW5ndWFnZSIsInNldExhbmd1YWdlIiwibWFwQ291cnNlTGV2ZWxUb1N0cmluZyIsImxldmVsIiwibG9jYWxlU3RyaW5nIiwiZ3JwIiwiaiIsInN4IiwibGV2ZWxJbmRpY2F0b3JzIiwiXyIsIl9jb2xvciIsImRpY3QiLCJ0YWdDb2xvciIsImNyZWF0ZVRhZyIsImNvdXJzZXMiLCJ0YWdzIiwiY291cnNlIiwiY3JlYXRlVGFnRm9yQ291cnNlIiwiX3RhZ3MiLCJwcm9tb3Rpb24iLCJzY29wZXMiLCJpdGVtIiwiY291cnNlSWQiLCJjb2xvclRhZyIsInNraWxscyIsInNraWxsIiwidGh1bWJuYWlsIiwiYm9yZGVyUmFkaXVzIiwiVGFncyIsInRleHREZWNvcmF0aW9uIiwiY2lkIiwiZm9udFN0eWxlIiwic25pcHBldCIsIlNraWxsTGlzdCIsIkxldmVsSW5kaWNhdG9ycyIsIkNvdXJzZUluZm8iLCJBY3Rpb25CdXR0b25zIiwiZGVzY3JpcHRpb24iLCJ2aWRlbyIsIkVucm9sbEJ1dHRvbiIsImVucm9sbCIsIlNhbGVCYXIiLCJwcmljZSIsInZpc2libGUiLCJoZWFkZXJQYWRkaW5nIiwicGFkZGluZ0xlZnQiLCJkaXNjb3VudCIsInNhbGUiLCJTYWxlQm94IiwiZGV0YWlsVmlzaWJsZSIsInNldERldGFpbFZpc2libGUiLCJiZW5lZml0cyIsImhlYWRpbmciLCJpbWFnZSIsIkdyaWQiLCJiZ0NvbG9yIiwiQmVuZWZpdFRleHQiLCJCZW5lZml0SW1hZ2UiLCJjb250ZW50IiwibWVkaWEiLCJDb250ZW50IiwiTWVkaWFJY29uIiwiaG9tZSIsImJyb3dzZSIsIkNvdXJzZURpc3BsYXlJdGVtIiwic2hvd0hlYWRlclNlcGFyYXRvciIsInNhbGVCYXJWaXNpYmxlIiwic2V0U2FsZUJhclZpc2libGUiLCJoYW5kbGVTY3JvbGwiLCJzYWxlUHJpY2UiLCJtYXgiLCJhY2MiLCJUaXRsZSIsIkRlc2NyaXB0aW9uIiwiVmlkZW8iLCJCZW5lZml0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicHJvY2VlZEVucm9sbCIsIlNpZ25pblJlcXVlc3QiLCJhdXRoZW50aWNhdGUiLCJjb3Vyc2VQcm9tb3Rpb24iLCJlcnJvcjQwNCIsIkhlYWRlciIsIkRlc2t0b3AiLCJNb2JpbGUiLCJzZXRJc1Njcm9sbERvd24iLCJ1cGRhdGVJc1Njcm9sbERvd24iLCJoZWFkZXJIZWlnaHQiLCJwYWdlWU9mZnNldCIsInN0aWNrYWJsZSIsInNldFZpc2libGUiLCJ1cGRhdGVWaXNpYmxlIiwiYmVoYXZpb3IiLCJ2aWV3SGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJXZWJhcHAiLCJoZWFkZXJWaXNpYmxlIiwic2V0SGVhZGVyVmlzaWJsZSIsImhlYWRlckNhcmRTdHlsZSIsInNldEhlYWRlckNhcmRTdHlsZSIsImZvb3RlclN0aWNrYWJsZSIsInNldEZvb3RlclN0aWNrYWJsZSIsIm9uV2luZG93UmVzaXplIiwidXBkYXRlRm9vdGVTdGlja2FibGUiLCJGb290ZXIiLCJTY3JvbGxUb3BCdXR0b24iLCJfX2NvbmZpZ3MiLCJjb25maWciLCJ2ZXJpZnlDb25maWdzIiwibG9jYWxlcyIsImFjY291bnQiLCJhY2NvdW50U2Vzc2lvbk5hbWUiLCJzc28iLCJzZXJ2aWNlV29ya2VyIiwicmVnIiwiaW5zdGFsbGluZyIsImFwcGxpY2F0aW9uIiwiY2FjaGVkTW9kdWxlIl0sIm1hcHBpbmdzIjoiOzZEQUFlLFNBQVNBLEVBQWdCQyxFQUFVQyxHQUNoRCxLQUFNRCxhQUFvQkMsR0FDeEIsTUFBTSxJQUFJQyxVQUFVLHFDLDZDQ0Z4QixTQUFTQyxFQUFrQkMsRUFBUUMsR0FDakMsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlELEVBQU1FLE9BQVFELElBQUssQ0FDckMsSUFBSUUsRUFBYUgsRUFBTUMsR0FDdkJFLEVBQVdDLFdBQWFELEVBQVdD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LEVBQUtzRCxJQUN4QixJQUFJNjhDLEVBQVM3OEMsR0FBVUEsRUFBTzNLLFdBQzdCLElBQU8ySyxFQUFpQixRQUN4QixJQUFNLEVBRVAsT0FEQXk4QyxFQUFvQjNyQyxFQUFFK3JDLEVBQVEsQ0FBRTF2QyxFQUFHMHZDLElBQzVCQSxHQ0xSSixFQUFvQjNyQyxFQUFJLENBQUM1YixFQUFTNG5ELEtBQ2pDLElBQUksSUFBSXBvRCxLQUFPb29ELEVBQ1hMLEVBQW9CamdELEVBQUVzZ0QsRUFBWXBvRCxLQUFTK25ELEVBQW9CamdELEVBQUV0SCxFQUFTUixJQUM1RUYsT0FBT0MsZUFBZVMsRUFBU1IsRUFBSyxDQUFFTCxZQUFZLEVBQU11RSxJQUFLa2tELEVBQVdwb0QsTUNKM0UrbkQsRUFBb0JqZ0QsRUFBSSxDQUFDeEgsRUFBSzZCLElBQVVyQyxPQUFPTSxVQUFVMEwsZUFBZXpJLEtBQUsvQyxFQUFLNkIsRyxzQ0NnQmxGSSxHQWRlLENBQ2J3cUQsU0FBVSxLQUNWeHFELElBQUssTUFDTDRmLFNBQVUsQ0FDUmloRCxRQUFTLDRCQUNUOWhELFNBQVUsOENBQ1Y2N0MsUUFBUyx3Q0FDVHZVLFdBQVksZ0RBQ1pubUMsS0FBTSxvRCIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufSIsImZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn0iLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX3V0aWwgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuXG52YXIgX2lmcmFtZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaWZyYW1lXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgXCJkZWZhdWx0XCI6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbnZhciBBY2NvdW50Q2xpZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQWNjb3VudENsaWVudChwcm9wcykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWNjb3VudENsaWVudCk7XG5cbiAgICB0aGlzLnZhbGlkYXRlUHJvcHMocHJvcHMpO1xuICAgIHRoaXMuaW5pdFByb3BzKHByb3BzKTtcbiAgICB0aGlzLmlmcmFtZSA9IG5ldyBfaWZyYW1lW1wiZGVmYXVsdFwiXSh7XG4gICAgICBiYXNldXJsOiB0aGlzLl9wcm9wcy5iYXNldXJsXG4gICAgfSk7XG4gICAgdGhpcy5fZXZlbnRIYW5kbGVycyA9IHt9O1xuICAgIC8qIGluIGNhc2UgdGhlc2UgbWV0aG9kcyBhcmUgY2FsbGVkIGJ5IGFuIGV2ZW50IHN1Y2ggYXMgb25DbGljaywgbmVlZCB0byByZW1haW4gJ3RoaXMnIGNvbnRleHQgKi9cblxuICAgIHZhciBmbiA9IFsnc3NvJywgJ3NpZ25pbkxvY2FsbHknLCAnc2lnbnVwJywgJ3NpZ25pbicsICdzaWdub3V0JywgJ3NpZ25vdXRMb2NhbGx5J107XG4gICAgZm4uZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kKSB7XG4gICAgICByZXR1cm4gX3RoaXNbbWV0aG9kXSA9IF90aGlzW21ldGhvZF0uYmluZChfdGhpcyk7XG4gICAgfSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQWNjb3VudENsaWVudCwgW3tcbiAgICBrZXk6IFwiZ2V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldChwcm9wKSB7XG4gICAgICByZXR1cm4gdGhpcy5fcHJvcHNbcHJvcF07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXQocHJvcHMpIHtcbiAgICAgIGlmICgoMCwgX3V0aWwuaXNOb3RPYmplY3QpKHByb3BzKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlcXVpcmUgcHJvcHMgdG8gYmUgYW4gT2JqZWN0Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIHAgaW4gcHJvcHMpIHtcbiAgICAgICAgdGhpcy5fcHJvcHNbcF0gPSBwcm9wc1twXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInZhbGlkYXRlUHJvcHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsaWRhdGVQcm9wcyhwcm9wcykge1xuICAgICAgaWYgKCFwcm9wcy5iYXNldXJsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignbWlzc2luZyBwcm9wOiBiYXNldXJsJyk7XG4gICAgICB9XG5cbiAgICAgIGlmICghcHJvcHMuYXBwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignbWlzc2luZyBwcm9wOiBhcHAnKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFwcm9wcy5zZXNzaW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignbWlzc2luZyBwcm9wOiBzZXNzaW9uJyk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImluaXRQcm9wc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0UHJvcHMocHJvcHMpIHtcbiAgICAgIHRoaXMuX3Byb3BzID0ge307XG4gICAgICB0aGlzLnNldChwcm9wcyk7XG4gICAgICB0aGlzLnNldERlZmF1bFByb3BzKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldERlZmF1bFByb3BzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldERlZmF1bFByb3BzKCkge1xuICAgICAgaWYgKCF0aGlzLl9wcm9wcy50aW1lb3V0KSB7XG4gICAgICAgIHRoaXMuX3Byb3BzLnRpbWVvdXQgPSA1MDAwMDtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLl9wcm9wcy5jb29raWUpIHtcbiAgICAgICAgdGhpcy5fcHJvcHMuY29va2llID0gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImVtaXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZW1pdChldmVudCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9ldmVudEhhbmRsZXJzW2V2ZW50XSkge1xuICAgICAgICB0aGlzLl9ldmVudEhhbmRsZXJzW2V2ZW50XS5mb3JFYWNoKGZ1bmN0aW9uIChmbikge1xuICAgICAgICAgIHJldHVybiBmbi5jYWxsLmFwcGx5KGZuLCBbX3RoaXMyXS5jb25jYXQoYXJncykpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uKGV2ZW50LCBjYWxsYmFjaykge1xuICAgICAgaWYgKCF0aGlzLl9ldmVudEhhbmRsZXJzW2V2ZW50XSkge1xuICAgICAgICB0aGlzLl9ldmVudEhhbmRsZXJzW2V2ZW50XSA9IFtdO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9ldmVudEhhbmRsZXJzW2V2ZW50XS5wdXNoKGNhbGxiYWNrKTtcblxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNzb1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzc28oX2RvbmUpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBfdGhpczMuZW1pdCgnYXV0aGVudGljYXRpbmcnKTtcblxuICAgICAgICBfdGhpczMuX3NldFRpbWVvdXQoX2RvbmUsIHJlamVjdCk7XG5cbiAgICAgICAgX3RoaXMzLmlmcmFtZS5vcGVuKHtcbiAgICAgICAgICBwYXRoOiAnL3Nlc3Npb24nLFxuICAgICAgICAgIHF1ZXJ5OiB7XG4gICAgICAgICAgICBhcHA6IF90aGlzMy5nZXQoJ2FwcCcpXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbkxvYWRlZDogZnVuY3Rpb24gb25Mb2FkZWQoKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMzLl9jbGVhclRpbWVvdXQoKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRvbmU6IGZ1bmN0aW9uIGRvbmUoZGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5vblNTT0Zvcm1SZXNvbHZlZChkYXRhLCBfZG9uZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9uU1NPRm9ybVJlc29sdmVkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uU1NPRm9ybVJlc29sdmVkKGRhdGEsIGRvbmUsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgaWYgKGRhdGEgJiYgZGF0YS5zdGF0dXMgPT0gMjAwKSB7XG4gICAgICAgIHRoaXMucHJvY2Vzc1NpZ25lZEluKGRhdGEsIGRvbmUsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9IGVsc2UgaWYgKGRhdGEgJiYgZGF0YS5zdGF0dXMgPT0gNDA0KSB7XG4gICAgICAgIC8vIHByb2Nlc3Mgc2lnbm91dCwgc2Vzc2lvbiBzaG91bGQgYmUgbnVsbFxuICAgICAgICB0aGlzLnByb2Nlc3NTaWduaW5nb3V0KGRvbmUsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBzc28gcmVxdWlyZWQgZGF0YSB0byBiZSByZXR1cm5lZCBlaXRoZXIgMjAwIG9yIDQwNFxuICAgICAgICAvLyBpZiByZWFjaCBoZXJlLCBtZWFuIHdyb25nIGluIGFjY291bnQtc2VydmVyIGNvbmZpZ3VyYXRpb24gZm9yIHNzb1xuICAgICAgICBkb25lICYmIGRvbmUoJyMgRXJyb3IgaW4gU1NPOiBzb21ldGhpbmcgd3JvbmcgaW4gYWNjb3VudC1zZXJ2ZXIgY29uZmlndXJhdGlvbicpO1xuICAgICAgICByZWplY3QoJyMgRXJyb3IgaW4gU1NPOiBzb21ldGhpbmcgd3JvbmcgaW4gYWNjb3VudC1zZXJ2ZXIgY29uZmlndXJhdGlvbicpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzaWdudXBcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2lnbnVwKF9kb25lMikge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIF90aGlzNC5fc2V0VGltZW91dChfZG9uZTIsIHJlamVjdCk7XG5cbiAgICAgICAgX3RoaXM0LmlmcmFtZS5vcGVuKHtcbiAgICAgICAgICBwYXRoOiAnL2Zvcm0nLFxuICAgICAgICAgIHF1ZXJ5OiB7XG4gICAgICAgICAgICBuYW1lOiAnc2lnbnVwJyxcbiAgICAgICAgICAgIGFwcDogX3RoaXM0LmdldCgnYXBwJylcbiAgICAgICAgICB9LFxuICAgICAgICAgIHByb3BzOiB7XG4gICAgICAgICAgICBkaXNwbGF5OiAnYmxvY2snXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvbkxvYWRlZDogZnVuY3Rpb24gb25Mb2FkZWQoKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXM0Ll9jbGVhclRpbWVvdXQoKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRvbmU6IGZ1bmN0aW9uIGRvbmUoZGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzNC5vbkF1dGhlbkZvcm1SZXNvbHZlZChkYXRhLCBfZG9uZTIsIHJlc29sdmUsIHJlamVjdCwgJ1NJR04tVVAnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNpZ25pblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzaWduaW4oX2RvbmUzKSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgX3RoaXM1Ll9zZXRUaW1lb3V0KF9kb25lMywgcmVqZWN0KTtcblxuICAgICAgICBfdGhpczUuaWZyYW1lLm9wZW4oe1xuICAgICAgICAgIHBhdGg6ICcvZm9ybScsXG4gICAgICAgICAgcXVlcnk6IHtcbiAgICAgICAgICAgIG5hbWU6ICdzaWduaW4nLFxuICAgICAgICAgICAgYXBwOiBfdGhpczUuZ2V0KCdhcHAnKSxcbiAgICAgICAgICAgIGhlaWdodDogNDE1XG4gICAgICAgICAgfSxcbiAgICAgICAgICBwcm9wczoge1xuICAgICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgb25Mb2FkZWQ6IGZ1bmN0aW9uIG9uTG9hZGVkKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzNS5fY2xlYXJUaW1lb3V0KCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBkb25lOiBmdW5jdGlvbiBkb25lKGRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczUub25BdXRoZW5Gb3JtUmVzb2x2ZWQoZGF0YSwgX2RvbmUzLCByZXNvbHZlLCByZWplY3QsICdTSUdOLUlOJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJwcm9jZXNzU2lnbmVkSW5cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvY2Vzc1NpZ25lZEluKGRhdGEsIGRvbmUsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIF90aGlzNiA9IHRoaXM7XG5cbiAgICAgIHRoaXMuc2V0TG9jYWxTZXNzaW9uKGRhdGEuc2Vzc2lvbikudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzNi5lbWl0KCdhdXRoZW50aWNhdGVkJywgZGF0YS5zZXNzaW9uLnVzZXIpO1xuXG4gICAgICAgIGRvbmUgJiYgZG9uZShudWxsLCBkYXRhLnNlc3Npb24udXNlcik7XG4gICAgICAgIHJlc29sdmUoZGF0YS5zZXNzaW9uLnVzZXIpO1xuICAgICAgfSlbXCJjYXRjaFwiXShmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIHJldHVybiByZWplY3QoZXJyKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJvbkF1dGhlbkZvcm1SZXNvbHZlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbkF1dGhlbkZvcm1SZXNvbHZlZChkYXRhLCBkb25lLCByZXNvbHZlLCByZWplY3QsIHByb2Nlc3NOYW1lKSB7XG4gICAgICBpZiAoZGF0YSAmJiBkYXRhLnN0YXR1cyA9PSAyMDApIHtcbiAgICAgICAgdGhpcy5wcm9jZXNzU2lnbmVkSW4oZGF0YSwgZG9uZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH0gZWxzZSBpZiAoZGF0YSAmJiBkYXRhLmNvZGUgPT09ICdpZnJhbWUuY2xvc2UnKSB7XG4gICAgICAgIGRvbmUgJiYgZG9uZShudWxsLCBmYWxzZSk7XG4gICAgICAgIHJlamVjdChmYWxzZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBpZiByZWFjaCBoZXJlLCBtZWFuIHdyb25nIGluIGFjY291bnQtc2VydmVyIGNvbmZpZ3VyYXRpb24gZm9yIHNpZ24taW5cbiAgICAgICAgZG9uZSAmJiBkb25lKFwiIyBFcnJvciBpbiBcIi5jb25jYXQocHJvY2Vzc05hbWUsIFwiOiBzb21ldGhpbmcgd3JvbmcgaW4gYWNjb3VudC1zZXJ2ZXIgY29uZmlndXJhdGlvblwiKSk7XG4gICAgICAgIHJlamVjdChcIiMgRXJyb3IgaW4gXCIuY29uY2F0KHByb2Nlc3NOYW1lLCBcIjogc29tZXRoaW5nIHdyb25nIGluIGFjY291bnQtc2VydmVyIGNvbmZpZ3VyYXRpb25cIikpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzaWdub3V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNpZ25vdXQoX2RvbmU0KSB7XG4gICAgICB2YXIgX3RoaXM3ID0gdGhpcztcblxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgX3RoaXM3Ll9zZXRUaW1lb3V0KF9kb25lNCwgcmVqZWN0KTtcblxuICAgICAgICBfdGhpczcuaWZyYW1lLm9wZW4oe1xuICAgICAgICAgIHBhdGg6ICcvZm9ybScsXG4gICAgICAgICAgcXVlcnk6IHtcbiAgICAgICAgICAgIG5hbWU6ICdzaWdub3V0JyxcbiAgICAgICAgICAgIGFwcDogX3RoaXM3LmdldCgnYXBwJyksXG4gICAgICAgICAgICBzaWQ6IF90aGlzNy5nZXRMb2NhbFNlc3Npb24oKS5zaWRcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uTG9hZGVkOiBmdW5jdGlvbiBvbkxvYWRlZCgpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczcuX2NsZWFyVGltZW91dCgpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZG9uZTogZnVuY3Rpb24gZG9uZShkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXM3Lm9uU2lnbm91dEZvcm1SZXNvbHZlZChkYXRhLCBfZG9uZTQsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJvblNpZ25vdXRGb3JtUmVzb2x2ZWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb25TaWdub3V0Rm9ybVJlc29sdmVkKGRhdGEsIGRvbmUsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgaWYgKGRhdGEgJiYgZGF0YS5zdGF0dXMgPT0gMjAwKSB7XG4gICAgICAgIHRoaXMucHJvY2Vzc1NpZ25pbmdvdXQoZG9uZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGlmIHJlYWNoIGhlcmUsIG1lYW4gd3JvbmcgaW4gYWNjb3VudC1zZXJ2ZXIgY29uZmlndXJhdGlvbiBmb3Igc2lnbm91dFxuICAgICAgICBkb25lICYmIGRvbmUoXCIjIEVycm9yIGluIFNJR04tT1VUOiByZWNlaXZlZCBcIi5jb25jYXQoZGF0YSAmJiBkYXRhLnN0YXR1cykpO1xuICAgICAgICByZWplY3QoXCIjIEVycm9yIGluIFNJR04tT1VUOiByZWNlaXZlZCBcIi5jb25jYXQoZGF0YSAmJiBkYXRhLnN0YXR1cykpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzaWdub3V0TG9jYWxseVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzaWdub3V0TG9jYWxseShkb25lKSB7XG4gICAgICB2YXIgX3RoaXM4ID0gdGhpcztcblxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzOC5wcm9jZXNzU2lnbmluZ291dChkb25lLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInByb2Nlc3NTaWduaW5nb3V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHByb2Nlc3NTaWduaW5nb3V0KGRvbmUsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIF90aGlzOSA9IHRoaXM7XG5cbiAgICAgIHRoaXMuY2xlYXJMb2NhbFNlc3Npb24oKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXM5LmVtaXQoJ3VuYXV0aGVudGljYXRlZCcpO1xuXG4gICAgICAgIGRvbmUgJiYgZG9uZShudWxsLCB1bmRlZmluZWQpO1xuICAgICAgICByZXNvbHZlKHVuZGVmaW5lZCk7XG4gICAgICB9KVtcImNhdGNoXCJdKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgZG9uZSAmJiBkb25lKGVycik7XG4gICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNpZ25pbkxvY2FsbHlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2lnbmluTG9jYWxseShkb25lKSB7XG4gICAgICB2YXIgX3RoaXMxMCA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgU3RvcmFnZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIC8vIFNvcnJ5ISBObyBXZWIgU3RvcmFnZSBzdXBwb3J0Li5cbiAgICAgICAgICBkb25lICYmIGRvbmUoXCJObyBXZWIgU3RvcmFnZSBzdXBwb3J0XCIpO1xuICAgICAgICAgIHJlamVjdChcIk5vIFdlYiBTdG9yYWdlIHN1cHBvcnRcIik7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc2Vzc2lvbiA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oX3RoaXMxMC5nZXQoJ3Nlc3Npb24nKSkpO1xuXG4gICAgICAgIGlmIChzZXNzaW9uICYmIHNlc3Npb24udXNlciAmJiBzZXNzaW9uLnRva2VuKSB7XG4gICAgICAgICAgX3RoaXMxMC5wcm9jZXNzU2lnbmVkSW4oe1xuICAgICAgICAgICAgc2Vzc2lvbjogc2Vzc2lvblxuICAgICAgICAgIH0sIGRvbmUsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgX3RoaXMxMC5lbWl0KCd1bmF1dGhlbnRpY2F0ZWQnKTtcblxuICAgICAgICAgIGRvbmUgJiYgZG9uZSg0MDQsIHVuZGVmaW5lZCk7XG4gICAgICAgICAgcmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY2xlYXJMb2NhbFNlc3Npb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xlYXJMb2NhbFNlc3Npb24oKSB7XG4gICAgICB2YXIgX3RoaXMxMSA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIF90aGlzMTEuc2V0KHtcbiAgICAgICAgICB1c2VyOiB1bmRlZmluZWQsXG4gICAgICAgICAgdG9rZW46IHVuZGVmaW5lZFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAodHlwZW9mIFN0b3JhZ2UgPT09IFwidW5kZWZpbmVkXCIpIHJlamVjdChcIk5vIFdlYiBTdG9yYWdlIHN1cHBvcnRcIik7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKF90aGlzMTEuZ2V0KCdzZXNzaW9uJykpO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2V0TG9jYWxTZXNzaW9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNldExvY2FsU2Vzc2lvbihzZXNzaW9uKSB7XG4gICAgICB2YXIgX3RoaXMxMiA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIF90aGlzMTIuc2V0KF9vYmplY3RTcHJlYWQoe30sIHNlc3Npb24pKTsgLy8ge3VzZXIsIHRva2VufVxuXG5cbiAgICAgICAgaWYgKHR5cGVvZiBTdG9yYWdlID09PSBcInVuZGVmaW5lZFwiKSByZWplY3QoXCJObyBXZWIgU3RvcmFnZSBzdXBwb3J0XCIpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShfdGhpczEyLmdldCgnc2Vzc2lvbicpLCBKU09OLnN0cmluZ2lmeShzZXNzaW9uKSk7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRMb2NhbFNlc3Npb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TG9jYWxTZXNzaW9uKCkge1xuICAgICAgaWYgKHR5cGVvZiBTdG9yYWdlID09PSBcInVuZGVmaW5lZFwiKSB0aHJvdyBFcnJvcihcIk5vIFdlYiBTdG9yYWdlIHN1cHBvcnRcIik7XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmdldCgnc2Vzc2lvbicpKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9zZXRUaW1lb3V0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9zZXRUaW1lb3V0KGRvbmUsIHJlamVjdCkge1xuICAgICAgdmFyIF90aGlzMTMgPSB0aGlzO1xuXG4gICAgICB2YXIgdGltZW91dCA9IHRoaXMuZ2V0KCd0aW1lb3V0JykgfHwgdGhpcy5nZXQoJ3RpbWVvdXQnKTtcbiAgICAgIHRoaXMuX3RvID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMTMuaWZyYW1lLmNsb3NlKCk7XG5cbiAgICAgICAgZG9uZSAmJiBkb25lKCc1MDMgUmVxdWVzdCBUaW1lb3V0LiBObyByZXNwb25zZSBmcm9tIHRoZSBzZXJ2ZXInLCBudWxsKTtcbiAgICAgICAgcmVqZWN0ICYmIHJlamVjdCgnNTAzIFJlcXVlc3QgVGltZW91dC4gTm8gcmVzcG9uc2UgZnJvbSB0aGUgc2VydmVyJyk7XG4gICAgICB9LCB0aW1lb3V0KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX2NsZWFyVGltZW91dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfY2xlYXJUaW1lb3V0KCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX3RvKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQWNjb3VudENsaWVudDtcbn0oKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBBY2NvdW50Q2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNjb3VudC5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gdm9pZCAwO1xuXG52YXIgX3V0aWwgPSByZXF1aXJlKFwiLi91dGlsXCIpO1xuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7IGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxudmFyIElmcmFtZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIElmcmFtZShwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJZnJhbWUpO1xuXG4gICAgaWYgKCEocHJvcHMgJiYgcHJvcHMuYmFzZXVybCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSWZyYW1lIGluc3RhbmNlIHJlcXVpcmVzIGJhc2V1cmwhJyk7XG4gICAgfVxuXG4gICAgdmFyIGJhc2V1cmwgPSBwcm9wcy5iYXNldXJsO1xuICAgIHRoaXMuYmFzZXVybCA9IGJhc2V1cmwucmVwbGFjZSgvXFwvKyQvLCAnJyk7XG4gICAgdGhpcy5fbGF6eUZuID0gW107XG4gICAgdGhpcy5fZG9uZSA9IG51bGw7XG4gICAgdGhpcy5fb25JZnJhbWVMb2FkZWQgPSBudWxsO1xuICAgIHRoaXMuX2lmcmFtZUNsb3NlZCA9IHRydWU7XG4gICAgdGhpcy5faWZyYW1lID0gbnVsbDtcbiAgICB0aGlzLm1lc3NhZ2VIYW5kbGVyID0ge1xuICAgICAgJ2lmcmFtZS5sb2FkZWQnOiB0aGlzLmhhbmRsZUlmcmFtZU1lc3NhZ2UoJ0xvYWRlZCcpLFxuICAgICAgJ2lmcmFtZS5jbG9zZSc6IHRoaXMuaGFuZGxlSWZyYW1lTWVzc2FnZSgnQ2xvc2UnKSxcbiAgICAgICdpZnJhbWUuZG9uZSc6IHRoaXMuaGFuZGxlSWZyYW1lTWVzc2FnZSgnRG9uZScpXG4gICAgfTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCB0aGlzLnByb2Nlc3NBZnRlckRvbVJlYWR5LmJpbmQodGhpcyksIGZhbHNlKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgdGhpcy5wcm9jZXNzSWZyYW1lTWVzc2FnZS5iaW5kKHRoaXMpLCBmYWxzZSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoSWZyYW1lLCBbe1xuICAgIGtleTogXCJwcm9jZXNzQWZ0ZXJEb21SZWFkeVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwcm9jZXNzQWZ0ZXJEb21SZWFkeSgpIHtcbiAgICAgIHRoaXMuX2xhenlGbi5mb3JFYWNoKGZ1bmN0aW9uIChmKSB7XG4gICAgICAgIHJldHVybiBmLmZuLmFwcGx5KGYsIF90b0NvbnN1bWFibGVBcnJheShmLmFyZ3MpKTtcbiAgICAgIH0pO1xuXG4gICAgICB0aGlzLl9sYXp5Rm4gPSBbXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicHJvY2Vzc0lmcmFtZU1lc3NhZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJvY2Vzc0lmcmFtZU1lc3NhZ2UoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC5vcmlnaW4gIT09IHRoaXMuYmFzZXVybCkgcmV0dXJuO1xuICAgICAgdmFyIGRhdGEgPSBldmVudC5kYXRhO1xuICAgICAgdGhpcy5tZXNzYWdlSGFuZGxlcltkYXRhLmNvZGVdKGRhdGEpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYW5kbGVJZnJhbWVNZXNzYWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUlmcmFtZU1lc3NhZ2UobWVzc2FnZSkge1xuICAgICAgcmV0dXJuIHRoaXNbXCJoYW5kbGVNZXNzYWdlSWZyYW1lXCIuY29uY2F0KG1lc3NhZ2UpXS5iaW5kKHRoaXMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYW5kbGVNZXNzYWdlSWZyYW1lTG9hZGVkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZU1lc3NhZ2VJZnJhbWVMb2FkZWQoZGF0YSkge1xuICAgICAgaWYgKCF0aGlzLl9pZnJhbWUpIHJldHVybjtcbiAgICAgIHRoaXMuX2lmcmFtZS5zdHlsZVsnaGVpZ2h0J10gPSBkYXRhLmhlaWdodCArICdweCc7XG4gICAgICB0aGlzLl9pZnJhbWUuc3R5bGVbJ3dpZHRoJ10gPSAnOTUlJztcbiAgICAgIHRoaXMuX2lmcmFtZS5zdHlsZVsnbWF4LXdpZHRoJ10gPSBkYXRhLndpZHRoICsgJ3B4JztcbiAgICAgIHRoaXMuX29uSWZyYW1lTG9hZGVkICYmIHRoaXMuX29uSWZyYW1lTG9hZGVkKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhbmRsZU1lc3NhZ2VJZnJhbWVDbG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVNZXNzYWdlSWZyYW1lQ2xvc2UoZGF0YSkge1xuICAgICAgdGhpcy5fY2xvc2VJZnJhbWUoKTtcblxuICAgICAgdGhpcy5fZG9uZSAmJiB0aGlzLl9kb25lKGRhdGEpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYW5kbGVNZXNzYWdlSWZyYW1lRG9uZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVNZXNzYWdlSWZyYW1lRG9uZShkYXRhKSB7XG4gICAgICB0aGlzLl9jbG9zZUlmcmFtZSgpO1xuXG4gICAgICB0aGlzLl9kb25lICYmIHRoaXMuX2RvbmUoZGF0YSk7IC8vIGV4ZWN1dGUgb3RoZXIgaWZyYW1lLm9wZW4gaW4gcXVldWUgaWYgYW55XG5cbiAgICAgIGlmICh0aGlzLl9sYXp5Rm4ubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgZiA9IHRoaXMuX2xhenlGbi5wb3AoKTtcblxuICAgICAgICBmLmZuLmFwcGx5KGYsIF90b0NvbnN1bWFibGVBcnJheShmLmFyZ3MpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwib3BlblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvcGVuKF9yZWYpIHtcbiAgICAgIHZhciBwYXRoID0gX3JlZi5wYXRoLFxuICAgICAgICAgIHF1ZXJ5ID0gX3JlZi5xdWVyeSxcbiAgICAgICAgICBwcm9wcyA9IF9yZWYucHJvcHMsXG4gICAgICAgICAgb25Mb2FkZWQgPSBfcmVmLm9uTG9hZGVkLFxuICAgICAgICAgIGRvbmUgPSBfcmVmLmRvbmU7XG5cbiAgICAgIHRoaXMuX2xhenlFeGVjdXRlKGZ1bmN0aW9uIChfcmVmMikge1xuICAgICAgICB2YXIgcGF0aCA9IF9yZWYyLnBhdGgsXG4gICAgICAgICAgICBxdWVyeSA9IF9yZWYyLnF1ZXJ5LFxuICAgICAgICAgICAgcHJvcHMgPSBfcmVmMi5wcm9wcyxcbiAgICAgICAgICAgIGRvbmUgPSBfcmVmMi5kb25lO1xuXG4gICAgICAgIHZhciB1cmwgPSB0aGlzLl9jb25zdHJ1Y3RVUkwocGF0aCwgcXVlcnkpOyAvL2NvbnNvbGUubG9nKGBHRVQgJHt1cmx9IEhUVFAgLyAxLjFgKVxuXG5cbiAgICAgICAgdGhpcy5fb3BlbklmcmFtZSh1cmwsIHByb3BzKTtcblxuICAgICAgICB0aGlzLl9vbklmcmFtZUxvYWRlZCA9IG9uTG9hZGVkO1xuICAgICAgICB0aGlzLl9kb25lID0gZG9uZTtcbiAgICAgIH0sIHtcbiAgICAgICAgcGF0aDogcGF0aCxcbiAgICAgICAgcXVlcnk6IHF1ZXJ5LFxuICAgICAgICBwcm9wczogcHJvcHMsXG4gICAgICAgIGRvbmU6IGRvbmVcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjbG9zZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjbG9zZSgpIHtcbiAgICAgIHRoaXMuX2Nsb3NlSWZyYW1lKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9vcGVuSWZyYW1lXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9vcGVuSWZyYW1lKHVybCwgcHJvcHMpIHtcbiAgICAgIHRoaXMuX2lmcmFtZUNsb3NlZCA9IGZhbHNlO1xuICAgICAgLyogY3JlYXRlIHJvb3QgY29udGFpbmVyIGlmIG5vdCBjcmVhdGVkICovXG5cbiAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIl9fXCIuY29uY2F0KHRoaXMuYmFzZXVybCwgXCJfX2NvbnRhaW5lcl9fXCIpKTtcblxuICAgICAgaWYgKCFkaXYpIHtcbiAgICAgICAgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGRpdi5zZXRBdHRyaWJ1dGUoJ2lkJywgXCJfX1wiLmNvbmNhdCh0aGlzLmJhc2V1cmwsIFwiX19jb250YWluZXJfX1wiKSk7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF0uYXBwZW5kQ2hpbGQoZGl2KTtcbiAgICAgIH1cbiAgICAgIC8qIGNyZWF0ZSBpZnJhbWUgKi9cblxuXG4gICAgICB2YXIgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgICBpZnJhbWUuc3JjID0gdXJsO1xuICAgICAgaWZyYW1lLnNldEF0dHJpYnV0ZSgnaWQnLCBcIl9fXCIuY29uY2F0KHRoaXMuYmFzZXVybCwgXCJfX2lmcmFtZV9fXCIpKTtcblxuICAgICAgaWYgKHByb3BzKSB7XG4gICAgICAgIGZvciAodmFyIGF0dHIgaW4gcHJvcHMpIHtcbiAgICAgICAgICBpZiAoYXR0ciA9PT0gJ2Rpc3BsYXknKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZnJhbWUuc3R5bGVbYXR0cl0gPSBwcm9wc1thdHRyXTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9IHByb3BzICYmIHByb3BzLmRpc3BsYXkgPyBwcm9wcy5kaXNwbGF5IDogJ25vbmUnO1xuICAgICAgaWZyYW1lLnN0eWxlLmJvcmRlciA9ICdub25lJztcbiAgICAgIGlmcmFtZS5zdHlsZS5tYXJnaW4gPSAnNDVweCBhdXRvJztcbiAgICAgIGlmcmFtZS5zdHlsZS53aWR0aCA9IDA7XG4gICAgICBpZnJhbWUuc3R5bGUuaGVpZ2h0ID0gMDtcbiAgICAgIC8qIGNyZWF0ZSB3cmFwcGVyIGZvciBpZnJhbWUgKi9cblxuICAgICAgdmFyIHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHdyYXBwZXIuc3R5bGUucG9zaXRpb24gPSAnZml4ZWQnO1xuICAgICAgd3JhcHBlci5zdHlsZS53aWR0aCA9ICcxMDAlJztcbiAgICAgIHdyYXBwZXIuc3R5bGUuaGVpZ2h0ID0gJzEwMCUnO1xuICAgICAgd3JhcHBlci5zdHlsZS50b3AgPSAwO1xuICAgICAgd3JhcHBlci5zdHlsZS56SW5kZXggPSAxO1xuXG4gICAgICBpZiAocHJvcHMgJiYgcHJvcHMuZGlzcGxheSkge1xuICAgICAgICB3cmFwcGVyLnN0eWxlWydiYWNrZ3JvdW5kLWNvbG9yJ10gPSAncmdiYSgwLDAsMCwwLjUpJztcbiAgICAgIH1cbiAgICAgIC8qIGFsbG93IGlmcmFtZSB0byBiZSBzY3JvbGxlZCAqL1xuXG5cbiAgICAgIHdyYXBwZXIuc3R5bGVbJy13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nJ10gPSAndG91Y2gnO1xuICAgICAgd3JhcHBlci5zdHlsZVsnb3ZlcmZsb3cteSddID0gJ3Njcm9sbCc7XG4gICAgICAvKiBhcHBlbmQgY2hpbGQgdG8gcGFyZW50ICovXG5cbiAgICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgICAgIGRpdi5hcHBlbmRDaGlsZCh3cmFwcGVyKTtcbiAgICAgIHRoaXMuX2lmcmFtZSA9IGlmcmFtZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX2Nsb3NlSWZyYW1lXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jbG9zZUlmcmFtZSgpIHtcbiAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIl9fXCIuY29uY2F0KHRoaXMuYmFzZXVybCwgXCJfX2NvbnRhaW5lcl9fXCIpKTtcbiAgICAgIGRpdi5pbm5lckhUTUwgPSAnJztcbiAgICAgIHRoaXMuX2lmcmFtZUNsb3NlZCA9IHRydWU7XG4gICAgICB0aGlzLl9pZnJhbWUgPSBudWxsO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfbGF6eUV4ZWN1dGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2xhenlFeGVjdXRlKGZuKSB7XG4gICAgICBmbiA9IGZuLmJpbmQodGhpcyk7XG5cbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9pc0RvbUNvbnRlbnRMb2FkZWQoKSAmJiB0aGlzLl9pZnJhbWVDbG9zZWQpIHtcbiAgICAgICAgZm4uYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2xhenlGbi5wdXNoKHtcbiAgICAgICAgICBmbjogZm4sXG4gICAgICAgICAgYXJnczogYXJnc1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX2lzRG9tQ29udGVudExvYWRlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfaXNEb21Db250ZW50TG9hZGVkKCkge1xuICAgICAgcmV0dXJuIGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIiB8fCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImxvYWRlZFwiO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfY29uc3RydWN0VVJMXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9jb25zdHJ1Y3RVUkwocGF0aCwgcXVlcnkpIHtcbiAgICAgIHBhdGggPSBwYXRoLnJlcGxhY2UoL15cXC8rfFxcLyskL2dtLCAnJykucmVwbGFjZSgvXFwvXFwvL2dtLCAnLycpO1xuXG4gICAgICBpZiAoKDAsIF91dGlsLmlzT2JqZWN0KShxdWVyeSkpIHtcbiAgICAgICAgdmFyIF9xdWVyeSA9ICc/JztcblxuICAgICAgICBmb3IgKHZhciB0IGluIHF1ZXJ5KSB7XG4gICAgICAgICAgX3F1ZXJ5ICs9IFwiXCIuY29uY2F0KHQsIFwiPVwiKS5jb25jYXQocXVlcnlbdF0sIFwiJlwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9xdWVyeSA9IF9xdWVyeS5yZXBsYWNlKC8mKyQvLCBcIlwiKTtcbiAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KHRoaXMuYmFzZXVybCwgXCIvXCIpLmNvbmNhdChwYXRoKS5jb25jYXQoX3F1ZXJ5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBcIlwiLmNvbmNhdCh0aGlzLmJhc2V1cmwsIFwiL1wiKS5jb25jYXQocGF0aCk7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIElmcmFtZTtcbn0oKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBJZnJhbWU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pZnJhbWUuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgZ2V0Q2xhc3MgPSB7fS50b1N0cmluZztcbnZhciB1dGlsID0ge307XG52YXIgdHlwZXMgPSBbJ0FyZ3VtZW50cycsICdBcnJheScsICdGdW5jdGlvbicsICdTdHJpbmcnLCAnTnVtYmVyJywgJ0RhdGUnLCAnUmVnRXhwJywgJ09iamVjdCddO1xudHlwZXMuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICB1dGlsW1wiaXNcIi5jb25jYXQobmFtZSldID0gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgZ2V0Q2xhc3MuY2FsbChvYmopID09IFwiW29iamVjdCBcIi5jb25jYXQobmFtZSwgXCJdXCIpO1xuICB9O1xuXG4gIHV0aWxbXCJpc05vdFwiLmNvbmNhdChuYW1lKV0gPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBnZXRDbGFzcy5jYWxsKG9iaikgIT0gXCJbb2JqZWN0IFwiLmNvbmNhdChuYW1lLCBcIl1cIik7XG4gIH07XG59KTtcbm1vZHVsZS5leHBvcnRzID0gX29iamVjdFNwcmVhZCh7fSwgdXRpbCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuXG52YXIgX25hdiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vbmF2XCIpKTtcblxudmFyIF9ocmVmID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ocmVmXCIpKTtcblxudmFyIF91dGlsID0gcmVxdWlyZShcIi4vdXRpbFwiKTtcblxudmFyIF9hbmltYXRpb24gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2FuaW1hdGlvblwiKSk7XG5cbnZhciBfc3R5bGUgPSByZXF1aXJlKFwiLi9zdHlsZVwiKTtcblxudmFyIF9ib2R5U2Nyb2xsID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ib2R5LXNjcm9sbFwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7IGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDsgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTsgX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCkgeyByZXR1cm4gY2FjaGU7IH07IHJldHVybiBjYWNoZTsgfVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgX3R5cGVvZihvYmopICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikgeyByZXR1cm4geyBcImRlZmF1bHRcIjogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCk7IGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkgeyByZXR1cm4gY2FjaGUuZ2V0KG9iaik7IH0gdmFyIG5ld09iaiA9IHt9OyB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqW1wiZGVmYXVsdFwiXSA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfVxuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG4pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7IGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOyB9XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5mdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxudmFyIGJvZHlTY3JvbGwgPSAoMCwgX2JvZHlTY3JvbGxbXCJkZWZhdWx0XCJdKSgpO1xudmFyIGhyZWYgPSBuZXcgX2hyZWZbXCJkZWZhdWx0XCJdKCk7XG5cbnZhciBQYWdlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhQYWdlLCBfQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFBhZ2UpO1xuXG4gIGZ1bmN0aW9uIFBhZ2UocHJvcHMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGFnZSk7XG5cbiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFBhZ2UsIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgdGhpcy5wcm9wcy5maXJlKCdsb2FkJyk7XG4gICAgICB0aGlzLnByb3BzLm9uUGFnZVJlbmRlcmVkICYmIHRoaXMucHJvcHMub25QYWdlUmVuZGVyZWQodGhpcy5wcm9wcy5yb3V0ZSk7XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLmFjdGl2ZSkge1xuICAgICAgICB0aGlzLnByb3BzLmZpcmUoJ2VudGVyJyk7XG4gICAgICAgIHRoaXMucHJvcHMub25FbnRlclBhZ2UgJiYgdGhpcy5wcm9wcy5vbkVudGVyUGFnZSh0aGlzLnByb3BzLnJvdXRlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkVXBkYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLmFjdGl2ZSAmJiAhcHJldlByb3BzLmFjdGl2ZSkge1xuICAgICAgICB0aGlzLnByb3BzLmZpcmUoJ2VudGVyJyk7XG4gICAgICAgIHRoaXMucHJvcHMub25FbnRlclBhZ2UgJiYgdGhpcy5wcm9wcy5vbkVudGVyUGFnZSh0aGlzLnByb3BzLnJvdXRlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQYWdlO1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxudmFyIFBvcHVwID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50Mikge1xuICBfaW5oZXJpdHMoUG9wdXAsIF9Db21wb25lbnQyKTtcblxuICB2YXIgX3N1cGVyMiA9IF9jcmVhdGVTdXBlcihQb3B1cCk7XG5cbiAgZnVuY3Rpb24gUG9wdXAocHJvcHMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUG9wdXApO1xuXG4gICAgcmV0dXJuIF9zdXBlcjIuY2FsbCh0aGlzLCBwcm9wcyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUG9wdXAsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL19yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJyanMtcmVhY3QtbmF2LW1vZGFsXCIsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgZGlzcGxheTogdGhpcy5wcm9wcy5zaG93ID8gJ2Jsb2NrJyA6ICdub25lJ1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUG9wdXA7XG59KF9yZWFjdC5Db21wb25lbnQpO1xuXG52YXIgVG9hc3QgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQzKSB7XG4gIF9pbmhlcml0cyhUb2FzdCwgX0NvbXBvbmVudDMpO1xuXG4gIHZhciBfc3VwZXIzID0gX2NyZWF0ZVN1cGVyKFRvYXN0KTtcblxuICBmdW5jdGlvbiBUb2FzdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVG9hc3QpO1xuXG4gICAgcmV0dXJuIF9zdXBlcjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhUb2FzdCwgW3tcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBzdHlsZSA9IHtcbiAgICAgICAgZGlzcGxheTogdGhpcy5wcm9wcy5zaG93ID8gJ2Jsb2NrJyA6ICdub25lJyxcbiAgICAgICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGxlZnQ6IDAsXG4gICAgICAgIG9wYWNpdHk6IHRoaXMucHJvcHMub3BhY2l0eSB8fCAwLjlcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLmJvdHRvbSkge1xuICAgICAgICBzdHlsZS5ib3R0b20gPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3R5bGUudG9wID0gMDtcbiAgICAgIH1cblxuICAgICAgdmFyIGFuaW0gPSB0aGlzLnByb3BzLmJvdHRvbSA/ICgwLCBfYW5pbWF0aW9uW1wiZGVmYXVsdFwiXSkoJ2Zsb2F0LWJvdHRvbScsICcwLjRzJykgOiAoMCwgX2FuaW1hdGlvbltcImRlZmF1bHRcIl0pKCdmbG9hdC10b3AnLCAnMC40cycpO1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBzdHlsZTogX29iamVjdFNwcmVhZCh7fSwgc3R5bGUsIHt9LCBhbmltKVxuICAgICAgfSwgLyojX19QVVJFX18qL19yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZSdcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcy5wcm9wcy5jaGlsZHJlbikpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBUb2FzdDtcbn0oX3JlYWN0LkNvbXBvbmVudCk7XG4vKipcclxuICogTmF2aWdhdG9yIGNvbXBvbmVudFxyXG4gKiBAZXh0ZW5kcyBDb21wb25lbnRcclxuICogKi9cblxuXG52YXIgTmF2aWdhdG9yID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50NCkge1xuICBfaW5oZXJpdHMoTmF2aWdhdG9yLCBfQ29tcG9uZW50NCk7XG5cbiAgdmFyIF9zdXBlcjQgPSBfY3JlYXRlU3VwZXIoTmF2aWdhdG9yKTtcblxuICAvKipcclxuICAgKiBOYXZpZ2F0b3IgY29tcG9uZW50IHRoYXQgcmVuZGVyIFBhZ2UgZm9yIGVhY2ggUm91dGVcclxuICAgKiBAcGFyYW0ge0FycmF5fSByb3V0ZXMgLSBPYmplY3Qgb2Ygcm91dGVzIHRoYXRhIGFyZSByZWdpc3RlcmVkXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IGluaXRpYWxSb3V0ZSAtIFRoZSBpbml0aWFsIHJvdXRlcyBvZiB0aGUgTmF2aWdhdG9yXHJcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gcm91dGVIYW5kbGVyIC0gRlVuY3Rpb24gcmV0dXJuIHJvdXRlIGhhbmRsZXJcclxuICAgKiBAcGFyYW0ge09iamVjdH0gYW5pbWF0aW9uXHJcbiAgICovXG4gIGZ1bmN0aW9uIE5hdmlnYXRvcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBOYXZpZ2F0b3IpO1xuXG4gICAgX3RoaXMgPSBfc3VwZXI0LmNhbGwodGhpcywgcHJvcHMpO1xuXG4gICAgX3RoaXMuX192YWxpZGF0ZVByb3BzKHByb3BzKTtcblxuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgcm91dGVTdGFjazogW10sXG4gICAgICBhY3RpdmVSb3V0ZU5hbWU6IF90aGlzLl9fZmluZEluaXRpYWxSb3V0ZU5hbWUoKSxcbiAgICAgIHNob3dQb3B1cDoge30sXG4gICAgICB0b2FzdHM6IHtcbiAgICAgICAgdG9wOiBbXSxcbiAgICAgICAgYm90dG9tOiBbXVxuICAgICAgfVxuICAgIH07XG4gICAgX3RoaXMuX19zdXBwb3J0ZWRQYWdlRXZlbnRzID0gWydsb2FkJywgJ2JlZm9yZUVudGVyJywgJ2VudGVyJywgJ2xlYXZlJywgJ3VubG9hZCddO1xuICAgIF90aGlzLl9fZXZlbnRzID0ge307XG4gICAgX3RoaXMuX19yZWdpc3RlcmVkUm91dGVzID0ge307XG5cbiAgICBfdGhpcy5fX3JlZ2lzdGVyUm91dGVzKF9vYmplY3RTcHJlYWQoe30sIHByb3BzLnJvdXRlcykpO1xuXG4gICAgX3RoaXMuX19wb3B1cFN0YWNrID0ge307XG4gICAgX3RoaXMuX19nbG9iYWwgPSB7XG4gICAgICBwb3B1cDogZnVuY3Rpb24gcG9wdXAoUG9wdXBDb21wb25lbnQsIG9wdGlvbnMsIGNiKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5fX2NyZWF0ZVBvcHVwKCdfX2dsb2JhbCcsIFBvcHVwQ29tcG9uZW50LCBvcHRpb25zLCBjYik7XG4gICAgICB9XG4gICAgfTsgLy8gdXBkYXRlIHVybCBtaXNzbWF0Y2ggYmV0d2VlbiByb3V0ZSBhbmQgdXJsXG5cbiAgICB2YXIgcm91dGUgPSBfdGhpcy5fX3JlZ2lzdGVyZWRSb3V0ZXNbX3RoaXMuc3RhdGUuYWN0aXZlUm91dGVOYW1lXTtcblxuICAgIGlmICghcHJvcHMubm9VcmwgJiYgcm91dGUgJiYgIWhyZWYubWF0Y2hVcmxQYXRoKHJvdXRlLnVybCkpIHtcbiAgICAgIGhyZWYucHVzaChyb3V0ZS51cmwpO1xuICAgIH1cblxuICAgIF90aGlzLm5hdiA9IHtcbiAgICAgIG5hdmlnYXRlOiBfdGhpcy5uYXZpZ2F0ZS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKVxuICAgIH07XG4gICAgcHJvcHMucm91dGVIYW5kbGVyICYmIHByb3BzLnJvdXRlSGFuZGxlcihfdGhpcy5uYXYpO1xuICAgIF90aGlzLl9fY3JlYXRlSW5qZWN0UGFnZSA9IF90aGlzLl9fY3JlYXRlSW5qZWN0UGFnZS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5fX2ZpcmUgPSBfdGhpcy5fX2ZpcmUuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMuX19jcmVhdGVQb3B1cCA9IF90aGlzLl9fY3JlYXRlUG9wdXAuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMub25Qb3BTdGF0ZSA9IF90aGlzLm9uUG9wU3RhdGUuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgX3RoaXMuaGFuZGxlQ2xpY2tPbk1vZGFsID0gX3RoaXMuaGFuZGxlQ2xpY2tPbk1vZGFsLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgICgwLCBfc3R5bGUuYXBwZW5kU3R5bGUpKCk7XG5cbiAgICBfbmF2W1wiZGVmYXVsdFwiXS5yZWdpc3RlcihfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCBfdGhpcy5vblBvcFN0YXRlKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTmF2aWdhdG9yLCBbe1xuICAgIGtleTogXCJvblBvcFN0YXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uUG9wU3RhdGUoKSB7XG4gICAgICB2YXIgdXJsID0gJy8nICsgaHJlZi5nZXRQYXRoTmFtZSgpO1xuXG4gICAgICB2YXIgcm91dGVTdGFjayA9IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnN0YXRlLnJvdXRlU3RhY2spO1xuXG4gICAgICB2YXIgaW5kZXggPSByb3V0ZVN0YWNrLmZpbmRJbmRleChmdW5jdGlvbiAocm91dGUpIHtcbiAgICAgICAgcmV0dXJuIHJvdXRlLnVybCA9PT0gdXJsO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgdmFyIHJvdXRlID0gcm91dGVTdGFjay5zbGljZShpbmRleCwgaW5kZXggKyAxKVswXTtcbiAgICAgICAgcm91dGVTdGFjay5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICByb3V0ZVN0YWNrLnVuc2hpZnQocm91dGUpO1xuXG4gICAgICAgIHRoaXMuX19maXJlKHJvdXRlU3RhY2tbMV0ubmFtZSwgcm91dGVTdGFja1sxXS51aWQsICdsZWF2ZScpO1xuXG4gICAgICAgIHRoaXMuX19maXJlKHJvdXRlU3RhY2tbMF0ubmFtZSwgcm91dGVTdGFja1swXS51aWQsICdiZWZvcmVFbnRlcicpO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHJvdXRlU3RhY2s6IHJvdXRlU3RhY2tcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHRoaXMuX19pbml0Um91dGVTdGFjaygpLnRoZW4oZnVuY3Rpb24gKHJvdXRlU3RhY2spIHtcbiAgICAgICAgdmFyIGFjdGl2ZVJvdXRlTmFtZSA9IHJvdXRlU3RhY2tbMF0ubmFtZTtcbiAgICAgICAgdmFyIHRpdGxlID0gKDAsIF91dGlsLm1ha2VUaXRsZSkoX3RoaXMyLl9fcmVnaXN0ZXJlZFJvdXRlc1thY3RpdmVSb3V0ZU5hbWVdLnRpdGxlLCByb3V0ZVN0YWNrWzBdLnBhcmFtcywgcm91dGVTdGFja1swXS5kYXRhKTtcblxuICAgICAgICBpZiAodGl0bGUpIHtcbiAgICAgICAgICBkb2N1bWVudC50aXRsZSA9IHRpdGxlO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICByb3V0ZVN0YWNrOiByb3V0ZVN0YWNrLFxuICAgICAgICAgIGFjdGl2ZVJvdXRlTmFtZTogYWN0aXZlUm91dGVOYW1lXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNvbXBvbmVudFdpbGxVbm1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgX25hdltcImRlZmF1bHRcIl0uZGVzdHJveSgpO1xuXG4gICAgICB0aGlzLnByb3BzLnJvdXRlSGFuZGxlciAmJiB0aGlzLnByb3BzLnJvdXRlSGFuZGxlcihudWxsKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsIHRoaXMub25Qb3BTdGF0ZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgdGhpcy5zdGF0ZS5yb3V0ZVN0YWNrLm1hcChmdW5jdGlvbiAocm91dGUsIGluZGV4KSB7XG4gICAgICAgIHZhciBuYW1lID0gcm91dGUubmFtZSxcbiAgICAgICAgICAgIHVybCA9IHJvdXRlLnVybCxcbiAgICAgICAgICAgIHBhZ2UgPSByb3V0ZS5wYWdlLFxuICAgICAgICAgICAgZGF0YSA9IHJvdXRlLmRhdGEsXG4gICAgICAgICAgICBwYXJhbXMgPSByb3V0ZS5wYXJhbXMsXG4gICAgICAgICAgICB1aWQgPSByb3V0ZS51aWQ7XG4gICAgICAgIHZhciBkaXNwbGF5ID0gaW5kZXggPT09IDAgPyAnYmxvY2snIDogJ25vbmUnO1xuICAgICAgICB2YXIgcGFzc2luZ1JvdXRlT2JqID0ge1xuICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgcGFyYW1zOiBwYXJhbXMsXG4gICAgICAgICAgaXNBY3RpdmU6IGluZGV4ID09PSAwXG4gICAgICAgIH07XG4gICAgICAgIHZhciBQYWdlQ29tcG9uZW50ID0gX3RoaXMzLl9fcmVnaXN0ZXJlZFJvdXRlc1tuYW1lXS5QYWdlO1xuICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL19yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAga2V5OiB1aWQsXG4gICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGRpc3BsYXlcbiAgICAgICAgICB9XG4gICAgICAgIH0sIC8qI19fUFVSRV9fKi9fcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoUGFnZSwge1xuICAgICAgICAgIGZpcmU6IGZ1bmN0aW9uIGZpcmUoZSkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5fX2ZpcmUobmFtZSwgdWlkLCBlKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGFjdGl2ZTogaW5kZXggPT09IDAsXG4gICAgICAgICAgb25QYWdlUmVuZGVyZWQ6IF90aGlzMy5wcm9wcy5vblBhZ2VSZW5kZXJlZCxcbiAgICAgICAgICBvbkVudGVyUGFnZTogX3RoaXMzLnByb3BzLm9uRW50ZXJQYWdlLFxuICAgICAgICAgIHJvdXRlOiBwYXNzaW5nUm91dGVPYmpcbiAgICAgICAgfSwgX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFBhZ2VDb21wb25lbnQsIF9vYmplY3RTcHJlYWQoe1xuICAgICAgICAgIHJvdXRlOiBwYXNzaW5nUm91dGVPYmosXG4gICAgICAgICAgbmF2OiBfdGhpczMubmF2LFxuICAgICAgICAgIHBhZ2U6IHBhZ2VcbiAgICAgICAgfSwgX3RoaXMzLnByb3BzKSkpLCAvKiNfX1BVUkVfXyovX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFBvcHVwLCB7XG4gICAgICAgICAgc2hvdzogX3RoaXMzLnN0YXRlLnNob3dQb3B1cFtuYW1lXVxuICAgICAgICB9LCBfdGhpczMuX19wb3B1cFN0YWNrW25hbWVdICYmIF90aGlzMy5fX3BvcHVwU3RhY2tbbmFtZV0ubWFwKGZ1bmN0aW9uIChwb3B1cCwgaW5kZXgpIHtcbiAgICAgICAgICBpZiAocG9wdXAuc2VsZi5vdmVybGF5KSB7XG4gICAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL19yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAgICAgIGtleTogaW5kZXgsXG4gICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJyanMtcmVhY3QtbmF2LW1vZGFsXCIsXG4gICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLmhhbmRsZUNsaWNrT25Nb2RhbChwb3B1cC5zZWxmKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgLyojX19QVVJFX18qL19yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBcIiBcIiwgX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KHBvcHVwLlBvcHVwLCBfb2JqZWN0U3ByZWFkKHtcbiAgICAgICAgICAgICAgc2VsZjogcG9wdXAuc2VsZlxuICAgICAgICAgICAgfSwgX3RoaXMzLnByb3BzLCB7XG4gICAgICAgICAgICAgIHBhZ2U6IHBhZ2VcbiAgICAgICAgICAgIH0pKSwgXCIgXCIpKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICAgICAgICBrZXk6IGluZGV4LFxuICAgICAgICAgICAgICBjbGFzc05hbWU6IFwicmpzLXJlYWN0LW5hdi1tb2RlbC1jb250ZW50XCJcbiAgICAgICAgICAgIH0sIF9yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChwb3B1cC5Qb3B1cCwgX29iamVjdFNwcmVhZCh7XG4gICAgICAgICAgICAgIHNlbGY6IHBvcHVwLnNlbGZcbiAgICAgICAgICAgIH0sIF90aGlzMy5wcm9wcywge1xuICAgICAgICAgICAgICBwYWdlOiBwYWdlXG4gICAgICAgICAgICB9KSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSkpKTtcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFBvcHVwLCB7XG4gICAgICAgIHNob3c6IHRoaXMuc3RhdGUuc2hvd1BvcHVwLl9fZ2xvYmFsXG4gICAgICB9LCB0aGlzLl9fcG9wdXBTdGFjay5fX2dsb2JhbCAmJiB0aGlzLl9fcG9wdXBTdGFjay5fX2dsb2JhbC5tYXAoZnVuY3Rpb24gKHBvcHVwLCBpbmRleCkge1xuICAgICAgICBpZiAocG9wdXAuc2VsZi5vdmVybGF5KSB7XG4gICAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICAgICAga2V5OiBpbmRleCxcbiAgICAgICAgICAgIGNsYXNzTmFtZTogXCJyanMtcmVhY3QtbmF2LW1vZGFsXCIsXG4gICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICBkaXNwbGF5OiAnYmxvY2snXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczMuaGFuZGxlQ2xpY2tPbk1vZGFsKHBvcHVwLnNlbGYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIC8qI19fUFVSRV9fKi9fcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljayhlKSB7XG4gICAgICAgICAgICAgIHJldHVybiBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIFwiIFwiLCBfcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQocG9wdXAuUG9wdXAsIF9vYmplY3RTcHJlYWQoe1xuICAgICAgICAgICAgc2VsZjogcG9wdXAuc2VsZlxuICAgICAgICAgIH0sIF90aGlzMy5wcm9wcywge1xuICAgICAgICAgICAgcGFnZTogX3RoaXMzLl9fZ2xvYmFsXG4gICAgICAgICAgfSkpLCBcIiBcIikpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgICAgIGtleTogaW5kZXgsXG4gICAgICAgICAgICBjbGFzc05hbWU6IFwicmpzLXJlYWN0LW5hdi1tb2RlbC1jb250ZW50XCJcbiAgICAgICAgICB9LCBfcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQocG9wdXAuUG9wdXAsIF9vYmplY3RTcHJlYWQoe1xuICAgICAgICAgICAgc2VsZjogcG9wdXAuc2VsZlxuICAgICAgICAgIH0sIF90aGlzMy5wcm9wcywge1xuICAgICAgICAgICAgcGFnZTogX3RoaXMzLl9fZ2xvYmFsXG4gICAgICAgICAgfSkpKTtcbiAgICAgICAgfVxuICAgICAgfSkpLCAvKiNfX1BVUkVfXyovX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFRvYXN0LCB7XG4gICAgICAgIHNob3c6IHRoaXMuc3RhdGUudG9hc3RzLnRvcC5sZW5ndGggPiAwLFxuICAgICAgICB0b3A6IHRydWVcbiAgICAgIH0sIHRoaXMuc3RhdGUudG9hc3RzLnRvcC5tYXAoZnVuY3Rpb24gKHRvYXN0LCBpbmRleCkge1xuICAgICAgICB2YXIgc3R5bGUgPSB0b2FzdC5hbmltYXRlQ2xvc2luZyA/ICgwLCBfYW5pbWF0aW9uW1wiZGVmYXVsdFwiXSkoJ2ZhZGUtb3V0JywgdG9hc3QuYW5pbWF0ZUNsb3NpbmcpIDoge307XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgICBrZXk6IGluZGV4LFxuICAgICAgICAgIHN0eWxlOiBzdHlsZVxuICAgICAgICB9LCBfcmVhY3RbXCJkZWZhdWx0XCJdLmNyZWF0ZUVsZW1lbnQodG9hc3QuVG9hc3QsIHtcbiAgICAgICAgICBzZWxmOiB0b2FzdC5zZWxmXG4gICAgICAgIH0pKTtcbiAgICAgIH0pKSwgLyojX19QVVJFX18qL19yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChUb2FzdCwge1xuICAgICAgICBzaG93OiB0aGlzLnN0YXRlLnRvYXN0cy5ib3R0b20ubGVuZ3RoID4gMCxcbiAgICAgICAgYm90dG9tOiB0cnVlXG4gICAgICB9LCB0aGlzLnN0YXRlLnRvYXN0cy5ib3R0b20ubWFwKGZ1bmN0aW9uICh0b2FzdCwgaW5kZXgpIHtcbiAgICAgICAgdmFyIHN0eWxlID0gdG9hc3QuYW5pbWF0ZUNsb3NpbmcgPyAoMCwgX2FuaW1hdGlvbltcImRlZmF1bHRcIl0pKCdmYWRlLW91dCcsIHRvYXN0LmFuaW1hdGVDbG9zaW5nKSA6IHt9O1xuICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL19yZWFjdFtcImRlZmF1bHRcIl0uY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAga2V5OiBpbmRleCxcbiAgICAgICAgICBjbGFzc05hbWU6IFwicmpzLXJlYWN0LW5hdi1jYXJkLTRcIixcbiAgICAgICAgICBzdHlsZTogc3R5bGVcbiAgICAgICAgfSwgX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KHRvYXN0LlRvYXN0LCB7XG4gICAgICAgICAgc2VsZjogdG9hc3Quc2VsZlxuICAgICAgICB9KSk7XG4gICAgICB9KSkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfX3ZhbGlkYXRlUHJvcHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX192YWxpZGF0ZVByb3BzKHByb3BzKSB7XG4gICAgICBpZiAocHJvcHMubm9VcmwgJiYgIXByb3BzLmluaXRpYWxSb3V0ZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvcjogVmFsaWRhdGUgcHJvcHMgZmFpbGVkOiAnaW5pdGlhbFJvdXRlJyBpcyByZXF1aXJlZCB3aGVuICdub1VybCcgc2V0IHRvIHRydWVcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9wcy5pbml0aWFsUm91dGUgJiYgIXByb3BzLnJvdXRlc1twcm9wcy5pbml0aWFsUm91dGVdKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yOiBWYWxpZGF0ZSBwcm9wcyBmYWlsZWQ6ICdpbml0aWFsUm91dGUnIGlzIG5vdCBsaXN0ZWQgaW4gJ3JvdXRlcydcIik7XG4gICAgICB9XG5cbiAgICAgIGlmICghcHJvcHMubm9VcmwgJiYgIXByb3BzLmZhbGxiYWNrUm91dGUpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiV2FybmluZzogVmFsaWRhdGUgcHJvcHM6IE1pc3NpbmcgJ2ZhbGxiYWNrUm91dGUnIVwiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHByb3BzLmZhbGxiYWNrUm91dGUgJiYgIXByb3BzLnJvdXRlc1twcm9wcy5mYWxsYmFja1JvdXRlXSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvcjogVmFsaWRhdGUgcHJvcHMgZmFpbGVkOiAnZmFsbGJhY2tSb3V0ZScgaXMgbm90IGxpc3RlZCBpbiAncm91dGVzJ1wiKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX192YWxpZGF0ZVJvdXRlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX3ZhbGlkYXRlUm91dGVzKHJvdXRlcykge1xuICAgICAgZm9yICh2YXIgbmFtZSBpbiByb3V0ZXMpIHtcbiAgICAgICAgdmFyIHJvdXRlID0gcm91dGVzW25hbWVdO1xuXG4gICAgICAgIGlmICghcm91dGUucmVkaXJlY3QgJiYgIXJvdXRlLlBhZ2UpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJvdXRlIG9iamVjdDogbWlzc2luZyAnUGFnZScgaW4gcm91dGUgJ1wiLmNvbmNhdChuYW1lLCBcIidcIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLm5vVXJsICYmICFyb3V0ZS51cmwpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHJvdXRlIG9iamVjdDogbWlzc2luZyAndXJsJyBpbiByb3V0ZSAnXCIuY29uY2F0KG5hbWUsIFwiJ1wiKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX19maW5kSW5pdGlhbFJvdXRlTmFtZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX2ZpbmRJbml0aWFsUm91dGVOYW1lKCkge1xuICAgICAgaWYgKHRoaXMucHJvcHMubm9VcmwpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMuaW5pdGlhbFJvdXRlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5fX2ZpbmRSb3V0ZU5hbWVGcm9tVVJMKCkgfHwgdGhpcy5wcm9wcy5mYWxsYmFja1JvdXRlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfX2ZpbmRSb3V0ZU5hbWVGcm9tVVJMXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9fZmluZFJvdXRlTmFtZUZyb21VUkwoKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy5ub1VybCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMucHJvcHMucm91dGVzKSB7XG4gICAgICAgIHZhciByb3V0ZSA9IHRoaXMucHJvcHMucm91dGVzW25hbWVdO1xuXG4gICAgICAgIGlmIChyb3V0ZS51cmwgJiYgaHJlZi5tYXRjaFVybFBhdGgocm91dGUudXJsKSkge1xuICAgICAgICAgIHJldHVybiByb3V0ZS5yZWRpcmVjdCB8fCBuYW1lO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9faW5pdFJvdXRlU3RhY2tcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX19pbml0Um91dGVTdGFjaygpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBfdGhpczQuX19jcmVhdGVJbml0Um91dGUoKS50aGVuKGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgICAgIHZhciByb3V0ZVN0YWNrID0gX3RoaXM0Ll9fbG9hZFJvdXRlU3RhY2tGcm9tU2Vzc2lvblN0b3JhZ2UoKS5maWx0ZXIoZnVuY3Rpb24gKF9yb3V0ZSkge1xuICAgICAgICAgICAgcmV0dXJuICEoMCwgX3V0aWwuaXNTYW1lUm91dGUpKF9yb3V0ZSwgcm91dGUubmFtZSwgcm91dGUucGFyYW1zKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHJvdXRlU3RhY2sudW5zaGlmdChyb3V0ZSk7XG4gICAgICAgICAgcmVzb2x2ZShyb3V0ZVN0YWNrKTtcbiAgICAgICAgfSlbXCJjYXRjaFwiXShmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfX2NyZWF0ZUluaXRSb3V0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX2NyZWF0ZUluaXRSb3V0ZSgpIHtcbiAgICAgIHZhciBfdGhpczUgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICB2YXIgaW5pdFJvdXRlTmFtZSA9IF90aGlzNS5fX2ZpbmRJbml0aWFsUm91dGVOYW1lKCk7XG5cbiAgICAgICAgdmFyIGluaXRSb3V0ZSA9IF90aGlzNS5wcm9wcy5yb3V0ZXNbaW5pdFJvdXRlTmFtZV07XG4gICAgICAgIHZhciBwYXJhbXMgPSBfdGhpczUucHJvcHMubm9VcmwgPyB1bmRlZmluZWQgOiBocmVmLmV4dHJhY3RVcmxQYXJhbXMoaW5pdFJvdXRlLnVybCk7XG4gICAgICAgIHZhciB1cmwgPSBocmVmLmJ1aWxkVXJsUGF0aChpbml0Um91dGUudXJsLCBwYXJhbXMpO1xuICAgICAgICB2YXIgdWlkID0gKDAsIF91dGlsLmNyZWF0ZVJvdXRlVWlkKShpbml0Um91dGVOYW1lLCBwYXJhbXMpO1xuXG4gICAgICAgIHZhciBwYWdlID0gX3RoaXM1Ll9fY3JlYXRlSW5qZWN0UGFnZShpbml0Um91dGVOYW1lLCB1aWQpO1xuXG4gICAgICAgIGlmICgoMCwgX3V0aWwuaXNGdW5jdGlvbikoaW5pdFJvdXRlLmRhdGEpKSB7XG4gICAgICAgICAgaW5pdFJvdXRlLmRhdGEoe1xuICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXMsXG4gICAgICAgICAgICBwcm9wczogX3RoaXM1LnByb3BzXG4gICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgaW5pdFJvdXRlLnJlc29sdmUgJiYgaW5pdFJvdXRlLnJlc29sdmUoZGF0YSk7XG4gICAgICAgICAgICBfdGhpczUucHJvcHMub25DaGFuZ2VSb3V0ZSAmJiBfdGhpczUucHJvcHMub25DaGFuZ2VSb3V0ZSh7XG4gICAgICAgICAgICAgIG5hbWU6IGluaXRSb3V0ZU5hbWUsXG4gICAgICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgICAgICBwYXJhbXM6IHBhcmFtcyxcbiAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgb3B0aW9uczogaW5pdFJvdXRlLm9wdGlvbnNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgICAgIG5hbWU6IGluaXRSb3V0ZU5hbWUsXG4gICAgICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgICAgICBwYWdlOiBwYWdlLFxuICAgICAgICAgICAgICBwYXJhbXM6IHBhcmFtcyxcbiAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgdWlkOiB1aWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pW1wiY2F0Y2hcIl0oZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgaW5pdFJvdXRlLnJlamVjdCAmJiBpbml0Um91dGUucmVqZWN0KHtcbiAgICAgICAgICAgICAgZXJyOiBlcnIsXG4gICAgICAgICAgICAgIG5hdjogX3RoaXM1Lm5hdlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpczUucHJvcHMub25DaGFuZ2VSb3V0ZSAmJiBfdGhpczUucHJvcHMub25DaGFuZ2VSb3V0ZSh7XG4gICAgICAgICAgICBuYW1lOiBpbml0Um91dGVOYW1lLFxuICAgICAgICAgICAgdXJsOiB1cmwsXG4gICAgICAgICAgICBwYXJhbXM6IHBhcmFtcyxcbiAgICAgICAgICAgIGRhdGE6IGluaXRSb3V0ZS5kYXRhLFxuICAgICAgICAgICAgb3B0aW9uczogaW5pdFJvdXRlLm9wdGlvbnNcbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICAgIG5hbWU6IGluaXRSb3V0ZU5hbWUsXG4gICAgICAgICAgICB1cmw6IHVybCxcbiAgICAgICAgICAgIHBhZ2U6IHBhZ2UsXG4gICAgICAgICAgICBwYXJhbXM6IHBhcmFtcyxcbiAgICAgICAgICAgIGRhdGE6IGluaXRSb3V0ZS5kYXRhLFxuICAgICAgICAgICAgdWlkOiB1aWRcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9fcmVnaXN0ZXJSb3V0ZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX19yZWdpc3RlclJvdXRlcyhyb3V0ZXMpIHtcbiAgICAgIHRoaXMuX192YWxpZGF0ZVJvdXRlcyhyb3V0ZXMpO1xuXG4gICAgICBmb3IgKHZhciBuYW1lIGluIHJvdXRlcykge1xuICAgICAgICB2YXIgcm91dGUgPSByb3V0ZXNbbmFtZV07XG4gICAgICAgIHRoaXMuX19yZWdpc3RlcmVkUm91dGVzW25hbWVdID0gcm91dGU7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX19iaW5kUGFnZUV2ZW50KHJvdXRlcyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9fY3JlYXRlSW5qZWN0UGFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX2NyZWF0ZUluamVjdFBhZ2UobmFtZSwgdWlkLCBvcHRpb25zKSB7XG4gICAgICB2YXIgX3RoaXM2ID0gdGhpcztcblxuICAgICAgdmFyIHBhZ2UgPSB7XG4gICAgICAgIG9uOiBmdW5jdGlvbiBvbihldmVudCwgaGFuZGxlcikge1xuICAgICAgICAgIGlmIChfdGhpczYuX19zdXBwb3J0ZWRQYWdlRXZlbnRzLmluZGV4T2YoZXZlbnQpICE9PSAtMSkge1xuICAgICAgICAgICAgX3RoaXM2Ll9fZXZlbnRzW25hbWVdW2V2ZW50XS5wdXNoKHtcbiAgICAgICAgICAgICAgdWlkOiB1aWQsXG4gICAgICAgICAgICAgIGhhbmRsZXI6IGhhbmRsZXJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcG9wdXA6IGZ1bmN0aW9uIHBvcHVwKFBvcHVwQ29tcG9uZW50LCBvcHRpb25zLCBjYikge1xuICAgICAgICAgIHJldHVybiBfdGhpczYuX19jcmVhdGVQb3B1cChuYW1lLCBQb3B1cENvbXBvbmVudCwgb3B0aW9ucywgY2IpO1xuICAgICAgICB9LFxuICAgICAgICBkZWxldGVBbGxQb3B1cHM6IGZ1bmN0aW9uIGRlbGV0ZUFsbFBvcHVwcygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM2Ll9fZGVsZXRlQWxsUG9wdXBzKG5hbWUpO1xuICAgICAgICB9LFxuICAgICAgICBkYXRhOiBvcHRpb25zICYmIG9wdGlvbnMuZGF0YSB8fCB1bmRlZmluZWRcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuX19zdXBwb3J0ZWRQYWdlRXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgcmV0dXJuIHBhZ2VbXCJvblwiLmNvbmNhdCgoMCwgX3V0aWwuY2FwaXRhbGl6ZSkoZSkpXSA9IGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgICAgcmV0dXJuIHBhZ2Uub24oZSwgaGFuZGxlcik7XG4gICAgICAgIH07XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIHBhZ2U7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9fYmluZFBhZ2VFdmVudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX2JpbmRQYWdlRXZlbnQocm91dGVzKSB7XG4gICAgICB2YXIgX3RoaXM3ID0gdGhpcztcblxuICAgICAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AobmFtZSkge1xuICAgICAgICBfdGhpczcuX19ldmVudHNbbmFtZV0gPSB7fTtcblxuICAgICAgICBfdGhpczcuX19zdXBwb3J0ZWRQYWdlRXZlbnRzLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM3Ll9fZXZlbnRzW25hbWVdW2VdID0gW107XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgZm9yICh2YXIgbmFtZSBpbiByb3V0ZXMpIHtcbiAgICAgICAgX2xvb3AobmFtZSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9fZmlyZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX2ZpcmUocm91dGUsIHVpZCwgZXZlbnQpIHtcbiAgICAgIGlmICh0aGlzLl9fZXZlbnRzW3JvdXRlXVtldmVudF0pIHtcbiAgICAgICAgdGhpcy5fX2V2ZW50c1tyb3V0ZV1bZXZlbnRdLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICByZXR1cm4gZS51aWQgPT09IHVpZCAmJiBlLmhhbmRsZXIoKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiZXZlbnQgXCIuY29uY2F0KGV2ZW50LCBcIiBpcyBub3Qgc3VwcG9ydGVkXCIpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibmF2aWdhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbmF2aWdhdGUobmFtZSwgb3B0aW9ucykge1xuICAgICAgdmFyIF90aGlzOCA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGlmICghX3RoaXM4Ll9fcmVnaXN0ZXJlZFJvdXRlc1tuYW1lXSkge1xuICAgICAgICAgIHJlamVjdChcIlJvdXRlIFwiLmNvbmNhdChuYW1lLCBcIiBpcyBub3QgcmVnaXN0ZXJlZCFcIikpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwYXJhbXMgPSBvcHRpb25zICYmIG9wdGlvbnMucGFyYW1zIHx8IHt9O1xuXG4gICAgICAgIGlmICgoMCwgX3V0aWwuaXNTYW1lUm91dGUpKF90aGlzOC5zdGF0ZS5yb3V0ZVN0YWNrWzBdLCBuYW1lLCBwYXJhbXMpKSB7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByb3V0ZSA9IF90aGlzOC5fX3JlZ2lzdGVyZWRSb3V0ZXNbbmFtZV07XG5cbiAgICAgICAgaWYgKCgwLCBfdXRpbC5pc0Z1bmN0aW9uKShyb3V0ZS5kYXRhKSkge1xuICAgICAgICAgIHJldHVybiByb3V0ZS5kYXRhKHtcbiAgICAgICAgICAgIHBhcmFtczogcGFyYW1zLFxuICAgICAgICAgICAgcHJvcHM6IF90aGlzOC5wcm9wc1xuICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIHJvdXRlLnJlc29sdmUgJiYgcm91dGUucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgICAgIGNoYW5nZVJvdXRlLmJpbmQoX3RoaXM4KShkYXRhKTtcbiAgICAgICAgICB9KVtcImNhdGNoXCJdKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgIHJvdXRlLnJlamVjdCAmJiByb3V0ZS5yZWplY3Qoe1xuICAgICAgICAgICAgICBlcnI6IGVycixcbiAgICAgICAgICAgICAgbmF2OiBfdGhpczgubmF2XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBjaGFuZ2VSb3V0ZS5iaW5kKF90aGlzOCkocm91dGUuZGF0YSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBjaGFuZ2VSb3V0ZShyb3V0ZURhdGEpIHtcbiAgICAgICAgICB2YXIgX3RoaXM5ID0gdGhpcztcblxuICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgICAgICAgaWYgKF90aGlzOS5fX3JlZ2lzdGVyZWRSb3V0ZXNbbmFtZV0ucmVkaXJlY3QpIHtcbiAgICAgICAgICAgICAgbmFtZSA9IF90aGlzOS5fX3JlZ2lzdGVyZWRSb3V0ZXNbbmFtZV0ucmVkaXJlY3Q7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF90aGlzOS5zdGF0ZS5yb3V0ZVN0YWNrWzBdICYmIF90aGlzOS5fX2ZpcmUoX3RoaXM5LnN0YXRlLmFjdGl2ZVJvdXRlTmFtZSwgX3RoaXM5LnN0YXRlLnJvdXRlU3RhY2tbMF0udWlkLCAnbGVhdmUnKTtcblxuICAgICAgICAgICAgdmFyIHJvdXRlU3RhY2sgPSBfdG9Db25zdW1hYmxlQXJyYXkoX3RoaXM5LnN0YXRlLnJvdXRlU3RhY2spLmZpbHRlcihmdW5jdGlvbiAocm91dGUpIHtcbiAgICAgICAgICAgICAgcmV0dXJuICEoMCwgX3V0aWwuaXNTYW1lUm91dGUpKHJvdXRlLCBuYW1lLCBwYXJhbXMpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHZhciB1cmwgPSBocmVmLmJ1aWxkVXJsUGF0aChfdGhpczkuX19yZWdpc3RlcmVkUm91dGVzW25hbWVdLnVybCwgcGFyYW1zKTtcbiAgICAgICAgICAgIHZhciB1aWQgPSAoMCwgX3V0aWwuY3JlYXRlUm91dGVVaWQpKG5hbWUsIHBhcmFtcyk7XG5cbiAgICAgICAgICAgIHZhciBwYWdlID0gX3RoaXM5Ll9fY3JlYXRlSW5qZWN0UGFnZShuYW1lLCB1aWQsIG9wdGlvbnMpO1xuXG4gICAgICAgICAgICByb3V0ZVN0YWNrLnVuc2hpZnQoe1xuICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICB1cmw6IHVybCxcbiAgICAgICAgICAgICAgcGFnZTogcGFnZSxcbiAgICAgICAgICAgICAgZGF0YTogcm91dGVEYXRhLFxuICAgICAgICAgICAgICBwYXJhbXM6IHBhcmFtcyxcbiAgICAgICAgICAgICAgdWlkOiB1aWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIGFjdGl2ZVJvdXRlTmFtZSA9IG5hbWU7XG5cbiAgICAgICAgICAgIF90aGlzOS5fX2ZpcmUoYWN0aXZlUm91dGVOYW1lLCB1aWQsICdiZWZvcmVFbnRlcicpO1xuXG4gICAgICAgICAgICBfdGhpczkuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICByb3V0ZVN0YWNrOiByb3V0ZVN0YWNrLFxuICAgICAgICAgICAgICBhY3RpdmVSb3V0ZU5hbWU6IGFjdGl2ZVJvdXRlTmFtZVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmIChfdGhpczkucHJvcHMubm9VcmwgfHwgb3B0aW9ucyAmJiBvcHRpb25zLm5vVXBkYXRlVXJsIHx8ICFfdGhpczkuX19yZWdpc3RlcmVkUm91dGVzW25hbWVdLnVybCkge1xuICAgICAgICAgICAgICBfdGhpczkucHJvcHMub25DaGFuZ2VSb3V0ZSAmJiBfdGhpczkucHJvcHMub25DaGFuZ2VSb3V0ZSh7XG4gICAgICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgICB1cmw6IHVybCxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IHBhcmFtcyxcbiAgICAgICAgICAgICAgICBkYXRhOiByb3V0ZURhdGEsXG4gICAgICAgICAgICAgICAgb3B0aW9uczogX3RoaXM5Ll9fcmVnaXN0ZXJlZFJvdXRlc1tuYW1lXS5vcHRpb25zXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHRpdGxlID0gKDAsIF91dGlsLm1ha2VUaXRsZSkoX3RoaXM5Ll9fcmVnaXN0ZXJlZFJvdXRlc1tuYW1lXS50aXRsZSwgcGFyYW1zLCByb3V0ZURhdGEpO1xuXG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLnJlbG9hZCkge1xuICAgICAgICAgICAgICBocmVmLnNldCh1cmwsIHRpdGxlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGhyZWYucHVzaCh1cmwsIHRpdGxlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgX3RoaXM5Ll9fc2F2ZVJvdXRlU3RhY2tUb1Nlc3Npb25TdG9yYWdlKCk7XG5cbiAgICAgICAgICAgIF90aGlzOS5wcm9wcy5vbkNoYW5nZVJvdXRlICYmIF90aGlzOS5wcm9wcy5vbkNoYW5nZVJvdXRlKHtcbiAgICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgICAgdXJsOiB1cmwsXG4gICAgICAgICAgICAgIHBhcmFtczogcGFyYW1zLFxuICAgICAgICAgICAgICBkYXRhOiByb3V0ZURhdGEsXG4gICAgICAgICAgICAgIG9wdGlvbnM6IF90aGlzOS5fX3JlZ2lzdGVyZWRSb3V0ZXNbbmFtZV0ub3B0aW9uc1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfX2NyZWF0ZVBvcHVwXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9fY3JlYXRlUG9wdXAoc2NvcGUsIFBvcHVwQ29tcG9uZW50LCBvcHRpb25zLCBjYikge1xuICAgICAgdmFyIF90aGlzMTAgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICB2YXIgc2VsZiA9IHt9O1xuXG4gICAgICAgIGlmICgoMCwgX3V0aWwuaXNGdW5jdGlvbikob3B0aW9ucykpIHtcbiAgICAgICAgICBjYiA9IG9wdGlvbnM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2VsZiA9IF9vYmplY3RTcHJlYWQoe30sIG9wdGlvbnMpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2VsZi5yZXNvbHZlID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMxMC5fX3BvcHVwUmVzb2x2ZShzY29wZSwgZGF0YSwgc2VsZik7XG4gICAgICAgIH07XG5cbiAgICAgICAgc2VsZi5yZWplY3QgPSBmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMxMC5fX3BvcHVwUmVqZWN0KHNjb3BlLCBlcnJvciwgc2VsZik7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKCFfdGhpczEwLl9fcG9wdXBTdGFja1tzY29wZV0pIHtcbiAgICAgICAgICBfdGhpczEwLl9fcG9wdXBTdGFja1tzY29wZV0gPSBbXTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzMTAuX19wb3B1cFN0YWNrW3Njb3BlXS5wdXNoKHtcbiAgICAgICAgICBQb3B1cDogUG9wdXBDb21wb25lbnQsXG4gICAgICAgICAgc2VsZjogc2VsZixcbiAgICAgICAgICByZXNvbHZlOiByZXNvbHZlLFxuICAgICAgICAgIHJlamVjdDogcmVqZWN0XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHZhciBzaG93UG9wdXAgPSBfb2JqZWN0U3ByZWFkKHt9LCBfdGhpczEwLnN0YXRlLnNob3dQb3B1cCk7XG5cbiAgICAgICAgc2hvd1BvcHVwW3Njb3BlXSA9IHRydWU7XG5cbiAgICAgICAgX3RoaXMxMC5zZXRTdGF0ZSh7XG4gICAgICAgICAgc2hvd1BvcHVwOiBzaG93UG9wdXBcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYm9keVNjcm9sbC5kaXNhYmxlKCk7XG4gICAgICAgIGNiICYmIGNiKHtcbiAgICAgICAgICByZXNvbHZlOiBzZWxmLnJlc29sdmUsXG4gICAgICAgICAgcmVqZWN0OiBzZWxmLnJlamVjdFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfX3BvcHVwUmVzb2x2ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX3BvcHVwUmVzb2x2ZShzY29wZSwgZGF0YSwgc2VsZikge1xuICAgICAgaWYgKHRoaXMuX19wb3B1cFN0YWNrW3Njb3BlXSAmJiB0aGlzLl9fcG9wdXBTdGFja1tzY29wZV0ubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgaW5kZXggPSB0aGlzLl9fcG9wdXBTdGFja1tzY29wZV0uZmluZEluZGV4KGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgcmV0dXJuIHAuc2VsZiA9PT0gc2VsZjtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByZXNvbHZlID0gdGhpcy5fX3BvcHVwU3RhY2tbc2NvcGVdLnNwbGljZShpbmRleCwgMSlbMF0ucmVzb2x2ZTtcblxuICAgICAgICB2YXIgc2hvd1BvcHVwID0gX29iamVjdFNwcmVhZCh7fSwgdGhpcy5zdGF0ZS5zaG93UG9wdXApO1xuXG4gICAgICAgIHNob3dQb3B1cFtzY29wZV0gPSB0aGlzLl9fcG9wdXBTdGFja1tzY29wZV0ubGVuZ3RoID09IDAgPyBmYWxzZSA6IHRydWU7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHNob3dQb3B1cDogc2hvd1BvcHVwXG4gICAgICAgIH0pO1xuICAgICAgICByZXNvbHZlICYmIHJlc29sdmUoZGF0YSk7XG4gICAgICAgIGJvZHlTY3JvbGwuZW5hYmxlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9fcG9wdXBSZWplY3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX19wb3B1cFJlamVjdChzY29wZSwgZXJyb3IsIHNlbGYpIHtcbiAgICAgIGlmICh0aGlzLl9fcG9wdXBTdGFja1tzY29wZV0gJiYgdGhpcy5fX3BvcHVwU3RhY2tbc2NvcGVdLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIGluZGV4ID0gdGhpcy5fX3BvcHVwU3RhY2tbc2NvcGVdLmZpbmRJbmRleChmdW5jdGlvbiAocCkge1xuICAgICAgICAgIHJldHVybiBwLnNlbGYgPT09IHNlbGY7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVqZWN0ID0gdGhpcy5fX3BvcHVwU3RhY2tbc2NvcGVdLnNwbGljZShpbmRleCwgMSlbMF0ucmVqZWN0O1xuXG4gICAgICAgIHZhciBzaG93UG9wdXAgPSBfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLnN0YXRlLnNob3dQb3B1cCk7XG5cbiAgICAgICAgc2hvd1BvcHVwW3Njb3BlXSA9IHRoaXMuX19wb3B1cFN0YWNrW3Njb3BlXS5sZW5ndGggPT0gMCA/IGZhbHNlIDogdHJ1ZTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgc2hvd1BvcHVwOiBzaG93UG9wdXBcbiAgICAgICAgfSk7XG4gICAgICAgIHJlamVjdCAmJiByZWplY3QoZXJyb3IpO1xuICAgICAgICBib2R5U2Nyb2xsLmVuYWJsZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfX2RlbGV0ZUFsbFBvcHVwc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX2RlbGV0ZUFsbFBvcHVwcyhzY29wZSkge1xuICAgICAgaWYgKHRoaXMuX19wb3B1cFN0YWNrW3Njb3BlXSAmJiB0aGlzLl9fcG9wdXBTdGFja1tzY29wZV0ubGVuZ3RoID4gMCkge1xuICAgICAgICBkZWxldGUgdGhpcy5fX3BvcHVwU3RhY2tbc2NvcGVdO1xuXG4gICAgICAgIHZhciBzaG93UG9wdXAgPSBfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLnN0YXRlLnNob3dQb3B1cCk7XG5cbiAgICAgICAgc2hvd1BvcHVwW3Njb3BlXSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBzaG93UG9wdXA6IHNob3dQb3B1cFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX19jcmVhdGVUb2FzdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX2NyZWF0ZVRvYXN0KFRvYXN0Q29tcG9uZW50LCBvcHRpb25zLCBjYikge1xuICAgICAgdmFyIF90aGlzMTEgPSB0aGlzO1xuXG4gICAgICB2YXIgc2VsZiA9IHt9O1xuXG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9wdGlvbnMpID09ICdbb2JqZWN0IEZ1bmN0aW9uXScpIHtcbiAgICAgICAgY2IgPSBvcHRpb25zO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZiA9IF9vYmplY3RTcHJlYWQoe30sIG9wdGlvbnMpO1xuICAgICAgfVxuXG4gICAgICBzZWxmLmNsb3NlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXMxMS5fX2FuaW1hdGVDbG9zZVRvYXN0KHNlbGYsIG9wdGlvbnMgJiYgb3B0aW9ucy5ib3R0b20gPyAnYm90dG9tJyA6ICd0b3AnKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciB0b3AgPSBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5zdGF0ZS50b2FzdHMudG9wKTtcblxuICAgICAgdmFyIGJvdHRvbSA9IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnN0YXRlLnRvYXN0cy5ib3R0b20pO1xuXG4gICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmJvdHRvbSkge1xuICAgICAgICBib3R0b20udW5zaGlmdCh7XG4gICAgICAgICAgVG9hc3Q6IFRvYXN0Q29tcG9uZW50LFxuICAgICAgICAgIHNlbGY6IHNlbGZcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0b3AudW5zaGlmdCh7XG4gICAgICAgICAgVG9hc3Q6IFRvYXN0Q29tcG9uZW50LFxuICAgICAgICAgIHNlbGY6IHNlbGZcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHZhciB0b2FzdHMgPSB7XG4gICAgICAgIHRvcDogdG9wLFxuICAgICAgICBib3R0b206IGJvdHRvbVxuICAgICAgfTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB0b2FzdHM6IHRvYXN0c1xuICAgICAgfSk7XG4gICAgICBjYiAmJiBjYihzZWxmKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiX19hbmltYXRlQ2xvc2VUb2FzdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBfX2FuaW1hdGVDbG9zZVRvYXN0KHNlbGYsIHBvc2l0aW9uKSB7XG4gICAgICB2YXIgX3RoaXMxMiA9IHRoaXM7XG5cbiAgICAgIGlmIChwb3NpdGlvbi50b0xvd2VyQ2FzZSgpICE9PSAndG9wJyAmJiBwb3NpdGlvbi50b0xvd2VyQ2FzZSgpICE9PSAnYm90dG9tJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdG9hc3QgcG9zaXRpb24sIGl0IG11c3QgYmUgZWl0aGVyIHRvcCBvciBib3R0b20nKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuc3RhdGUudG9hc3RzW3Bvc2l0aW9uLnRvTG93ZXJDYXNlKCldLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgLy8gYW5pbWF0aW9uIG9ubHkgaWYgdGhlcmUgaXMgMSB0b2FzdCBsZWZ0XG4gICAgICAgIHRoaXMuX19jbG9zZVRvYXN0KHNlbGYsIHBvc2l0aW9uKTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciB0b2FzdHMgPSB7XG4gICAgICAgIHRvcDogX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuc3RhdGUudG9hc3RzLnRvcCksXG4gICAgICAgIGJvdHRvbTogX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuc3RhdGUudG9hc3RzLmJvdHRvbSlcbiAgICAgIH07XG4gICAgICB0b2FzdHNbcG9zaXRpb24udG9Mb3dlckNhc2UoKV0gPSB0aGlzLnN0YXRlLnRvYXN0c1twb3NpdGlvbi50b0xvd2VyQ2FzZSgpXS5tYXAoZnVuY3Rpb24gKHRvYXN0KSB7XG4gICAgICAgIGlmICh0b2FzdC5zZWxmID09PSBzZWxmKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIFRvYXN0OiB0b2FzdC5Ub2FzdCxcbiAgICAgICAgICAgIHNlbGY6IHNlbGYsXG4gICAgICAgICAgICBhbmltYXRlQ2xvc2luZzogJzAuNHMnXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdG9hc3Q7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHRvYXN0czogdG9hc3RzXG4gICAgICB9KTtcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczEyLl9fY2xvc2VUb2FzdChzZWxmLCBwb3NpdGlvbik7XG4gICAgICB9LCA0MDApO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJfX2Nsb3NlVG9hc3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX19jbG9zZVRvYXN0KHNlbGYsIHBvc2l0aW9uKSB7XG4gICAgICB2YXIgdG9hc3RzID0ge1xuICAgICAgICB0b3A6IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnN0YXRlLnRvYXN0cy50b3ApLFxuICAgICAgICBib3R0b206IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnN0YXRlLnRvYXN0cy5ib3R0b20pXG4gICAgICB9O1xuICAgICAgdmFyIGluZGV4ID0gdG9hc3RzW3Bvc2l0aW9uLnRvTG93ZXJDYXNlKCldLmZpbmRJbmRleChmdW5jdGlvbiAocCkge1xuICAgICAgICByZXR1cm4gcC5zZWxmID09PSBzZWxmO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0b2FzdHNbcG9zaXRpb24udG9Mb3dlckNhc2UoKV0uc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICB0b2FzdHM6IHRvYXN0c1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9fc2F2ZVJvdXRlU3RhY2tUb1Nlc3Npb25TdG9yYWdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9fc2F2ZVJvdXRlU3RhY2tUb1Nlc3Npb25TdG9yYWdlKCkge1xuICAgICAgdmFyIHJvdXRlU3RhY2sgPSB0aGlzLnN0YXRlLnJvdXRlU3RhY2subWFwKGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG5hbWU6IHJvdXRlLm5hbWUsXG4gICAgICAgICAgdXJsOiByb3V0ZS51cmwsXG4gICAgICAgICAgZGF0YTogcm91dGUuZGF0YSxcbiAgICAgICAgICBwYXJhbXM6IHJvdXRlLnBhcmFtcyxcbiAgICAgICAgICB1aWQ6IHJvdXRlLnVpZCxcbiAgICAgICAgICBwYWdlRGF0YTogcm91dGUucGFnZS5kYXRhIHx8IHVuZGVmaW5lZFxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwiX19yb3V0ZXN0YWNrX1wiLCBKU09OLnN0cmluZ2lmeShyb3V0ZVN0YWNrKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9fbG9hZFJvdXRlU3RhY2tGcm9tU2Vzc2lvblN0b3JhZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gX19sb2FkUm91dGVTdGFja0Zyb21TZXNzaW9uU3RvcmFnZSgpIHtcbiAgICAgIHZhciBfdGhpczEzID0gdGhpcztcblxuICAgICAgdmFyIHJvdXRlU3RhY2sgPSBKU09OLnBhcnNlKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oXCJfX3JvdXRlc3RhY2tfXCIpKSB8fCBbXTtcbiAgICAgIHJvdXRlU3RhY2suZm9yRWFjaChmdW5jdGlvbiAocm91dGUpIHtcbiAgICAgICAgcm91dGUucGFnZSA9IF90aGlzMTMuX19jcmVhdGVJbmplY3RQYWdlKHJvdXRlLm5hbWUsIHJvdXRlLnVpZCwge1xuICAgICAgICAgIGRhdGE6IHJvdXRlLnBhZ2VEYXRhXG4gICAgICAgIH0pO1xuICAgICAgICBkZWxldGUgcm91dGUucGFnZURhdGE7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiByb3V0ZVN0YWNrO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYW5kbGVDbGlja09uTW9kYWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlQ2xpY2tPbk1vZGFsKHNlbGYpIHtcbiAgICAgIHNlbGYub25DbGlja092ZXJsYXkgJiYgc2VsZi5vbkNsaWNrT3ZlcmxheShzZWxmKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTmF2aWdhdG9yO1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxuTmF2aWdhdG9yLl9fcmpzV2lkZ2V0VHlwZSA9ICduYXZpZ2F0b3InO1xudmFyIF9kZWZhdWx0ID0gTmF2aWdhdG9yO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBfZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5hdmlnYXRvci5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7XG5cbmZ1bmN0aW9uIF9kZWZhdWx0KG5hbWUsIGR1cmF0aW9uLCBkaXJlY3Rpb24pIHtcbiAgdmFyIGFuaW0gPSB7XG4gICAgYW5pbWF0aW9uTmFtZTogXCJyanMtcmVhY3QtbmF2LWFuaW1hdGUtXCIuY29uY2F0KG5hbWUpXG4gIH07XG5cbiAgaWYgKGR1cmF0aW9uKSB7XG4gICAgYW5pbS5hbmltYXRpb25EdXJhdGlvbiA9IGR1cmF0aW9uO1xuICB9XG5cbiAgaWYgKGRpcmVjdGlvbikge1xuICAgIGFuaW0uYW5pbWF0aW9uRGlyZWN0aW9uID0gZGlyZWN0aW9uO1xuICB9XG5cbiAgcmV0dXJuIGFuaW07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbmltYXRpb24uanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0O1xuXG5mdW5jdGlvbiBfZGVmYXVsdCgpIHtcbiAgdmFyIG9yaWdpbmFsQm9keVN0eWxlID0gZG9jdW1lbnQuYm9keS5zdHlsZS5jc3NUZXh0IHx8IG51bGw7XG4gIHJldHVybiB7XG4gICAgZW5hYmxlOiBmdW5jdGlvbiBlbmFibGUoKSB7XG4gICAgICB2YXIgc2Nyb2xsWSA9IGRvY3VtZW50LmJvZHkuc3R5bGUudG9wO1xuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jc3NUZXh0ID0gb3JpZ2luYWxCb2R5U3R5bGU7XG4gICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwgcGFyc2VJbnQoc2Nyb2xsWSB8fCAnMCcpICogLTEpO1xuICAgIH0sXG4gICAgZGlzYWJsZTogZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICAgIG9yaWdpbmFsQm9keVN0eWxlID0gZG9jdW1lbnQuYm9keS5zdHlsZS5jc3NUZXh0O1xuICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5jc3NUZXh0ID0gXCI7IG92ZXJmbG93OiBoaWRkZW47IHBvc2l0aW9uOiBmaXhlZDsgIHdpZHRoOiAxMDAlOyB0b3A6IC1cIi5jb25jYXQod2luZG93LnNjcm9sbFksIFwicHggXCIpO1xuICAgIH1cbiAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJvZHktc2Nyb2xsLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxudmFyIFVSTCA9IDA7XG52YXIgUFJPVE9DT0wgPSAxO1xudmFyIEhPU1QgPSAyO1xudmFyIFBBVEggPSAzO1xuXG52YXIgSHJlZiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEhyZWYoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIcmVmKTtcblxuICAgIHRoaXMuX19oYW5kbGVycyA9IHtcbiAgICAgIGhhc2hDaGFuZ2U6IFtdLFxuICAgICAgcG9wU3RhdGU6IFtdXG4gICAgfTtcbiAgICB0aGlzLl9fZGVmYXVsdFRpdGxlID0gZG9jdW1lbnQudGl0bGU7XG5cbiAgICB0aGlzLnB1c2ggPSBmdW5jdGlvbiAodXJsLCB0aXRsZSwgc3RhdGUpIHtcbiAgICAgIGhpc3RvcnkucHVzaFN0YXRlKHN0YXRlLCBcIlwiLCB1cmwpO1xuXG4gICAgICBpZiAodGl0bGUpIHtcbiAgICAgICAgZG9jdW1lbnQudGl0bGUgPSB0aXRsZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRvY3VtZW50LnRpdGxlID0gX3RoaXMuX19kZWZhdWx0VGl0bGU7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdoYXNoY2hhbmdlJywgZnVuY3Rpb24gKGV2dCkge1xuICAgICAgX3RoaXMuX19oYW5kbGVycy5oYXNoQ2hhbmdlLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIoZXZ0KTtcbiAgICAgIH0pO1xuICAgIH0sIGZhbHNlKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICBfdGhpcy5fX2hhbmRsZXJzLnBvcFN0YXRlLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZXIoZXZ0KTtcbiAgICAgIH0pO1xuICAgIH0sIGZhbHNlKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhIcmVmLCBbe1xuICAgIGtleTogXCJnZXRQYXRoTmFtZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQYXRoTmFtZSgpIHtcbiAgICAgIHZhciBwYXRoID0gdGhpcy5fX21hdGNoRnJvbVVSTChQQVRIKS5yZXBsYWNlKC8jLiokLywgJycpO1xuXG4gICAgICByZXR1cm4gcGF0aC5zcGxpdCgnPycpWzBdO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRVcmxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VXJsKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX19tYXRjaEZyb21VUkwoVVJMKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UHJvdG9jb2xcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UHJvdG9jb2woKSB7XG4gICAgICByZXR1cm4gdGhpcy5fX21hdGNoRnJvbVVSTChQUk9UT0NPTCkucmVwbGFjZSgvOi4qJC8sICcnKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0SG9zdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRIb3N0KCkge1xuICAgICAgcmV0dXJuIHRoaXMuX19tYXRjaEZyb21VUkwoSE9TVCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIl9fbWF0Y2hGcm9tVVJMXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIF9fbWF0Y2hGcm9tVVJMKHBhcnQpIHtcbiAgICAgIHZhciB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZi5yZXBsYWNlKC8oXFwvKVxcMSsvZywgJy8nKS5yZXBsYWNlKC86KD89XFwvKS8sIFwiOi9cIik7XG4gICAgICByZXR1cm4gdXJsLm1hdGNoKC8oaHR0cFtzXT86XFwvXFwvKT8oW15cXC9cXHNdK1xcLykoLiopLylbcGFydF0ucmVwbGFjZSgvXFwvJC8sICcnKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UXVlcnlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UXVlcnkoKSB7XG4gICAgICB2YXIgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLnNwbGl0KCc/Jyk7XG5cbiAgICAgIGlmICghaHJlZlsxXSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICB2YXIgcXVlcnkgPSB7fTtcbiAgICAgIHZhciBwYXJhbXMgPSBocmVmWzFdLnNwbGl0KCcmJyk7XG4gICAgICBwYXJhbXMuZm9yRWFjaChmdW5jdGlvbiAocGFyYW0pIHtcbiAgICAgICAgdmFyIHNwbGl0dGVkID0gcGFyYW0uc3BsaXQoJz0nKTtcblxuICAgICAgICBpZiAoc3BsaXR0ZWRbMF0pIHtcbiAgICAgICAgICBxdWVyeVtzcGxpdHRlZFswXV0gPSBzcGxpdHRlZFsxXSAmJiBzcGxpdHRlZFsxXS5yZXBsYWNlKC8jLiokLywgJycpIHx8IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gcXVlcnk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEJvb2ttYXJrXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEJvb2ttYXJrKCkge1xuICAgICAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZi5zcGxpdCgnIycpO1xuICAgICAgcmV0dXJuIGhyZWZbMV0gfHwgJyc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXQodXJsLCB0aXRsZSkge1xuICAgICAgbG9jYXRpb24uaHJlZiA9IHVybDtcbiAgICAgIGRvY3VtZW50LnRpdGxlID0gdGl0bGU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uKGV2ZW50LCBjYWxsYmFjaykge1xuICAgICAgaWYgKGV2ZW50ICE9PSAnaGFzaENoYW5nZScgJiYgZXZlbnQgIT09ICdwb3BTdGF0ZScpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdvbmx5IGFjY2VwdCBoYXNoQ2hhbmdlIGFuZCBwb3BTdGF0ZSBpbiBocmVmLm9uJyk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX19oYW5kbGVyc1tldmVudF0ucHVzaChjYWxsYmFjayk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm1hdGNoVXJsUGF0aFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBtYXRjaFVybFBhdGgodXJsKSB7XG4gICAgICB2YXIgcGF0aHMgPSB0aGlzLmdldFBhdGhOYW1lKCkuc3BsaXQoJy8nKS5maWx0ZXIoZnVuY3Rpb24gKHUpIHtcbiAgICAgICAgcmV0dXJuIHUubGVuZ3RoID4gMDtcbiAgICAgIH0pLm1hcChmdW5jdGlvbiAocCkge1xuICAgICAgICByZXR1cm4gcC50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgIH0pO1xuICAgICAgdmFyIHVybHMgPSB1cmwuc3BsaXQoJy8nKS5maWx0ZXIoZnVuY3Rpb24gKHUpIHtcbiAgICAgICAgcmV0dXJuIHUubGVuZ3RoID4gMDtcbiAgICAgIH0pLm1hcChmdW5jdGlvbiAodSkge1xuICAgICAgICByZXR1cm4gdS50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgIH0pOyAvLyBjb25zb2xlLmxvZyhgTWF0Y2hpbmcgdXJscyA9ICR7dXJsc30gLiBwYXRocyA9ICR7cGF0aHN9YClcbiAgICAgIC8vIGNvbnNvbGUubG9nKGAgICB1cmxzLmxlbmd0aCAgPSAke3VybHMubGVuZ3RofWApXG4gICAgICAvLyBjb25zb2xlLmxvZyhgICAgcGF0aHMubGVuZ3RoID0gJHtwYXRocy5sZW5ndGh9YClcblxuICAgICAgaWYgKHVybHMubGVuZ3RoICE9PSBwYXRocy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHVybHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coYCAgIHVybHNbJHtpfV0gID0gJHt1cmxzW2ldfWApXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGAgICBwYXRoc1ske2l9XSA9ICR7cGF0aHNbaV19YClcbiAgICAgICAgaWYgKC9eOi8udGVzdCh1cmxzW2ldKSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHVybHNbaV0gIT09IHBhdGhzW2ldKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJidWlsZFVybFBhdGhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYnVpbGRVcmxQYXRoKHVybCwgcGFyYW1zKSB7XG4gICAgICB2YXIgdXJscyA9IHVybC5zcGxpdCgnLycpLmZpbHRlcihmdW5jdGlvbiAodSkge1xuICAgICAgICByZXR1cm4gdS5sZW5ndGggPiAwO1xuICAgICAgfSkubWFwKGZ1bmN0aW9uICh1KSB7XG4gICAgICAgIHJldHVybiB1LnRyaW0oKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgfSk7XG4gICAgICB2YXIgcmV0dXJuVXJsID0gJyc7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdXJscy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoL146Ly50ZXN0KHVybHNbaV0pKSB7XG4gICAgICAgICAgdmFyIHAgPSB1cmxzW2ldLnNwbGl0KCc6JykucG9wKCk7XG5cbiAgICAgICAgICBpZiAocGFyYW1zICYmIHBhcmFtc1twXSkge1xuICAgICAgICAgICAgcmV0dXJuVXJsICs9IFwiL1wiLmNvbmNhdChwYXJhbXNbcF0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHZhbHVlIGZvciBcIi5jb25jYXQodXJsc1tpXSwgXCIgaW4gXCIpLmNvbmNhdCh1cmwpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuVXJsICs9IFwiL1wiLmNvbmNhdCh1cmxzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmV0dXJuVXJsLmxlbmd0aCA9PT0gMCA/ICcvJyA6IHJldHVyblVybDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZXh0cmFjdFVybFBhcmFtc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBleHRyYWN0VXJsUGFyYW1zKHVybCkge1xuICAgICAgdmFyIHBhdGhzID0gdGhpcy5nZXRQYXRoTmFtZSgpLnNwbGl0KCcvJykuZmlsdGVyKGZ1bmN0aW9uICh1KSB7XG4gICAgICAgIHJldHVybiB1Lmxlbmd0aCA+IDA7XG4gICAgICB9KTtcbiAgICAgIHZhciB1cmxzID0gdXJsLnNwbGl0KCcvJykuZmlsdGVyKGZ1bmN0aW9uICh1KSB7XG4gICAgICAgIHJldHVybiB1Lmxlbmd0aCA+IDA7XG4gICAgICB9KS5tYXAoZnVuY3Rpb24gKHUpIHtcbiAgICAgICAgcmV0dXJuIHUudHJpbSgpLnRvTG93ZXJDYXNlKCk7XG4gICAgICB9KTtcbiAgICAgIHZhciBwYXJhbXMgPSB7fTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB1cmxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICgvXjovLnRlc3QodXJsc1tpXSkpIHtcbiAgICAgICAgICBwYXJhbXNbdXJsc1tpXS5zcGxpdCgnOicpLnBvcCgpXSA9IHBhdGhzW2ldO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwYXJhbXM7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldERlZmF1bHRUaXRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXREZWZhdWx0VGl0bGUodGl0bGUpIHtcbiAgICAgIHRoaXMuX19kZWZhdWx0VGl0bGUgPSB0aXRsZTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSHJlZjtcbn0oKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBIcmVmO1xuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHJlZi5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5hdmlnYXRvclwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfTmF2aWdhdG9yW1wiZGVmYXVsdFwiXTtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJuYXZcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX25hdltcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSHJlZlwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfaHJlZltcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuXG52YXIgX05hdmlnYXRvciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vTmF2aWdhdG9yXCIpKTtcblxudmFyIF9uYXYgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL25hdlwiKSk7XG5cbnZhciBfaHJlZiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaHJlZlwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcbnZhciBfZGVmYXVsdCA9IHtcbiAgX19pc05hdlJlZ2lzdGVyZWQ6IGZhbHNlLFxuICBfX3BvcHVwOiBudWxsLFxuICBfX3JvdXRlOiBudWxsLFxuICByZWdpc3RlcjogZnVuY3Rpb24gcmVnaXN0ZXIobmF2aWdhdG9yKSB7XG4gICAgaWYgKHRoaXMuX19pc05hdlJlZ2lzdGVyZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk9ubHkgb25lIE5hdmlnYXRvciBjYW4gYmUgcmVnaXN0ZXJlZCFcIik7XG4gICAgfVxuXG4gICAgdGhpcy5fX2lzTmF2UmVnaXN0ZXJlZCA9IHRydWU7XG5cbiAgICB0aGlzLl9fcG9wdXAgPSBmdW5jdGlvbiAoUG9wdXBDb21wb25lbnQsIG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gbmF2aWdhdG9yLl9fY3JlYXRlUG9wdXAoJ19fZ2xvYmFsJywgUG9wdXBDb21wb25lbnQsIG9wdGlvbnMsIGNiKTtcbiAgICB9O1xuXG4gICAgdGhpcy5fX25hdiA9IG5hdmlnYXRvci5uYXY7XG5cbiAgICB0aGlzLl9fdG9hc3QgPSBmdW5jdGlvbiAoVG9hc3RDb21wb25lbnQsIG9wdGlvbnMsIGNiKSB7XG4gICAgICByZXR1cm4gbmF2aWdhdG9yLl9fY3JlYXRlVG9hc3QoVG9hc3RDb21wb25lbnQsIG9wdGlvbnMsIGNiKTtcbiAgICB9O1xuICB9LFxuICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIHRoaXMuX19pc05hdlJlZ2lzdGVyZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9fcG9wdXAgPSBudWxsO1xuICAgIHRoaXMuX19uYXYgPSBudWxsO1xuICAgIHRoaXMuX190b2FzdCA9IG51bGw7XG4gIH0sXG4gIHBvcHVwOiBmdW5jdGlvbiBwb3B1cChQb3B1cENvbXBvbmVudCwgb3B0aW9ucywgY2IpIHtcbiAgICBpZiAodGhpcy5fX3BvcHVwID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ05hdmlnYXRvciBpcyBub3QgbW91bnRlZCBvciBoYXMgYmVlbiBkZXN0cm95ZWQnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fX3BvcHVwKFBvcHVwQ29tcG9uZW50LCBvcHRpb25zLCBjYik7XG4gIH0sXG4gIG5hdmlnYXRlOiBmdW5jdGlvbiBuYXZpZ2F0ZShyb3V0ZSwgb3B0aW9ucykge1xuICAgIGlmICh0aGlzLl9fbmF2ID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ05hdmlnYXRvciBpcyBub3QgbW91bnRlZCBvciBoYXMgYmVlbiBkZXN0cm95ZWQnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fX25hdi5uYXZpZ2F0ZShyb3V0ZSwgb3B0aW9ucyk7XG4gIH0sXG4gIHRvYXN0OiBmdW5jdGlvbiB0b2FzdChUb2FzdENvbXBvbmVudCwgb3B0aW9ucywgY2IpIHtcbiAgICBpZiAodGhpcy5fX3RvYXN0ID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ05hdmlnYXRvciBpcyBub3QgbW91bnRlZCBvciBoYXMgYmVlbiBkZXN0cm95ZWQnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fX3RvYXN0KFRvYXN0Q29tcG9uZW50LCBvcHRpb25zLCBjYik7XG4gIH1cbn07XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IF9kZWZhdWx0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2LmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5hcHBlbmRTdHlsZSA9IGFwcGVuZFN0eWxlO1xudmFyIGNzcyA9IFwiXFxuLnJqcy1yZWFjdC1uYXYtbW9kYWx7ei1pbmRleDozO2Rpc3BsYXk6bm9uZTtwYWRkaW5nLXRvcDoxMDBweDtwb3NpdGlvbjpmaXhlZDtsZWZ0OjA7dG9wOjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvdmVyZmxvdzphdXRvO2JhY2tncm91bmQtY29sb3I6cmdiKDAsMCwwKTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC40KX1cXG4ucmpzLXJlYWN0LW5hdi1tb2RhbC1jb250ZW50e21hcmdpbjphdXRvO2JhY2tncm91bmQtY29sb3I6I2ZmZjtwb3NpdGlvbjpyZWxhdGl2ZTtwYWRkaW5nOjA7b3V0bGluZTowO3dpZHRoOjYwMHB4fVxcbi5yanMtcmVhY3QtbmF2LWNhcmQtNCwudzMtaG92ZXItc2hhZG93OmhvdmVye2JveC1zaGFkb3c6MCA0cHggMTBweCAwIHJnYmEoMCwwLDAsMC4yKSwwIDRweCAyMHB4IDAgcmdiYSgwLDAsMCwwLjE5KX1cXG5cIjtcbnZhciBhbmltYXRpb24gPSBcIlxcbkBrZXlmcmFtZXMgcmpzLXJlYWN0LW5hdi1hbmltYXRlLWZsb2F0LXRvcCB7ZnJvbXt0b3A6LTMwMHB4O29wYWNpdHk6MH0gdG97dG9wOjA7b3BhY2l0eToxfX1cXG5Aa2V5ZnJhbWVzIHJqcy1yZWFjdC1uYXYtYW5pbWF0ZS1mbG9hdC1ib3R0b20ge2Zyb217Ym90dG9tOi0zMDBweDtvcGFjaXR5OjB9IHRve2JvdHRvbTowO29wYWNpdHk6MX19XFxuQGtleWZyYW1lcyByanMtcmVhY3QtbmF2LWFuaW1hdGUtZmFkZS1pbiB7IGZyb217b3BhY2l0eTowO30gdG97b3BhY2l0eToxO319XFxuQGtleWZyYW1lcyByanMtcmVhY3QtbmF2LWFuaW1hdGUtZmFkZS1vdXQgeyBmcm9te29wYWNpdHk6MTt9IHRve29wYWNpdHk6MDt9fVxcblwiO1xuXG5mdW5jdGlvbiBhcHBlbmRTdHlsZSgpIHtcbiAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdfX3Jqcy1yZWFjdC1uYXYtc3R5bGUnKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgc3R5bGUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ3RleHQvY3NzJyk7XG4gIHN0eWxlLnNldEF0dHJpYnV0ZSgnaWQnLCAnX19yanMtcmVhY3QtbmF2LXN0eWxlJyk7XG4gIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShhbmltYXRpb24pKTtcbiAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsZS5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY2FwaXRhbGl6ZSA9IGNhcGl0YWxpemU7XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuZXhwb3J0cy5pc1NhbWVSb3V0ZSA9IGlzU2FtZVJvdXRlO1xuZXhwb3J0cy5jb21wYXJlT2JqZWN0ID0gY29tcGFyZU9iamVjdDtcbmV4cG9ydHMuY3JlYXRlUm91dGVVaWQgPSBjcmVhdGVSb3V0ZVVpZDtcbmV4cG9ydHMubWFrZVRpdGxlID0gbWFrZVRpdGxlO1xuXG5mdW5jdGlvbiBjYXBpdGFsaXplKHN0cikge1xuICByZXR1cm4gc3RyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyLnNsaWNlKDEpO1xufVxuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKGZuKSB7XG4gIHJldHVybiBmbiAmJiB7fS50b1N0cmluZy5jYWxsKGZuKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn1cblxuZnVuY3Rpb24gaXNTYW1lUm91dGUocm91dGUsIG5hbWUsIHBhcmFtcykge1xuICBpZiAoIXJvdXRlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHJvdXRlLm5hbWUgIT09IG5hbWUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAocm91dGUucGFyYW1zID09PSB1bmRlZmluZWQgJiYgcGFyYW1zID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmIChyb3V0ZS5wYXJhbXMgJiYgcGFyYW1zICYmIGNvbXBhcmVPYmplY3Qocm91dGUucGFyYW1zLCBwYXJhbXMpID09PSB0cnVlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVPYmplY3QoYSwgYikge1xuICBpZiAoT2JqZWN0LmtleXMoYSkubGVuZ3RoICE9PSBPYmplY3Qua2V5cyhiKS5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmb3IgKHZhciBwcm9wIGluIGEpIHtcbiAgICBpZiAoYVtwcm9wXSAhPT0gYltwcm9wXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSb3V0ZVVpZChuYW1lLCBwYXJhbXMpIHtcbiAgdmFyIHVpZCA9IFwiXCIuY29uY2F0KG5hbWUsIFwiX1wiKTtcbiAgdmFyIHByb3BzID0gT2JqZWN0LmtleXMocGFyYW1zKS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIGEuZmlyc3RuYW1lLmxvY2FsZUNvbXBhcmUoYi5maXJzdG5hbWUpO1xuICB9KTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdWlkICs9IFwiXCIuY29uY2F0KHBhcmFtc1twcm9wc1tpXV0sIFwiKlwiKTtcbiAgfVxuXG4gIHJldHVybiB1aWQ7XG59XG5cbmZ1bmN0aW9uIG1ha2VUaXRsZShzdHIsIHBhcmFtcywgZGF0YSkge1xuICBpZiAoIXN0cikge1xuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAoIXBhcmFtcyAmJiAhZGF0YSkge1xuICAgIHJldHVybiBzdHI7XG4gIH1cblxuICB2YXIgdGl0bGUgPSBzdHI7XG4gIHBhcmFtcyAmJiBwYXJzZVBhdHRlcm5zRnJvbVRpdGxlKHN0ciwgJ3BhcmFtJykuZm9yRWFjaChmdW5jdGlvbiAocCkge1xuICAgIHRpdGxlID0gdGl0bGUucmVwbGFjZShuZXcgUmVnRXhwKFwiezpcIi5jb25jYXQocCwgXCJ9XCIpKSwgcGFyYW1zW3BdKTtcbiAgfSk7XG4gIGRhdGEgJiYgcGFyc2VQYXR0ZXJuc0Zyb21UaXRsZShzdHIsICdkYXRhJykuZm9yRWFjaChmdW5jdGlvbiAocCkge1xuICAgIHRpdGxlID0gdGl0bGUucmVwbGFjZShuZXcgUmVnRXhwKFwie3tcIi5jb25jYXQocCwgXCJ9fVwiKSksIGRlZXBHZXREYXRhKGRhdGEsIHApKTtcbiAgfSk7XG4gIHJldHVybiB0aXRsZTtcbn1cblxuZnVuY3Rpb24gcGFyc2VQYXR0ZXJuc0Zyb21UaXRsZSh0aXRsZSwgYnkpIHtcbiAgdmFyIHBhdHRlcm5zID0gYnkgPT09ICdwYXJhbScgPyB0aXRsZS5tYXRjaCgvXFx7OihcXHcrKVxcfS9nKSA6IHRpdGxlLm1hdGNoKC9cXHtcXHsoLispXFx9XFx9L2cpO1xuICByZXR1cm4gcGF0dGVybnMgPyBwYXR0ZXJucy5tYXAoZnVuY3Rpb24gKHApIHtcbiAgICByZXR1cm4gcC5yZXBsYWNlKC9cXHt8OnxcXH0vZywgJycpO1xuICB9KSA6IFtdO1xufVxuXG5mdW5jdGlvbiBkZWVwR2V0RGF0YShkYXRhLCBwYXR0ZXJuKSB7XG4gIHZhciBrZXlzID0gcGF0dGVybi5zcGxpdCgnLicpO1xuICB2YXIgdmFsdWUgPSBkYXRhW2tleXNbMF1dO1xuXG4gIGlmIChrZXlzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBkZWVwR2V0RGF0YSh2YWx1ZSwgcGF0dGVybi5yZXBsYWNlKC9eXFx3KlxcLi8sICcnKSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlsLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuXG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7IGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDsgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTsgX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCkgeyByZXR1cm4gY2FjaGU7IH07IHJldHVybiBjYWNoZTsgfVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgX3R5cGVvZihvYmopICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikgeyByZXR1cm4geyBcImRlZmF1bHRcIjogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCk7IGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkgeyByZXR1cm4gY2FjaGUuZ2V0KG9iaik7IH0gdmFyIG5ld09iaiA9IHt9OyB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqW1wiZGVmYXVsdFwiXSA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfVxuXG5mdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHsgcmV0dXJuIGNhbGw7IH0gcmV0dXJuIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7IH1cblxuZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7IGlmIChzZWxmID09PSB2b2lkIDApIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxudmFyIFVzZXJQcm92aWRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoVXNlclByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBVc2VyUHJvdmlkZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVXNlclByb3ZpZGVyKTtcblxuICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFVzZXJQcm92aWRlcikuY2FsbCh0aGlzLCBwcm9wcykpO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgdXNlcjogbnVsbFxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFVzZXJQcm92aWRlciwgW3tcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkTW91bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgLy8gZXNjYXBlIHNlcnZlciBzaWRlXG4gICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMudXNlcikge1xuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdXNlcjogdGhpcy5wcm9wcy51c2VyXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLmFjY291bnRDbGllbnQpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5hY2NvdW50Q2xpZW50Lm9uKCd1cGRhdGVkJywgZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHVzZXI6IHVzZXJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucHJvcHMuYWNjb3VudENsaWVudC5vbignYXV0aGVudGljYXRlZCcsIGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB1c2VyOiB1c2VyXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnByb3BzLmFjY291bnRDbGllbnQub24oJ3VuYXV0aGVudGljYXRlZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHVzZXI6IHVuZGVmaW5lZFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMucHJvcHMuYWNjb3VudENsaWVudC5nZXQoJ3VzZXInKSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICB1c2VyOiB0aGlzLnByb3BzLmFjY291bnRDbGllbnQuZ2V0KCd1c2VyJylcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gX3JlYWN0W1wiZGVmYXVsdFwiXS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIHRoaXMucGFzc1VzZXJUb0NoaWxkcmVuUHJvcHMoKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInBhc3NVc2VyVG9DaGlsZHJlblByb3BzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHBhc3NVc2VyVG9DaGlsZHJlblByb3BzKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBfcmVhY3RbXCJkZWZhdWx0XCJdLkNoaWxkcmVuLm1hcCh0aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgcmV0dXJuIF9yZWFjdFtcImRlZmF1bHRcIl0uY2xvbmVFbGVtZW50KGNoaWxkLCB7XG4gICAgICAgICAgdXNlcjogX3RoaXMzLnN0YXRlLnVzZXIsXG4gICAgICAgICAgYWNjb3VudENsaWVudDogX3RoaXMzLnByb3BzLmFjY291bnRDbGllbnRcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gVXNlclByb3ZpZGVyO1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxudmFyIF9kZWZhdWx0ID0gVXNlclByb3ZpZGVyO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBfZGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVzZXJQcm92aWRlci5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVzZXJQcm92aWRlclwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfVXNlclByb3ZpZGVyW1wiZGVmYXVsdFwiXTtcbiAgfVxufSk7XG5cbnZhciBfVXNlclByb3ZpZGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9Db21wb25lbnRzL1VzZXJQcm92aWRlclwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xNC4wXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyx6PW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsQT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOlxuNjAxMTYsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gQyhhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBEPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxFPXt9O2Z1bmN0aW9uIEYoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH1GLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0YucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihDKDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtGLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEcoKXt9Ry5wcm90b3R5cGU9Ri5wcm90b3R5cGU7ZnVuY3Rpb24gSChhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfXZhciBJPUgucHJvdG90eXBlPW5ldyBHO0kuY29uc3RydWN0b3I9SDtsKEksRi5wcm90b3R5cGUpO0kuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGMpe3ZhciBlLGQ9e30sZz1udWxsLGs9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsZSkmJiFMLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGg9QXJyYXkoZiksbT0wO208ZjttKyspaFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWh9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbZV0mJihkW2VdPWZbZV0pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6ayxwcm9wczpkLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2csUT1bXTtmdW5jdGlvbiBSKGEsYixjLGUpe2lmKFEubGVuZ3RoKXt2YXIgZD1RLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9YztkLmNvbnRleHQ9ZTtkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6Yyxjb250ZXh0OmUsY291bnQ6MH19XG5mdW5jdGlvbiBTKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+US5sZW5ndGgmJlEucHVzaChhKX1cbmZ1bmN0aW9uIFQoYSxiLGMsZSl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGMoZSxhLFwiXCI9PT1iP1wiLlwiK1UoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGs9MDtrPGEubGVuZ3RoO2srKyl7ZD1hW2tdO3ZhciBmPWIrVShkLGspO2crPVQoZCxmLGMsZSl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1CJiZhW0JdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGs9XG4wOyEoZD1hLm5leHQoKSkuZG9uZTspZD1kLnZhbHVlLGY9YitVKGQsaysrKSxnKz1UKGQsZixjLGUpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWQpdGhyb3cgYz1cIlwiK2EsRXJyb3IoQygzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yz9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpjLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBWKGEsYixjKXtyZXR1cm4gbnVsbD09YT8wOlQoYSxcIlwiLGIsYyl9ZnVuY3Rpb24gVShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gVyhhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBhYShhLGIsYyl7dmFyIGU9YS5yZXN1bHQsZD1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9YKGEsZSxjLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE8oYSkmJihhPU4oYSxkKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKStjKSksZS5wdXNoKGEpKX1mdW5jdGlvbiBYKGEsYixjLGUsZCl7dmFyIGc9XCJcIjtudWxsIT1jJiYoZz0oXCJcIitjKS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpO2I9UihiLGcsZSxkKTtWKGEsYWEsYik7UyhiKX12YXIgWT17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBaKCl7dmFyIGE9WS5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKEMoMzIxKSk7cmV0dXJuIGF9XG52YXIgYmE9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6WSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7c3VzcGVuc2U6bnVsbH0sUmVhY3RDdXJyZW50T3duZXI6SixJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O2V4cG9ydHMuQ2hpbGRyZW49e21hcDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXTtYKGEsZSxudWxsLGIsYyk7cmV0dXJuIGV9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1SKG51bGwsbnVsbCxiLGMpO1YoYSxXLGIpO1MoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBWKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107WChhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFPKGEpKXRocm93IEVycm9yKEMoMTQzKSk7cmV0dXJuIGF9fTtcbmV4cG9ydHMuQ29tcG9uZW50PUY7ZXhwb3J0cy5GcmFnbWVudD1yO2V4cG9ydHMuUHJvZmlsZXI9dTtleHBvcnRzLlB1cmVDb21wb25lbnQ9SDtleHBvcnRzLlN0cmljdE1vZGU9dDtleHBvcnRzLlN1c3BlbnNlPXk7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1iYTtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihDKDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGc9YS5yZWYsaz1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGc9Yi5yZWYsaz1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGY9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoaCBpbiBiKUsuY2FsbChiLGgpJiYhTC5oYXNPd25Qcm9wZXJ0eShoKSYmKGVbaF09dm9pZCAwPT09YltoXSYmdm9pZCAwIT09Zj9mW2hdOmJbaF0pfXZhciBoPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09aCllLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGgpe2Y9QXJyYXkoaCk7Zm9yKHZhciBtPTA7bTxoO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Zn1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxcbmtleTpkLHJlZjpnLHByb3BzOmUsX293bmVyOmt9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9TTtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TztcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6QSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnosdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBaKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjE0LjBcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmNvbnN0IHN0b3JhZ2UgPSByZXF1aXJlKCcuL3N0b3JhZ2UnKVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcblxyXG4gIGdldCh1cmwsIG9wdGlvbnMpIHtcclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3Qoe21ldGhvZDogJ0dFVCcsIHVybCwgb3B0aW9uc30pXHJcbiAgfSxcclxuXHJcbiAgcG9zdCh1cmwsIGRhdGEsIG9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zKSB7XHJcbiAgICAgIGlmICghb3B0aW9ucy5oZWFkZXIpIHsgb3B0aW9ucy5oZWFkZXIgPSB7fSB9XHJcbiAgICAgIG9wdGlvbnMuaGVhZGVyWydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgb3B0aW9ucyA9IHsgaGVhZGVyOiB7ICdDb250ZW50LVR5cGUnIDogJ2FwcGxpY2F0aW9uL2pzb24nIH0gfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdCh7IG1ldGhvZDogJ1BPU1QnLCB1cmwsIGRhdGEsIG9wdGlvbnMgfSlcclxuICB9LFxyXG5cclxuICBwdXQodXJsLCBkYXRhLCBvcHRpb25zKSB7XHJcbiAgICBpZiAob3B0aW9ucykge1xyXG4gICAgICBpZiAoIW9wdGlvbnMuaGVhZGVyKSB7IG9wdGlvbnMuaGVhZGVyID0ge30gfVxyXG4gICAgICBvcHRpb25zLmhlYWRlclsnQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbidcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG9wdGlvbnMgPSB7IGhlYWRlcjogeyAnQ29udGVudC1UeXBlJyA6ICdhcHBsaWNhdGlvbi9qc29uJyB9IH1cclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoeyBtZXRob2Q6ICdQVVQnLCB1cmwsIGRhdGEsIG9wdGlvbnMgfSlcclxuICB9LFxyXG5cclxuICBkZWxldGUodXJsLCBkYXRhLCBvcHRpb25zKSB7XHJcbiAgICBpZiAob3B0aW9ucykge1xyXG4gICAgICBpZiAoIW9wdGlvbnMuaGVhZGVyKSB7IG9wdGlvbnMuaGVhZGVyID0ge30gfVxyXG4gICAgICBvcHRpb25zLmhlYWRlclsnQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbidcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG9wdGlvbnMgPSB7IGhlYWRlcjogeyAnQ29udGVudC1UeXBlJyA6ICdhcHBsaWNhdGlvbi9qc29uJyB9IH1cclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoeyBtZXRob2Q6ICdERUxFVEUnLCB1cmwsIGRhdGEsIG9wdGlvbnMgfSlcclxuICB9LFxyXG5cclxuICByZXF1ZXN0KHttZXRob2QsIHVybCwgZGF0YSwgaGVhZGVyLCBvcHRpb25zfSkge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKCAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKVxyXG4gICAgICByZXF1ZXN0Lm9wZW4obWV0aG9kLCB1cmwsIHRydWUpXHJcbiAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMuaGVhZGVyKSB7XHJcbiAgICAgICAgZm9yIChsZXQgcHJvcCBpbiBvcHRpb25zLmhlYWRlcikge1xyXG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKHByb3AsIG9wdGlvbnMuaGVhZGVyW3Byb3BdKVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmF1dGhlbiAmJiBzdG9yYWdlLmdldCgndG9rZW4nKSkge1xyXG4gICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcignQXV0aG9yaXphdGlvbicsIGBCZWFyZXIgJHtzdG9yYWdlLmdldCgndG9rZW4nKX1gKVxyXG4gICAgICB9XHJcbiAgICAgIGNvbnN0IHRvID0gKG9wdGlvbnMgJiYgb3B0aW9ucy50aW1lb3V0KT8gIHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KCd0aW1lb3V0JyksIG9wdGlvbnMudGltZW91dCkgOiBudWxsXHJcbiAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcclxuICAgICAgICB0byAmJiBjbGVhclRpbWVvdXQodG8pXHJcbiAgICAgICAgY29uc3Qge3N0YXR1cywgcmVzcG9uc2VUZXh0fSA9IHJlcXVlc3RcclxuICAgICAgICByZXNvbHZlKHtzdGF0dXMsIHJlc3BvbnNlVGV4dH0pXHJcbiAgICAgIH0pXHJcbiAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgcmVxdWVzdC5zZW5kKEpTT04uc3RyaW5naWZ5KGRhdGEpKVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcXVlc3Quc2VuZCgpXHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfVxyXG5cclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuY29uc3QgU0VTU0lPTiA9ICdfX3Jfc19zZXNzXydcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIGdldChrZXkpIHtcclxuICAgIGlmICh0eXBlb2YoU3RvcmFnZSkgPT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgLy8gU29ycnkhIE5vIFdlYiBTdG9yYWdlIHN1cHBvcnQuLlxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBXZWIgU3RvcmFnZSBzdXBwb3J0XCIpXHJcbiAgICB9XHJcbiAgICBjb25zdCBzZXNzaW9uID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShTRVNTSU9OKSlcclxuICAgIGlmIChzZXNzaW9uKSB7XHJcbiAgICAgIHJldHVybiBzZXNzaW9uW2tleV1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB1bmRlZmluZWRcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7IHVzZXIgfSkge1xyXG5cclxuICBjb25zdCBpdGVtQ291bnQgPSAnMic7IC8vIGxhdGVyIGRlZmluZWQgYnkgc3RvcmFnZS5jYXJ0XHJcbiAgaWYgKCF1c2VyKSB7IHJldHVybiBudWxsOyB9XHJcbiAgcmV0dXJuIChcclxuICAgIDxzcGFuIGNsYXNzTmFtZT1cInczLWxhcmdlIHczLWJhci1pdGVtIHczLWJ1dHRvbiB3My1ob3Zlci1ub25lXCIgc3R5bGU9e3twb3NpdGlvbjogJ3JlbGF0aXZlJywgbWFyZ2luOiAnMHB4IDhweCd9fSA+XHJcbiAgICAgICAgPGkgY2xhc3NOYW1lPXtgZmFzIGZhLXNob3BwaW5nLWNhcnQgJHtpdGVtQ291bnQubGVuZ3RoID4gMCA/ICd3My10ZXh0LWJsdWUnIDogJ3czLXRleHQtbGlnaHQtYmx1ZSd9YH0gLz5cclxuICAgICAgICB7XHJcbiAgICAgICAgICBpdGVtQ291bnQubGVuZ3RoID4gMCA/XHJcbiAgICAgICAgICAgIDxsYWJlbCAgY2xhc3NOYW1lPVwidzMtc21hbGwgdzMtY2lyY2xlIHczLXJlZFwiXHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tkaXNwbGF5OiAnaW5saW5lLWJsb2NrJywgd2lkdGg6ICcxOXB4JywgaGVpZ2h0OiAnMTlweCcsIHBvc2l0aW9uOiAnYWJzb2x1dGUnLCB0b3A6ICcycHgnLCBsZWZ0OiAnMjhweCd9fVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAge2l0ZW1Db3VudH1cclxuICAgICAgICAgICAgPC9sYWJlbD5cclxuICAgICAgICAgIDogbnVsbFxyXG4gICAgICAgIH1cclxuICAgICAgPC9zcGFuPlxyXG4gICk7XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XHJcbmltcG9ydCB7IG5hdiB9IGZyb20gJ0ByZWFsbWpzL3JlYWN0LW5hdmknO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeyB1c2VyIH0pIHtcclxuXHJcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpO1xyXG5cclxuICBpZiAoIXVzZXIpIHsgcmV0dXJuIG51bGw7IH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxidXR0b24gY2xhc3NOYW1lID0gXCJ3My1iYXItaXRlbSB3My1idXR0b24gdzMtaG92ZXItbm9uZSB3My1sYXJnZSBvdXRsaW5lLW5vbmVcIiBvbkNsaWNrID0ge25hdmlnYXRlfT4ge3QoXCJoZWFkZXI6RW5yb2xsZWRcIil9IDwvYnV0dG9uPlxyXG4gICk7XHJcblxyXG4gIGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xyXG4gICAgLy8gbmF2Lm5hdmlnYXRlKCdteWNvdXJzZXMnKTtcclxuICB9XHJcblxyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XHJcbmltcG9ydCB7IG5hdiB9IGZyb20gJ0ByZWFsbWpzL3JlYWN0LW5hdmknO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeyBwcm9ncmFtcyB9KSB7XHJcblxyXG4gIGNvbnN0IFtjb250ZW50VmlzaWJsZSwgc2V0Q29udGVudFZpc2libGVdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgIGNsYXNzTmFtZT1cInczLXRvb2x0aXAgdzMtZHJvcGRvd24tY2xpY2tcIlxyXG4gICAgICAgICAgc3R5bGUgPSB7e2JhY2tncm91bmQ6ICdub25lJ319XHJcbiAgICAgICAgICBvbk1vdXNlRW50ZXIgPSB7IGUgPT4gc2V0Q29udGVudFZpc2libGUodHJ1ZSkgfVxyXG4gICAgICAgICAgb25Nb3VzZUxlYXZlID0geyBlID0+IHNldENvbnRlbnRWaXNpYmxlKGZhbHNlKSB9XHJcbiAgICAgICAgICBvbkNsaWNrID0geyBlID0+IHNldENvbnRlbnRWaXNpYmxlKHRydWUpIH1cclxuICAgID5cclxuXHJcbiAgICAgIDxidXR0b24gY2xhc3NOYW1lID0gXCJ3My1idXR0b24gdzMtaG92ZXItbm9uZSB3My1sYXJnZSBvdXRsaW5lLW5vbmVcIlxyXG4gICAgICAgICAgICAgIHN0eWxlID0ge3tiYWNrZ3JvdW5kOiAnbm9uZSd9fVxyXG4gICAgICA+XHJcbiAgICAgICAge3QoXCJoZWFkZXI6Q291cnNlc1wiKX1cclxuICAgICAgPC9idXR0b24+XHJcbiAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInczLXRleHRcIj48aSBjbGFzc05hbWU9XCJmYXMgZmEtYW5nbGUtZG93blwiLz48L3NwYW4+XHJcblxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YHczLWRyb3Bkb3duLWNvbnRlbnQgJHtjb250ZW50VmlzaWJsZT8ndzMtc2hvdyc6Jyd9YH0gc3R5bGU9e3twYWRkaW5nVG9wOiAnMjBweCcsIGJhY2tncm91bmQ6ICdub25lJ319PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidzMtYmFyLWJsb2NrIHczLXNhbmQgdzMtY2FyZFwiPlxyXG4gICAgICAgIHtcclxuICAgICAgICAgIHByb2dyYW1zLm1hcChwcm9ncmFtID0+IChcclxuICAgICAgICAgICAgPGEgaHJlZiA9IHtgL2Jyb3dzZS8ke3Byb2dyYW0uaWR9YH0ga2V5ID0ge3Byb2dyYW0uaWR9IGNsYXNzTmFtZT1cInczLWJhci1pdGVtIHczLWJ1dHRvblwiIG9uQ2xpY2sgPSB7bmF2aWdhdGUocHJvZ3JhbS5pZCl9PiB7cHJvZ3JhbS50aXRsZX0gPC9hPlxyXG4gICAgICAgICAgKSlcclxuICAgICAgICB9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG4gIGZ1bmN0aW9uIG5hdmlnYXRlKHBpZCkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICBuYXYubmF2aWdhdGUoJ2Jyb3dzZScsIHsgcGFyYW1zOiB7cGlkfSB9KTtcclxuICAgICAgc2V0Q29udGVudFZpc2libGUoZmFsc2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5pbXBvcnQgTG9nbyBmcm9tICcuL0xvZ28nO1xyXG5pbXBvcnQgQ2FydCBmcm9tICcuL0NhcnQnO1xyXG5pbXBvcnQgVXNlciBmcm9tICcuL1VzZXInO1xyXG5pbXBvcnQgQ291cnNlIGZyb20gJy4vQ291cnNlLkRyb3Bkb3duJztcclxuaW1wb3J0IEVucm9sbGVkQnV0dG9uIGZyb20gJy4vRW5yb2xsZWRCdXR0b24nO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeyBhY2NvdW50Q2xpZW50LCB1c2VyLCBwcm9ncmFtcywgaXNTY3JvbGxEb3duLCBjYXJkU3R5bGUsIGVuZHBvaW50IH0pIHtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lID0ge2B3My13aGl0ZSAke2NhcmRTdHlsZSAmJiBpc1Njcm9sbERvd24/ICd3My1jYXJkJzogJyd9YH0+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jb250YWluZXJcIiBzdHlsZSA9IHt7IHBvc2l0aW9uOiAncmVsYXRpdmUnLCBtYXhXaWR0aDogJzEyMDBweCcsIG1hcmdpbjogJ2F1dG8nIH19PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidzMtYmFyXCI+XHJcbiAgICAgICAgICA8YSBocmVmID0gXCIvXCIgY2xhc3NOYW1lPVwidzMtYmFyLWl0ZW0gdzMtYnV0dG9uIHczLWhvdmVyLW5vbmVcIiBzdHlsZSA9IHt7IG1hcmdpblJpZ2h0OiAnMjBweCcsIG1hcmdpblRvcDogJzJweCcgfX0gPlxyXG4gICAgICAgICAgICA8TG9nbyBpbWd1cmwgPSB7ZW5kcG9pbnQubG9nb30gLz5cclxuICAgICAgICAgIDwvYT5cclxuXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInczLWJhci1pdGVtIHczLWJvdHRvbWJhciB3My1ib3JkZXItd2hpdGUgdzMtaG92ZXItYm9yZGVyLWdyYXlcIiA+XHJcbiAgICAgICAgICAgIDxDb3Vyc2UgcHJvZ3JhbXMgPSB7cHJvZ3JhbXN9IC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInczLWJhci1pdGVtIHczLWJvdHRvbWJhciB3My1ib3JkZXItd2hpdGUgdzMtaG92ZXItYm9yZGVyLWdyYXlcIiA+XHJcbiAgICAgICAgICAgIDxFbnJvbGxlZEJ1dHRvbiB1c2VyID0ge3VzZXJ9IC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInczLWJhci1pdGVtIHczLXJpZ2h0XCI+XHJcbiAgICAgICAgICAgIDxDYXJ0IHVzZXIgPXt1c2VyfSAvPlxyXG4gICAgICAgICAgICA8VXNlciBhY2NvdW50Q2xpZW50ID0ge2FjY291bnRDbGllbnR9IHVzZXIgPSB7dXNlcn0gLz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XHJcbmltcG9ydCB7IG5hdiB9IGZyb20gJ0ByZWFsbWpzL3JlYWN0LW5hdmknO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeyBwcm9ncmFtcywgb25DbGljayB9KSB7XHJcblxyXG4gIGNvbnN0IFthY2NvcmRpb25WaXNpYmxlLCBzZXRBY2NvcmRpb25WaXNpYmxlXSA9IHVzZVN0YXRlKHRydWUpO1xyXG5cclxuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInczLWJsb2NrIG91dGxpbmUtbm9uZVwiIHN0eWxlID0ge3tiYWNrZ3JvdW5kOiAnbm9uZSd9fT5cclxuXHJcbiAgICAgIDxidXR0b24gY2xhc3NOYW1lID0gXCJ3My1iYXItaXRlbSB3My1idXR0b24gdzMtaG92ZXItbm9uZSB3My1sYXJnZSBvdXRsaW5lLW5vbmVcIiBvbkNsaWNrID0ge3RvZ2dsZUFjY29yZGlvbn0+XHJcbiAgICAgICAge3QoXCJoZWFkZXI6Q291cnNlc1wiKX0gPHNwYW4gY2xhc3NOYW1lID0gXCJ3My10ZXh0LWdyYXlcIiBzdHlsZSA9IHt7bWFyZ2luTGVmdDogJzhweCd9fT48aSBjbGFzc05hbWU9e2BmYXMgZmEtYW5nbGUtJHthY2NvcmRpb25WaXNpYmxlPyAndXAnIDogJ2Rvd24nfWB9Lz48L3NwYW4+XHJcbiAgICAgIDwvYnV0dG9uPlxyXG5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3My1iYXItYmxvY2sgdzMtc2FuZFwiIHN0eWxlID0ge3sgZGlzcGxheTogYWNjb3JkaW9uVmlzaWJsZT8gJ2Jsb2NrJyA6ICdub25lJyB9fSA+XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgcHJvZ3JhbXMubWFwKHByb2dyYW0gPT4gKFxyXG4gICAgICAgICAgICA8YSAga2V5ID0ge3Byb2dyYW0uaWR9XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3My1iYXItaXRlbSB3My1idXR0b25cIlxyXG4gICAgICAgICAgICAgICAgc3R5bGUgPSB7eyBtYXJnaW5MZWZ0OiAnOHB4J319XHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrID0ge25hdmlnYXRlKHByb2dyYW0uaWQpfVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAge3Byb2dyYW0udGl0bGV9XHJcbiAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICkpXHJcbiAgICAgICAgfVxyXG4gICAgICA8L2Rpdj5cclxuXHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG5cclxuICBmdW5jdGlvbiBuYXZpZ2F0ZShwaWQpIHtcclxuICAgIHJldHVybiBmdW5jdGlvbihlKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgbmF2Lm5hdmlnYXRlKCdicm93c2UnLCB7IHBhcmFtczoge3BpZH0gfSk7XHJcbiAgICAgIG9uQ2xpY2sgJiYgb25DbGljaygpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdG9nZ2xlQWNjb3JkaW9uKCkge1xyXG4gICAgc2V0QWNjb3JkaW9uVmlzaWJsZSghYWNjb3JkaW9uVmlzaWJsZSk7XHJcbiAgfVxyXG5cclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmltcG9ydCBDb3Vyc2UgZnJvbSAnLi9Db3Vyc2UuQWNjb3JkaW9uJztcclxuaW1wb3J0IEVucm9sbGVkQnV0dG9uIGZyb20gJy4vRW5yb2xsZWRCdXR0b24nO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeyBwcm9ncmFtcywgdXNlciwgc2VsZiB9KSB7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtc2lkZWJhciB3My1iYXItYmxvY2sgdzMtYW5pbWF0ZS1sZWZ0IHczLWNhcmRcIiBzdHlsZSA9IHt7IHRvcDogMCwgd2lkdGg6ICc1MCUnLCBtaW5XaWR0aDogJzI1MHB4JyB9fT5cclxuICAgICAgPGJ1dHRvbiBjbGFzc05hbWUgPSBcInczLWJhci1pdGVtIHczLWJ1dHRvbiB3My14eGxhcmdlIHczLXRleHQtcmVkXCIgb25DbGljayA9IHtoaWRlfSA+XHJcbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lID0gXCJ3My1yaWdodFwiPiAmdGltZXM7IDwvc3Bhbj5cclxuICAgICAgPC9idXR0b24+XHJcblxyXG4gICAgICA8RW5yb2xsZWRCdXR0b24gdXNlciA9IHt1c2VyfSAvPlxyXG5cclxuICAgICAgPENvdXJzZSBwcm9ncmFtcyA9IHtwcm9ncmFtc30gb25DbGljayA9IHtoaWRlfSAvPlxyXG5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG4gIGZ1bmN0aW9uIGhpZGUoKSB7XHJcbiAgICBzZWxmLnJlc29sdmUoKTtcclxuICB9XHJcblxyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuaW1wb3J0IHsgbmF2IH0gZnJvbSAnQHJlYWxtanMvcmVhY3QtbmF2aSc7XHJcblxyXG5pbXBvcnQgTG9nbyBmcm9tICcuL0xvZ28nO1xyXG5pbXBvcnQgQ2FydCBmcm9tICcuL0NhcnQnO1xyXG5pbXBvcnQgVXNlciBmcm9tICcuL1VzZXInO1xyXG5pbXBvcnQgU2lkZWJhciBmcm9tICcuL1NpZGViYXInO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeyBhY2NvdW50Q2xpZW50LCB1c2VyLCBpc1Njcm9sbERvd24sIGNhcmRTdHlsZSwgZW5kcG9pbnQgfSkge1xyXG5cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lID0ge2B3My13aGl0ZSAke2NhcmRTdHlsZSAmJiBpc1Njcm9sbERvd24/ICd3My1jYXJkJzogJyd9YH0gc3R5bGUgPSB7eyBwb3NpdGlvbjogJ3JlbGF0aXZlJywgbWFyZ2luQm90dG9tOiAnMzJweCcgfX0gPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInczLWJhclwiPlxyXG5cclxuICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZSA9IFwidzMtYmFyLWl0ZW0gdzMtYnV0dG9uIHczLWhvdmVyLW5vbmUgdzMteGxhcmdlXCJcclxuICAgICAgICAgICAgICAgIHN0eWxlID0ge3sgbWFyZ2luOiAnOHB4JywgcGFkZGluZzogJzhweCA0cHgnIH19XHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrID0ge3Nob3dTaWRlYmFyfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIOKYsFxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG5cclxuICAgICAgICA8YSBocmVmID0gXCIvXCIgY2xhc3NOYW1lPVwidzMtYmFyLWl0ZW0gdzMtYnV0dG9uIHczLWhvdmVyLW5vbmVcIiBzdHlsZSA9IHt7IG1hcmdpblRvcDogJzhweCcsIHBhZGRpbmc6ICc4cHggMCcgfX0gPlxyXG4gICAgICAgICAgPExvZ28gaW1ndXJsID0ge2VuZHBvaW50LmxvZ299IC8+XHJcbiAgICAgICAgPC9hPlxyXG5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInczLWJhci1pdGVtIHczLXJpZ2h0XCIgc3R5bGUgPSB7eyBwYWRkaW5nOiAnMTJweCA0cHgnfX0+XHJcbiAgICAgICAgICA8Q2FydCB1c2VyID17dXNlcn0gLz5cclxuICAgICAgICAgIDxVc2VyIGFjY291bnRDbGllbnQgPSB7YWNjb3VudENsaWVudH0gdXNlciA9IHt1c2VyfSAvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG4gIGZ1bmN0aW9uIHNob3dTaWRlYmFyKCkge1xyXG4gICAgbmF2LnBvcHVwKFNpZGViYXIsIHsgb3ZlcmxheTogdHJ1ZSwgb25DbGlja092ZXJsYXk6IHNlbGYgPT4gc2VsZi5yZXNvbHZlKCkgfSk7XHJcbiAgfVxyXG5cclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHsgaW1ndXJsIH0pIHtcclxuICByZXR1cm4gKFxyXG4gICAgPHNwYW4gY2xhc3NOYW1lID0gXCJ3My13aWRlXCIgc3R5bGU9e3tmb250RmFtaWx5OiAnUmFsZXdheScsZm9udFNpemU6ICcyNHB4JywgZm9udFdlaWdodDogJ25vcm1hbCcsIHBvc2l0aW9uOiAncmVsYXRpdmUnfX0+XHJcbiAgICAgIDxzcGFuIHN0eWxlPXt7Y29sb3I6ICcjZjQ0MzM2JywgZm9udFdlaWdodDogJ2JvbGQnfX0+Uzwvc3Bhbj5cclxuICAgICAgPHNwYW4gc3R5bGU9e3tjb2xvcjogJyMwMDUwRUYnfX0+dHVkaTwvc3Bhbj5cclxuICAgICAgPHNwYW4gc3R5bGU9e3tjb2xvcjogJyMzQTNBM0EnLCBtYXJnaW5SaWdodDogJzBweCd9fT5oYTwvc3Bhbj5cclxuICAgICAgPGltZyBzcmMgPSB7aW1ndXJsfSB3aWR0aD1cIjIycHhcIiBzdHlsZSA9IHt7bWFyZ2luVG9wOiAnLTEwcHgnIH19Lz5cclxuICAgIDwvc3Bhbj5cclxuICApO1xyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7IGFjY291bnRDbGllbnQsIHVzZXIgfSkge1xyXG5cclxuICBpZiAodXNlcikge1xyXG4gICAgcmV0dXJuICggPFVzZXJTbmlwZXQgYWNjb3VudENsaWVudCA9IHthY2NvdW50Q2xpZW50fSB1c2VyID0ge3VzZXJ9IC8+ICk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiAoIDxMb2dpbiBhY2NvdW50Q2xpZW50ID0ge2FjY291bnRDbGllbnR9IC8+IClcclxuICB9XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBMb2dpbih7IGFjY291bnRDbGllbnQgfSkge1xyXG5cclxuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInczLWxhcmdlIHczLWJhci1pdGVtIHczLWJ1dHRvbiB3My1ib3JkZXIgdzMtYm9yZGVyLWdyYXkgdzMtaG92ZXItYmx1ZSB3My1ob3Zlci1ib3JkZXItd2hpdGUgdzMtcm91bmRcIlxyXG4gICAgICAgICAgICBzdHlsZT17e3Bvc2l0aW9uOiAncmVsYXRpdmUnLCBtYXJnaW46ICcwcHggOHB4J319XHJcbiAgICAgICAgICAgIG9uQ2xpY2sgPSB7c2lnbmlufVxyXG4gICAgPlxyXG4gICAgICB7dChcImhlYWRlcjpMb2dpblwiKX1cclxuICAgIDwvYnV0dG9uPlxyXG4gICk7XHJcblxyXG4gIGZ1bmN0aW9uIHNpZ25pbigpIHtcclxuICAgIGFjY291bnRDbGllbnQuc2lnbmluKCk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gVXNlclNuaXBldCh7IGFjY291bnRDbGllbnQsIHVzZXIgfSkge1xyXG5cclxuICBjb25zdCBbc2hvd0Ryb3AsIHNldFNob3dEcm9wXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3Qgd2lkdGggPSAnMzBweCc7XHJcbiAgY29uc3QgaGVpZ2h0ID0gJzMwcHgnO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBzdHlsZSA9IHt7dGV4dEFsaWduOiAnY2VudGVyJywgZGlzcGxheTogJ2lubGluZS1ibG9jaycsIG1hcmdpblRvcDogJzRweCcsIG1hcmdpblJpZ2h0OiAnNHB4J319PlxyXG4gICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cInczLWJ1dHRvbiB3My1jaXJjbGUgdzMtYmx1ZSB3My1ob3Zlci1jYXJkIG91dGxpbmUtbm9uZVwiXHJcbiAgICAgICAgICAgICAgc3R5bGUgPSB7eyB3aWR0aCwgaGVpZ2h0LCBwYWRkaW5nOiAnNHB4IDAnfX1cclxuICAgICAgICAgICAgICBvbkNsaWNrID0geyBzaG93RHJvcE1lbnUgfVxyXG4gICAgICA+XHJcbiAgICAgICAge3VzZXIucHJvZmlsZS5kaXNwbGF5TmFtZSAmJiB1c2VyLnByb2ZpbGUuZGlzcGxheU5hbWUuY2hhckF0KDApIHx8ICdVJ31cclxuICAgICAgPC9idXR0b24+XHJcbiAgICAgIHtcclxuICAgICAgICBzaG93RHJvcD8gPERyb3BNZW51IGFjY291bnRDbGllbnQgPSB7YWNjb3VudENsaWVudH0gdXNlciA9IHt1c2VyfSAvPiA6IG51bGxcclxuICAgICAgfVxyXG5cclxuXHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG5cclxuICAgIGZ1bmN0aW9uIHNob3dEcm9wTWVudSgpIHtcclxuICAgICAgc2V0U2hvd0Ryb3AoIXNob3dEcm9wKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIERyb3BNZW51KHsgYWNjb3VudENsaWVudCwgdXNlciB9KSB7XHJcblxyXG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jYXJkIHczLXNhbmQgdzMtcm91bmRcIlxyXG4gICAgICAgICAgc3R5bGUgPSB7eyBwb3NpdGlvbjogJ2Fic29sdXRlJywgd2lkdGg6ICcyNTBweCcsIHJpZ2h0OiAnMTBweCcsIG1hcmdpblRvcDogJzVweCcsIHpJbmRleDogMSB9fVxyXG4gICAgPlxyXG4gICAgICA8cCBjbGFzc05hbWUgPSBcInRleHQtYm9sZFwiPlxyXG4gICAgICAgIHt1c2VyLnByb2ZpbGUuZGlzcGxheU5hbWUgfHwgJ05hbWUnfVxyXG4gICAgICA8L3A+XHJcbiAgICAgIDxwPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3NOYW1lID0gXCJ3My1idXR0b24gdzMtYm9yZGVyIHczLWJvcmRlci1ncmF5IHczLXJvdW5kIHczLXdoaXRlXCIgb25DbGljayA9IHtzaWdub3V0fT5cclxuICAgICAgICAgIDxpIGNsYXNzTmFtZSA9IFwiZmFzIGZhLXNpZ24tb3V0LWFsdFwiLz4ge3QoXCJoZWFkZXI6U2lnbm91dFwiKX1cclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgPC9wPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxuXHJcbiAgZnVuY3Rpb24gc2lnbm91dCgpIHtcclxuICAgIGFjY291bnRDbGllbnQuc2lnbm91dCgpO1xyXG4gIH1cclxuXHJcbn0iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHkoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHkoMjI3KSk7dmFyIGJhPW5ldyBTZXQsY2E9e307ZnVuY3Rpb24gZGEoYSxiKXtlYShhLGIpO2VhKGErXCJDYXB0dXJlXCIsYil9XG5mdW5jdGlvbiBlYShhLGIpe2NhW2FdPWI7Zm9yKGE9MDthPGIubGVuZ3RoO2ErKyliYS5hZGQoYlthXSl9XG52YXIgZmE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLGhhPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxpYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFxuamE9e30sa2E9e307ZnVuY3Rpb24gbGEoYSl7aWYoaWEuY2FsbChrYSxhKSlyZXR1cm4hMDtpZihpYS5jYWxsKGphLGEpKXJldHVybiExO2lmKGhhLnRlc3QoYSkpcmV0dXJuIGthW2FdPSEwO2phW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIG1hKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gbmEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8bWEoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBCKGEsYixjLGQsZSxmLGcpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mO3RoaXMucmVtb3ZlRW1wdHlTdHJpbmc9Z312YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDAsITEsYSxudWxsLCExLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBCKGIsMSwhMSxhWzFdLG51bGwsITEsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYSxudWxsLCExLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGRpc2FibGVSZW1vdGVQbGF5YmFjayBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCEwLGEsbnVsbCwhMSwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw0LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDYsITEsYSxudWxsLCExLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7dmFyIG9hPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gcGEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EsXG5wYSk7RFtiXT1uZXcgQihiLDEsITEsYSxudWxsLCExLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5ELnhsaW5rSHJlZj1uZXcgQihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITAsITEpO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITAsITApfSk7XG5mdW5jdGlvbiBxYShhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChuYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/bGEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciByYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxzYT02MDEwMyx0YT02MDEwNix1YT02MDEwNyx3YT02MDEwOCx4YT02MDExNCx5YT02MDEwOSx6YT02MDExMCxBYT02MDExMixCYT02MDExMyxDYT02MDEyMCxEYT02MDExNSxFYT02MDExNixGYT02MDEyMSxHYT02MDEyOCxIYT02MDEyOSxJYT02MDEzMCxKYT02MDEzMTtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciBFPVN5bWJvbC5mb3I7c2E9RShcInJlYWN0LmVsZW1lbnRcIik7dGE9RShcInJlYWN0LnBvcnRhbFwiKTt1YT1FKFwicmVhY3QuZnJhZ21lbnRcIik7d2E9RShcInJlYWN0LnN0cmljdF9tb2RlXCIpO3hhPUUoXCJyZWFjdC5wcm9maWxlclwiKTt5YT1FKFwicmVhY3QucHJvdmlkZXJcIik7emE9RShcInJlYWN0LmNvbnRleHRcIik7QWE9RShcInJlYWN0LmZvcndhcmRfcmVmXCIpO0JhPUUoXCJyZWFjdC5zdXNwZW5zZVwiKTtDYT1FKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTtEYT1FKFwicmVhY3QubWVtb1wiKTtFYT1FKFwicmVhY3QubGF6eVwiKTtGYT1FKFwicmVhY3QuYmxvY2tcIik7RShcInJlYWN0LnNjb3BlXCIpO0dhPUUoXCJyZWFjdC5vcGFxdWUuaWRcIik7SGE9RShcInJlYWN0LmRlYnVnX3RyYWNlX21vZGVcIik7SWE9RShcInJlYWN0Lm9mZnNjcmVlblwiKTtKYT1FKFwicmVhY3QubGVnYWN5X2hpZGRlblwiKX1cbnZhciBLYT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gTGEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPUthJiZhW0thXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfXZhciBNYTtmdW5jdGlvbiBOYShhKXtpZih2b2lkIDA9PT1NYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtNYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTWErYX12YXIgT2E9ITE7XG5mdW5jdGlvbiBQYShhLGIpe2lmKCFhfHxPYSlyZXR1cm5cIlwiO09hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChrKXt2YXIgZD1rfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2goayl7ZD1rfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goayl7ZD1rfWEoKX19Y2F0Y2goayl7aWYoayYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBrLnN0YWNrKXtmb3IodmFyIGU9ay5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXJldHVyblwiXFxuXCIrZVtnXS5yZXBsYWNlKFwiIGF0IG5ldyBcIixcIiBhdCBcIik7d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e09hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TmEoYSk6XCJcIn1cbmZ1bmN0aW9uIFFhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBOYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE5hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBOYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE5hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1QYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1QYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMjI6cmV0dXJuIGE9UGEoYS50eXBlLl9yZW5kZXIsITEpLGE7Y2FzZSAxOnJldHVybiBhPVBhKGEudHlwZSwhMCksYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gUmEoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSB0YTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgeGE6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2Ugd2E6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBCYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBDYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB6YTpyZXR1cm4oYS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSB5YTpyZXR1cm4oYS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBBYTp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtcbnJldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgRGE6cmV0dXJuIFJhKGEudHlwZSk7Y2FzZSBGYTpyZXR1cm4gUmEoYS5fcmVuZGVyKTtjYXNlIEVhOmI9YS5fcGF5bG9hZDthPWEuX2luaXQ7dHJ5e3JldHVybiBSYShhKGIpKX1jYXRjaChjKXt9fXJldHVybiBudWxsfWZ1bmN0aW9uIFNhKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG0oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gJGEoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZxYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYWIoYSxiKXskYShhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2JiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmJiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gY2IoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGJiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIGRiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIGViKGEsYil7YT1tKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9ZGIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IoeSg5MSkpO3JldHVybiBtKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHkoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih5KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIga2I9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gbGIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBtYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/bGIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbmIsb2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09a2Iuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7bmI9bmJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bmIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9bmIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gcGIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBxYj17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxyYj1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMocWIpLmZvckVhY2goZnVuY3Rpb24oYSl7cmIuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtxYltiXT1xYlthXX0pfSk7ZnVuY3Rpb24gc2IoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fHFiLmhhc093blByb3BlcnR5KGEpJiZxYlthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiB0YihhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1zYihjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciB1Yj1tKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gdmIoYSxiKXtpZihiKXtpZih1YlthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoMTM3LGEpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHkoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHkoNjIpKTt9fVxuZnVuY3Rpb24gd2IoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fWZ1bmN0aW9uIHhiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgeWI9bnVsbCx6Yj1udWxsLEFiPW51bGw7XG5mdW5jdGlvbiBCYihhKXtpZihhPUNiKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgeWIpdGhyb3cgRXJyb3IoeSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1EYihiKSx5YihhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBFYihhKXt6Yj9BYj9BYi5wdXNoKGEpOkFiPVthXTp6Yj1hfWZ1bmN0aW9uIEZiKCl7aWYoemIpe3ZhciBhPXpiLGI9QWI7QWI9emI9bnVsbDtCYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQmIoYlthXSl9fWZ1bmN0aW9uIEdiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gSGIoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBJYigpe312YXIgSmI9R2IsS2I9ITEsTGI9ITE7ZnVuY3Rpb24gTWIoKXtpZihudWxsIT09emJ8fG51bGwhPT1BYilJYigpLEZiKCl9XG5mdW5jdGlvbiBOYihhLGIsYyl7aWYoTGIpcmV0dXJuIGEoYixjKTtMYj0hMDt0cnl7cmV0dXJuIEpiKGEsYixjKX1maW5hbGx5e0xiPSExLE1iKCl9fVxuZnVuY3Rpb24gT2IoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDt2YXIgZD1EYihjKTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgYyl0aHJvdyBFcnJvcih5KDIzMSxiLHR5cGVvZiBjKSk7cmV0dXJuIGN9dmFyIFBiPSExO2lmKGZhKXRyeXt2YXIgUWI9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KFFiLFwicGFzc2l2ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtQYj0hMH19KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYik7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpfWNhdGNoKGEpe1BiPSExfWZ1bmN0aW9uIFJiKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChuKXt0aGlzLm9uRXJyb3Iobil9fXZhciBTYj0hMSxUYj1udWxsLFViPSExLFZiPW51bGwsV2I9e29uRXJyb3I6ZnVuY3Rpb24oYSl7U2I9ITA7VGI9YX19O2Z1bmN0aW9uIFhiKGEsYixjLGQsZSxmLGcsaCxrKXtTYj0hMTtUYj1udWxsO1JiLmFwcGx5KFdiLGFyZ3VtZW50cyl9XG5mdW5jdGlvbiBZYihhLGIsYyxkLGUsZixnLGgsayl7WGIuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKFNiKXtpZihTYil7dmFyIGw9VGI7U2I9ITE7VGI9bnVsbH1lbHNlIHRocm93IEVycm9yKHkoMTk4KSk7VWJ8fChVYj0hMCxWYj1sKX19ZnVuY3Rpb24gWmIoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmZsYWdzJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiAkYihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGFjKGEpe2lmKFpiKGEpIT09YSl0aHJvdyBFcnJvcih5KDE4OCkpO31cbmZ1bmN0aW9uIGJjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPVpiKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGFjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGFjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IoeSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih5KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHkoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gY2MoYSl7YT1iYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRjKGEsYil7Zm9yKHZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1iOyl7aWYoYj09PWF8fGI9PT1jKXJldHVybiEwO2I9Yi5yZXR1cm59cmV0dXJuITF9dmFyIGVjLGZjLGdjLGhjLGljPSExLGpjPVtdLGtjPW51bGwsbGM9bnVsbCxtYz1udWxsLG5jPW5ldyBNYXAsb2M9bmV3IE1hcCxwYz1bXSxxYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiByYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSxkb21FdmVudE5hbWU6YixldmVudFN5c3RlbUZsYWdzOmN8MTYsbmF0aXZlRXZlbnQ6ZSx0YXJnZXRDb250YWluZXJzOltkXX19ZnVuY3Rpb24gc2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjprYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6bGM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6bWM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOm5jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOm9jLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gdGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1yYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmZmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gdWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4ga2M9dGMoa2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIGxjPXRjKGxjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBtYz10YyhtYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO25jLnNldChmLHRjKG5jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxvYy5zZXQoZix0YyhvYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiB2YyhhKXt2YXIgYj13YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVpiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPSRiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO2hjKGEubGFuZVByaW9yaXR5LGZ1bmN0aW9uKCl7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe2djKGMpfSl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfVxuZnVuY3Rpb24geGMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO2Zvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXJldHVybiBiPUNiKGMpLG51bGwhPT1iJiZmYyhiKSxhLmJsb2NrZWRPbj1jLCExO2Iuc2hpZnQoKX1yZXR1cm4hMH1mdW5jdGlvbiB6YyhhLGIsYyl7eGMoYSkmJmMuZGVsZXRlKGIpfVxuZnVuY3Rpb24gQWMoKXtmb3IoaWM9ITE7MDxqYy5sZW5ndGg7KXt2YXIgYT1qY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9Q2IoYS5ibG9ja2VkT24pO251bGwhPT1hJiZlYyhhKTticmVha31mb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yyl7YS5ibG9ja2VkT249YzticmVha31iLnNoaWZ0KCl9bnVsbD09PWEuYmxvY2tlZE9uJiZqYy5zaGlmdCgpfW51bGwhPT1rYyYmeGMoa2MpJiYoa2M9bnVsbCk7bnVsbCE9PWxjJiZ4YyhsYykmJihsYz1udWxsKTtudWxsIT09bWMmJnhjKG1jKSYmKG1jPW51bGwpO25jLmZvckVhY2goemMpO29jLmZvckVhY2goemMpfVxuZnVuY3Rpb24gQmMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLGljfHwoaWM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksQWMpKSl9XG5mdW5jdGlvbiBDYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBCYyhiLGEpfWlmKDA8amMubGVuZ3RoKXtCYyhqY1swXSxhKTtmb3IodmFyIGM9MTtjPGpjLmxlbmd0aDtjKyspe3ZhciBkPWpjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09a2MmJkJjKGtjLGEpO251bGwhPT1sYyYmQmMobGMsYSk7bnVsbCE9PW1jJiZCYyhtYyxhKTtuYy5mb3JFYWNoKGIpO29jLmZvckVhY2goYik7Zm9yKGM9MDtjPHBjLmxlbmd0aDtjKyspZD1wY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8cGMubGVuZ3RoJiYoYz1wY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOyl2YyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJnBjLnNoaWZ0KCl9XG5mdW5jdGlvbiBEYyhhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBFYz17YW5pbWF0aW9uZW5kOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6RGMoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxGYz17fSxHYz17fTtcbmZhJiYoR2M9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgRWMuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgRWMudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBIYyhhKXtpZihGY1thXSlyZXR1cm4gRmNbYV07aWYoIUVjW2FdKXJldHVybiBhO3ZhciBiPUVjW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIEdjKXJldHVybiBGY1thXT1iW2NdO3JldHVybiBhfVxudmFyIEljPUhjKFwiYW5pbWF0aW9uZW5kXCIpLEpjPUhjKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLEtjPUhjKFwiYW5pbWF0aW9uc3RhcnRcIiksTGM9SGMoXCJ0cmFuc2l0aW9uZW5kXCIpLE1jPW5ldyBNYXAsTmM9bmV3IE1hcCxPYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixJYyxcImFuaW1hdGlvbkVuZFwiLEpjLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsS2MsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXG5cImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIixMYyxcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gUGMoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV07ZT1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtOYy5zZXQoZCxiKTtNYy5zZXQoZCxlKTtkYShlLFtkXSl9fXZhciBRYz1yLnVuc3RhYmxlX25vdztRYygpO3ZhciBGPTg7XG5mdW5jdGlvbiBSYyhhKXtpZigwIT09KDEmYSkpcmV0dXJuIEY9MTUsMTtpZigwIT09KDImYSkpcmV0dXJuIEY9MTQsMjtpZigwIT09KDQmYSkpcmV0dXJuIEY9MTMsNDt2YXIgYj0yNCZhO2lmKDAhPT1iKXJldHVybiBGPTEyLGI7aWYoMCE9PShhJjMyKSlyZXR1cm4gRj0xMSwzMjtiPTE5MiZhO2lmKDAhPT1iKXJldHVybiBGPTEwLGI7aWYoMCE9PShhJjI1NikpcmV0dXJuIEY9OSwyNTY7Yj0zNTg0JmE7aWYoMCE9PWIpcmV0dXJuIEY9OCxiO2lmKDAhPT0oYSY0MDk2KSlyZXR1cm4gRj03LDQwOTY7Yj00MTg2MTEyJmE7aWYoMCE9PWIpcmV0dXJuIEY9NixiO2I9NjI5MTQ1NjAmYTtpZigwIT09YilyZXR1cm4gRj01LGI7aWYoYSY2NzEwODg2NClyZXR1cm4gRj00LDY3MTA4ODY0O2lmKDAhPT0oYSYxMzQyMTc3MjgpKXJldHVybiBGPTMsMTM0MjE3NzI4O2I9ODA1MzA2MzY4JmE7aWYoMCE9PWIpcmV0dXJuIEY9MixiO2lmKDAhPT0oMTA3Mzc0MTgyNCZhKSlyZXR1cm4gRj0xLDEwNzM3NDE4MjQ7XG5GPTg7cmV0dXJuIGF9ZnVuY3Rpb24gU2MoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIDE1O2Nhc2UgOTg6cmV0dXJuIDEwO2Nhc2UgOTc6Y2FzZSA5NjpyZXR1cm4gODtjYXNlIDk1OnJldHVybiAyO2RlZmF1bHQ6cmV0dXJuIDB9fWZ1bmN0aW9uIFRjKGEpe3N3aXRjaChhKXtjYXNlIDE1OmNhc2UgMTQ6cmV0dXJuIDk5O2Nhc2UgMTM6Y2FzZSAxMjpjYXNlIDExOmNhc2UgMTA6cmV0dXJuIDk4O2Nhc2UgOTpjYXNlIDg6Y2FzZSA3OmNhc2UgNjpjYXNlIDQ6Y2FzZSA1OnJldHVybiA5NztjYXNlIDM6Y2FzZSAyOmNhc2UgMTpyZXR1cm4gOTU7Y2FzZSAwOnJldHVybiA5MDtkZWZhdWx0OnRocm93IEVycm9yKHkoMzU4LGEpKTt9fVxuZnVuY3Rpb24gVWMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcztpZigwPT09YylyZXR1cm4gRj0wO3ZhciBkPTAsZT0wLGY9YS5leHBpcmVkTGFuZXMsZz1hLnN1c3BlbmRlZExhbmVzLGg9YS5waW5nZWRMYW5lcztpZigwIT09ZilkPWYsZT1GPTE1O2Vsc2UgaWYoZj1jJjEzNDIxNzcyNywwIT09Zil7dmFyIGs9ZiZ+ZzswIT09az8oZD1SYyhrKSxlPUYpOihoJj1mLDAhPT1oJiYoZD1SYyhoKSxlPUYpKX1lbHNlIGY9YyZ+ZywwIT09Zj8oZD1SYyhmKSxlPUYpOjAhPT1oJiYoZD1SYyhoKSxlPUYpO2lmKDA9PT1kKXJldHVybiAwO2Q9MzEtVmMoZCk7ZD1jJigoMD5kPzA6MTw8ZCk8PDEpLTE7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZykpe1JjKGIpO2lmKGU8PUYpcmV0dXJuIGI7Rj1lfWI9YS5lbnRhbmdsZWRMYW5lcztpZigwIT09Yilmb3IoYT1hLmVudGFuZ2xlbWVudHMsYiY9ZDswPGI7KWM9MzEtVmMoYiksZT0xPDxjLGR8PWFbY10sYiY9fmU7cmV0dXJuIGR9XG5mdW5jdGlvbiBXYyhhKXthPWEucGVuZGluZ0xhbmVzJi0xMDczNzQxODI1O3JldHVybiAwIT09YT9hOmEmMTA3Mzc0MTgyND8xMDczNzQxODI0OjB9ZnVuY3Rpb24gWGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxNTpyZXR1cm4gMTtjYXNlIDE0OnJldHVybiAyO2Nhc2UgMTI6cmV0dXJuIGE9WWMoMjQmfmIpLDA9PT1hP1hjKDEwLGIpOmE7Y2FzZSAxMDpyZXR1cm4gYT1ZYygxOTImfmIpLDA9PT1hP1hjKDgsYik6YTtjYXNlIDg6cmV0dXJuIGE9WWMoMzU4NCZ+YiksMD09PWEmJihhPVljKDQxODYxMTImfmIpLDA9PT1hJiYoYT01MTIpKSxhO2Nhc2UgMjpyZXR1cm4gYj1ZYyg4MDUzMDYzNjgmfmIpLDA9PT1iJiYoYj0yNjg0MzU0NTYpLGJ9dGhyb3cgRXJyb3IoeSgzNTgsYSkpO31mdW5jdGlvbiBZYyhhKXtyZXR1cm4gYSYtYX1mdW5jdGlvbiBaYyhhKXtmb3IodmFyIGI9W10sYz0wOzMxPmM7YysrKWIucHVzaChhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uICRjKGEsYixjKXthLnBlbmRpbmdMYW5lc3w9Yjt2YXIgZD1iLTE7YS5zdXNwZW5kZWRMYW5lcyY9ZDthLnBpbmdlZExhbmVzJj1kO2E9YS5ldmVudFRpbWVzO2I9MzEtVmMoYik7YVtiXT1jfXZhciBWYz1NYXRoLmNsejMyP01hdGguY2x6MzI6YWQsYmQ9TWF0aC5sb2csY2Q9TWF0aC5MTjI7ZnVuY3Rpb24gYWQoYSl7cmV0dXJuIDA9PT1hPzMyOjMxLShiZChhKS9jZHwwKXwwfXZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIGdkKGEsYixjLGQpe0tifHxJYigpO3ZhciBlPWhkLGY9S2I7S2I9ITA7dHJ5e0hiKGUsYSxiLGMsZCl9ZmluYWxseXsoS2I9Zil8fE1iKCl9fWZ1bmN0aW9uIGlkKGEsYixjLGQpe2VkKGRkLGhkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkKXtpZihmZCl7dmFyIGU7aWYoKGU9MD09PShiJjQpKSYmMDxqYy5sZW5ndGgmJi0xPHFjLmluZGV4T2YoYSkpYT1yYyhudWxsLGEsYixjLGQpLGpjLnB1c2goYSk7ZWxzZXt2YXIgZj15YyhhLGIsYyxkKTtpZihudWxsPT09ZillJiZzYyhhLGQpO2Vsc2V7aWYoZSl7aWYoLTE8cWMuaW5kZXhPZihhKSl7YT1yYyhmLGEsYixjLGQpO2pjLnB1c2goYSk7cmV0dXJufWlmKHVjKGYsYSxiLGMsZCkpcmV0dXJuO3NjKGEsZCl9amQoYSxiLGQsbnVsbCxjKX19fX1cbmZ1bmN0aW9uIHljKGEsYixjLGQpe3ZhciBlPXhiKGQpO2U9d2MoZSk7aWYobnVsbCE9PWUpe3ZhciBmPVpiKGUpO2lmKG51bGw9PT1mKWU9bnVsbDtlbHNle3ZhciBnPWYudGFnO2lmKDEzPT09Zyl7ZT0kYihmKTtpZihudWxsIT09ZSlyZXR1cm4gZTtlPW51bGx9ZWxzZSBpZigzPT09Zyl7aWYoZi5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWYudGFnP2Yuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtlPW51bGx9ZWxzZSBmIT09ZSYmKGU9bnVsbCl9fWpkKGEsYixkLGUsYyk7cmV0dXJuIG51bGx9dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO1xuZnVuY3Rpb24gbmQoKXtpZihtZClyZXR1cm4gbWQ7dmFyIGEsYj1sZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBtZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9bShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9bSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPW0oe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPW0oe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPW0oe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1tKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9bSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1tKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9bSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1tKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1tKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9bSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9bSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9ZmEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWZhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9ZmEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoZmEpe3ZhciB4ZTtpZihmYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO2E9cmU7aWYoS2IpYShiKTtlbHNle0tiPSEwO3RyeXtHYihhLGIpfWZpbmFsbHl7S2I9ITEsTWIoKX19fX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlLEllPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBKZShhLGIpe2lmKEhlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighSWUuY2FsbChiLGNbZF0pfHwhSGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBLZShhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBMZShhLGIpe3ZhciBjPUtlKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUtlKGMpfX1mdW5jdGlvbiBNZShhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP01lKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIE5lKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVhhKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPVhhKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE9lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgUGU9ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk9lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkplKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cblBjKFwiY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXNpbiBmb2N1cyBmb2N1c291dCBibHVyIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksXG4wKTtQYyhcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTtQYyhPYywyKTtmb3IodmFyIFZlPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxXZT0wO1dlPFZlLmxlbmd0aDtXZSsrKU5jLnNldChWZVtXZV0sMCk7ZWEoXCJvbk1vdXNlRW50ZXJcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtcbmVhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtlYShcIm9uUG9pbnRlckxlYXZlXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2RhKFwib25DaGFuZ2VcIixcImNoYW5nZSBjbGljayBmb2N1c2luIGZvY3Vzb3V0IGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uU2VsZWN0XCIsXCJmb2N1c291dCBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzaW4ga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25CZWZvcmVJbnB1dFwiLFtcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXSk7ZGEoXCJvbkNvbXBvc2l0aW9uRW5kXCIsXCJjb21wb3NpdGlvbmVuZCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5kYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsXCJjb21wb3NpdGlvbnVwZGF0ZSBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7dmFyIFhlPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxZZT1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChYZSkpO1xuZnVuY3Rpb24gWmUoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7WWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfX19aWYoVWIpdGhyb3cgYT1WYixVYj0hMSxWYj1udWxsLGE7fVxuZnVuY3Rpb24gRyhhLGIpe3ZhciBjPSRlKGIpLGQ9YStcIl9fYnViYmxlXCI7Yy5oYXMoZCl8fChhZihiLGEsMiwhMSksYy5hZGQoZCkpfXZhciBiZj1cIl9yZWFjdExpc3RlbmluZ1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIGNmKGEpe2FbYmZdfHwoYVtiZl09ITAsYmEuZm9yRWFjaChmdW5jdGlvbihiKXtZZS5oYXMoYil8fGRmKGIsITEsYSxudWxsKTtkZihiLCEwLGEsbnVsbCl9KSl9XG5mdW5jdGlvbiBkZihhLGIsYyxkKXt2YXIgZT00PGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XT9hcmd1bWVudHNbNF06MCxmPWM7XCJzZWxlY3Rpb25jaGFuZ2VcIj09PWEmJjkhPT1jLm5vZGVUeXBlJiYoZj1jLm93bmVyRG9jdW1lbnQpO2lmKG51bGwhPT1kJiYhYiYmWWUuaGFzKGEpKXtpZihcInNjcm9sbFwiIT09YSlyZXR1cm47ZXw9MjtmPWR9dmFyIGc9JGUoZiksaD1hK1wiX19cIisoYj9cImNhcHR1cmVcIjpcImJ1YmJsZVwiKTtnLmhhcyhoKXx8KGImJihlfD00KSxhZihmLGEsZSxiKSxnLmFkZChoKSl9XG5mdW5jdGlvbiBhZihhLGIsYyxkKXt2YXIgZT1OYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWU/MjplKXtjYXNlIDA6ZT1nZDticmVhaztjYXNlIDE6ZT1pZDticmVhaztkZWZhdWx0OmU9aGR9Yz1lLmJpbmQobnVsbCxiLGMsYSk7ZT12b2lkIDA7IVBifHxcInRvdWNoc3RhcnRcIiE9PWImJlwidG91Y2htb3ZlXCIhPT1iJiZcIndoZWVsXCIhPT1ifHwoZT0hMCk7ZD92b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse2NhcHR1cmU6ITAscGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMCk6dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCExKX1cbmZ1bmN0aW9uIGpkKGEsYixjLGQsZSl7dmFyIGY9ZDtpZigwPT09KGImMSkmJjA9PT0oYiYyKSYmbnVsbCE9PWQpYTpmb3IoOzspe2lmKG51bGw9PT1kKXJldHVybjt2YXIgZz1kLnRhZztpZigzPT09Z3x8ND09PWcpe3ZhciBoPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoaD09PWV8fDg9PT1oLm5vZGVUeXBlJiZoLnBhcmVudE5vZGU9PT1lKWJyZWFrO2lmKDQ9PT1nKWZvcihnPWQucmV0dXJuO251bGwhPT1nOyl7dmFyIGs9Zy50YWc7aWYoMz09PWt8fDQ9PT1rKWlmKGs9Zy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxrPT09ZXx8OD09PWsubm9kZVR5cGUmJmsucGFyZW50Tm9kZT09PWUpcmV0dXJuO2c9Zy5yZXR1cm59Zm9yKDtudWxsIT09aDspe2c9d2MoaCk7aWYobnVsbD09PWcpcmV0dXJuO2s9Zy50YWc7aWYoNT09PWt8fDY9PT1rKXtkPWY9Zztjb250aW51ZSBhfWg9aC5wYXJlbnROb2RlfX1kPWQucmV0dXJufU5iKGZ1bmN0aW9uKCl7dmFyIGQ9ZixlPXhiKGMpLGc9W107XG5hOnt2YXIgaD1NYy5nZXQoYSk7aWYodm9pZCAwIT09aCl7dmFyIGs9dGQseD1hO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2QoYykpYnJlYWsgYTtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOms9UmQ7YnJlYWs7Y2FzZSBcImZvY3VzaW5cIjp4PVwiZm9jdXNcIjtrPUZkO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOng9XCJibHVyXCI7az1GZDticmVhaztjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjprPUZkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilicmVhayBhO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6az1CZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjprPVxuRGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6az1WZDticmVhaztjYXNlIEljOmNhc2UgSmM6Y2FzZSBLYzprPUhkO2JyZWFrO2Nhc2UgTGM6az1YZDticmVhaztjYXNlIFwic2Nyb2xsXCI6az12ZDticmVhaztjYXNlIFwid2hlZWxcIjprPVpkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOms9SmQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6az1UZH12YXIgdz0wIT09KGImNCksej0hdyYmXCJzY3JvbGxcIj09PWEsdT13P251bGwhPT1oP2grXCJDYXB0dXJlXCI6bnVsbDpoO3c9W107Zm9yKHZhciB0PWQscTtudWxsIT09XG50Oyl7cT10O3ZhciB2PXEuc3RhdGVOb2RlOzU9PT1xLnRhZyYmbnVsbCE9PXYmJihxPXYsbnVsbCE9PXUmJih2PU9iKHQsdSksbnVsbCE9diYmdy5wdXNoKGVmKHQsdixxKSkpKTtpZih6KWJyZWFrO3Q9dC5yZXR1cm59MDx3Lmxlbmd0aCYmKGg9bmV3IGsoaCx4LG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmgsbGlzdGVuZXJzOnd9KSl9fWlmKDA9PT0oYiY3KSl7YTp7aD1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YTtrPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihoJiYwPT09KGImMTYpJiYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYod2MoeCl8fHhbZmZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCx4PXg/d2MoeCk6bnVsbCxudWxsIT09XG54JiYoej1aYih4KSx4IT09enx8NSE9PXgudGFnJiY2IT09eC50YWcpKXg9bnVsbH1lbHNlIGs9bnVsbCx4PWQ7aWYoayE9PXgpe3c9QmQ7dj1cIm9uTW91c2VMZWF2ZVwiO3U9XCJvbk1vdXNlRW50ZXJcIjt0PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdz1UZCx2PVwib25Qb2ludGVyTGVhdmVcIix1PVwib25Qb2ludGVyRW50ZXJcIix0PVwicG9pbnRlclwiO3o9bnVsbD09az9oOnVlKGspO3E9bnVsbD09eD9oOnVlKHgpO2g9bmV3IHcodix0K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9ejtoLnJlbGF0ZWRUYXJnZXQ9cTt2PW51bGw7d2MoZSk9PT1kJiYodz1uZXcgdyh1LHQrXCJlbnRlclwiLHgsYyxlKSx3LnRhcmdldD1xLHcucmVsYXRlZFRhcmdldD16LHY9dyk7ej12O2lmKGsmJngpYjp7dz1rO3U9eDt0PTA7Zm9yKHE9dztxO3E9Z2YocSkpdCsrO3E9MDtmb3Iodj11O3Y7dj1nZih2KSlxKys7Zm9yKDswPHQtcTspdz1nZih3KSx0LS07Zm9yKDswPHEtdDspdT1cbmdmKHUpLHEtLTtmb3IoO3QtLTspe2lmKHc9PT11fHxudWxsIT09dSYmdz09PXUuYWx0ZXJuYXRlKWJyZWFrIGI7dz1nZih3KTt1PWdmKHUpfXc9bnVsbH1lbHNlIHc9bnVsbDtudWxsIT09ayYmaGYoZyxoLGssdywhMSk7bnVsbCE9PXgmJm51bGwhPT16JiZoZihnLHoseCx3LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBKPXZlO2Vsc2UgaWYobWUoaCkpaWYod2UpSj1GZTtlbHNle0o9RGU7dmFyIEs9Q2V9ZWxzZShrPWgubm9kZU5hbWUpJiZcImlucHV0XCI9PT1rLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1oLnR5cGV8fFwicmFkaW9cIj09PWgudHlwZSkmJihKPUVlKTtpZihKJiYoSj1KKGEsZCkpKXtuZShnLEosYyxlKTticmVhayBhfUsmJksoYSxoLGQpO1wiZm9jdXNvdXRcIj09PWEmJihLPWguX3dyYXBwZXJTdGF0ZSkmJlxuSy5jb250cm9sbGVkJiZcIm51bWJlclwiPT09aC50eXBlJiZiYihoLFwibnVtYmVyXCIsaC52YWx1ZSl9Sz1kP3VlKGQpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjppZihtZShLKXx8XCJ0cnVlXCI9PT1LLmNvbnRlbnRFZGl0YWJsZSlRZT1LLFJlPWQsU2U9bnVsbDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpTZT1SZT1RZT1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpUZT0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6VGU9ITE7VWUoZyxjLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihQZSlicmVhaztjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOlVlKGcsYyxlKX12YXIgUTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6TD1cIm9uQ29tcG9zaXRpb25FbmRcIjticmVhayBiO1xuY2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6TD1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifUw9dm9pZCAwfWVsc2UgaWU/Z2UoYSxjKSYmKEw9XCJvbkNvbXBvc2l0aW9uRW5kXCIpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtMJiYoZGUmJlwia29cIiE9PWMubG9jYWxlJiYoaWV8fFwib25Db21wb3NpdGlvblN0YXJ0XCIhPT1MP1wib25Db21wb3NpdGlvbkVuZFwiPT09TCYmaWUmJihRPW5kKCkpOihrZD1lLGxkPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGllPSEwKSksSz1vZShkLEwpLDA8Sy5sZW5ndGgmJihMPW5ldyBMZChMLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6TCxsaXN0ZW5lcnM6S30pLFE/TC5kYXRhPVE6KFE9aGUoYyksbnVsbCE9PVEmJihMLmRhdGE9USkpKSk7aWYoUT1jZT9qZShhLGMpOmtlKGEsYykpZD1vZShkLFwib25CZWZvcmVJbnB1dFwiKSwwPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXG5cImJlZm9yZWlucHV0XCIsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6ZSxsaXN0ZW5lcnM6ZH0pLGUuZGF0YT1RKX1zZShnLGIpfSl9ZnVuY3Rpb24gZWYoYSxiLGMpe3JldHVybntpbnN0YW5jZTphLGxpc3RlbmVyOmIsY3VycmVudFRhcmdldDpjfX1mdW5jdGlvbiBvZShhLGIpe2Zvcih2YXIgYz1iK1wiQ2FwdHVyZVwiLGQ9W107bnVsbCE9PWE7KXt2YXIgZT1hLGY9ZS5zdGF0ZU5vZGU7NT09PWUudGFnJiZudWxsIT09ZiYmKGU9ZixmPU9iKGEsYyksbnVsbCE9ZiYmZC51bnNoaWZ0KGVmKGEsZixlKSksZj1PYihhLGIpLG51bGwhPWYmJmQucHVzaChlZihhLGYsZSkpKTthPWEucmV0dXJufXJldHVybiBkfWZ1bmN0aW9uIGdmKGEpe2lmKG51bGw9PT1hKXJldHVybiBudWxsO2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBoZihhLGIsYyxkLGUpe2Zvcih2YXIgZj1iLl9yZWFjdE5hbWUsZz1bXTtudWxsIT09YyYmYyE9PWQ7KXt2YXIgaD1jLGs9aC5hbHRlcm5hdGUsbD1oLnN0YXRlTm9kZTtpZihudWxsIT09ayYmaz09PWQpYnJlYWs7NT09PWgudGFnJiZudWxsIT09bCYmKGg9bCxlPyhrPU9iKGMsZiksbnVsbCE9ayYmZy51bnNoaWZ0KGVmKGMsayxoKSkpOmV8fChrPU9iKGMsZiksbnVsbCE9ayYmZy5wdXNoKGVmKGMsayxoKSkpKTtjPWMucmV0dXJufTAhPT1nLmxlbmd0aCYmYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpnfSl9ZnVuY3Rpb24gamYoKXt9dmFyIGtmPW51bGwsbGY9bnVsbDtmdW5jdGlvbiBtZihhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBuZihhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIG9mPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHBmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBxZihhKXsxPT09YS5ub2RlVHlwZT9hLnRleHRDb250ZW50PVwiXCI6OT09PWEubm9kZVR5cGUmJihhPWEuYm9keSxudWxsIT1hJiYoYS50ZXh0Q29udGVudD1cIlwiKSl9XG5mdW5jdGlvbiByZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1mdW5jdGlvbiBzZihhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiJFwiPT09Y3x8XCIkIVwiPT09Y3x8XCIkP1wiPT09Yyl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2VcIi8kXCI9PT1jJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgdGY9MDtmdW5jdGlvbiB1ZihhKXtyZXR1cm57JCR0eXBlb2Y6R2EsdG9TdHJpbmc6YSx2YWx1ZU9mOmF9fXZhciB2Zj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSx3Zj1cIl9fcmVhY3RGaWJlciRcIit2Zix4Zj1cIl9fcmVhY3RQcm9wcyRcIit2ZixmZj1cIl9fcmVhY3RDb250YWluZXIkXCIrdmYseWY9XCJfX3JlYWN0RXZlbnRzJFwiK3ZmO1xuZnVuY3Rpb24gd2MoYSl7dmFyIGI9YVt3Zl07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbZmZdfHxjW3dmXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPXNmKGEpO251bGwhPT1hOyl7aWYoYz1hW3dmXSlyZXR1cm4gYzthPXNmKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDYihhKXthPWFbd2ZdfHxhW2ZmXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gdWUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHkoMzMpKTt9ZnVuY3Rpb24gRGIoYSl7cmV0dXJuIGFbeGZdfHxudWxsfVxuZnVuY3Rpb24gJGUoYSl7dmFyIGI9YVt5Zl07dm9pZCAwPT09YiYmKGI9YVt5Zl09bmV3IFNldCk7cmV0dXJuIGJ9dmFyIHpmPVtdLEFmPS0xO2Z1bmN0aW9uIEJmKGEpe3JldHVybntjdXJyZW50OmF9fWZ1bmN0aW9uIEgoYSl7MD5BZnx8KGEuY3VycmVudD16ZltBZl0semZbQWZdPW51bGwsQWYtLSl9ZnVuY3Rpb24gSShhLGIpe0FmKys7emZbQWZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQ2Y9e30sTT1CZihDZiksTj1CZighMSksRGY9Q2Y7XG5mdW5jdGlvbiBFZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIENmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEZmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gR2YoKXtIKE4pO0goTSl9ZnVuY3Rpb24gSGYoYSxiLGMpe2lmKE0uY3VycmVudCE9PUNmKXRocm93IEVycm9yKHkoMTY4KSk7SShNLGIpO0koTixjKX1cbmZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IoeSgxMDgsUmEoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbSh7fSxjLGQpfWZ1bmN0aW9uIEpmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxDZjtEZj1NLmN1cnJlbnQ7SShNLGEpO0koTixOLmN1cnJlbnQpO3JldHVybiEwfWZ1bmN0aW9uIEtmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih5KDE2OSkpO2M/KGE9SWYoYSxiLERmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChOKSxIKE0pLEkoTSxhKSk6SChOKTtJKE4sYyl9XG52YXIgTGY9bnVsbCxNZj1udWxsLE5mPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LE9mPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxQZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLFFmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsUmY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsU2Y9ci51bnN0YWJsZV9ub3csVGY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxVZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFZmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksV2Y9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxYZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFlmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFpmPXt9LCRmPXZvaWQgMCE9PVJmP1JmOmZ1bmN0aW9uKCl7fSxhZz1udWxsLGJnPW51bGwsY2c9ITEsZGc9U2YoKSxPPTFFND5kZz9TZjpmdW5jdGlvbigpe3JldHVybiBTZigpLWRnfTtcbmZ1bmN0aW9uIGVnKCl7c3dpdGNoKFRmKCkpe2Nhc2UgVWY6cmV0dXJuIDk5O2Nhc2UgVmY6cmV0dXJuIDk4O2Nhc2UgV2Y6cmV0dXJuIDk3O2Nhc2UgWGY6cmV0dXJuIDk2O2Nhc2UgWWY6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGZnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBVZjtjYXNlIDk4OnJldHVybiBWZjtjYXNlIDk3OnJldHVybiBXZjtjYXNlIDk2OnJldHVybiBYZjtjYXNlIDk1OnJldHVybiBZZjtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBnZyhhLGIpe2E9ZmcoYSk7cmV0dXJuIE5mKGEsYil9ZnVuY3Rpb24gaGcoYSxiLGMpe2E9ZmcoYSk7cmV0dXJuIE9mKGEsYixjKX1mdW5jdGlvbiBpZygpe2lmKG51bGwhPT1iZyl7dmFyIGE9Ymc7Ymc9bnVsbDtQZihhKX1qZygpfVxuZnVuY3Rpb24gamcoKXtpZighY2cmJm51bGwhPT1hZyl7Y2c9ITA7dmFyIGE9MDt0cnl7dmFyIGI9YWc7Z2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO2FnPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PWFnJiYoYWc9YWcuc2xpY2UoYSsxKSksT2YoVWYsaWcpLGM7fWZpbmFsbHl7Y2c9ITF9fX12YXIga2c9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gbGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1tKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIG1nPUJmKG51bGwpLG5nPW51bGwsb2c9bnVsbCxwZz1udWxsO2Z1bmN0aW9uIHFnKCl7cGc9b2c9bmc9bnVsbH1cbmZ1bmN0aW9uIHJnKGEpe3ZhciBiPW1nLmN1cnJlbnQ7SChtZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBzZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZigoYS5jaGlsZExhbmVzJmIpPT09YilpZihudWxsPT09Y3x8KGMuY2hpbGRMYW5lcyZiKT09PWIpYnJlYWs7ZWxzZSBjLmNoaWxkTGFuZXN8PWI7ZWxzZSBhLmNoaWxkTGFuZXN8PWIsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHRnKGEsYil7bmc9YTtwZz1vZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKDAhPT0oYS5sYW5lcyZiKSYmKHVnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHZnKGEsYil7aWYocGchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKXBnPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1vZyl7aWYobnVsbD09PW5nKXRocm93IEVycm9yKHkoMzA4KSk7b2c9YjtuZy5kZXBlbmRlbmNpZXM9e2xhbmVzOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIG9nPW9nLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB3Zz0hMTtmdW5jdGlvbiB4ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB5ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB6ZyhhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1mdW5jdGlvbiBBZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIEJnKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZSxkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kJiYoZD1kLnVwZGF0ZVF1ZXVlLGM9PT1kKSl7dmFyIGU9bnVsbCxmPW51bGw7Yz1jLmZpcnN0QmFzZVVwZGF0ZTtpZihudWxsIT09Yyl7ZG97dmFyIGc9e2V2ZW50VGltZTpjLmV2ZW50VGltZSxsYW5lOmMubGFuZSx0YWc6Yy50YWcscGF5bG9hZDpjLnBheWxvYWQsY2FsbGJhY2s6Yy5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT1mP2U9Zj1nOmY9Zi5uZXh0PWc7Yz1jLm5leHR9d2hpbGUobnVsbCE9PWMpO251bGw9PT1mP2U9Zj1iOmY9Zi5uZXh0PWJ9ZWxzZSBlPWY9YjtjPXtiYXNlU3RhdGU6ZC5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUsbGFzdEJhc2VVcGRhdGU6ZixzaGFyZWQ6ZC5zaGFyZWQsZWZmZWN0czpkLmVmZmVjdHN9O2EudXBkYXRlUXVldWU9YztyZXR1cm59YT1jLmxhc3RCYXNlVXBkYXRlO251bGw9PT1hP2MuZmlyc3RCYXNlVXBkYXRlPWI6YS5uZXh0PVxuYjtjLmxhc3RCYXNlVXBkYXRlPWJ9XG5mdW5jdGlvbiBDZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3dnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG49YS5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe249bi51cGRhdGVRdWV1ZTt2YXIgQT1uLmxhc3RCYXNlVXBkYXRlO0EhPT1nJiYobnVsbD09PUE/bi5maXJzdEJhc2VVcGRhdGU9bDpBLm5leHQ9bCxuLmxhc3RCYXNlVXBkYXRlPWspfX1pZihudWxsIT09Zil7QT1lLmJhc2VTdGF0ZTtnPTA7bj1sPWs9bnVsbDtkb3toPWYubGFuZTt2YXIgcD1mLmV2ZW50VGltZTtpZigoZCZoKT09PWgpe251bGwhPT1uJiYobj1uLm5leHQ9e2V2ZW50VGltZTpwLGxhbmU6MCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxcbm5leHQ6bnVsbH0pO2E6e3ZhciBDPWEseD1mO2g9YjtwPWM7c3dpdGNoKHgudGFnKXtjYXNlIDE6Qz14LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEMpe0E9Qy5jYWxsKHAsQSxoKTticmVhayBhfUE9QzticmVhayBhO2Nhc2UgMzpDLmZsYWdzPUMuZmxhZ3MmLTQwOTd8NjQ7Y2FzZSAwOkM9eC5wYXlsb2FkO2g9XCJmdW5jdGlvblwiPT09dHlwZW9mIEM/Qy5jYWxsKHAsQSxoKTpDO2lmKG51bGw9PT1ofHx2b2lkIDA9PT1oKWJyZWFrIGE7QT1tKHt9LEEsaCk7YnJlYWsgYTtjYXNlIDI6d2c9ITB9fW51bGwhPT1mLmNhbGxiYWNrJiYoYS5mbGFnc3w9MzIsaD1lLmVmZmVjdHMsbnVsbD09PWg/ZS5lZmZlY3RzPVtmXTpoLnB1c2goZikpfWVsc2UgcD17ZXZlbnRUaW1lOnAsbGFuZTpoLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLG5leHQ6bnVsbH0sbnVsbD09PW4/KGw9bj1wLGs9QSk6bj1uLm5leHQ9cCxnfD1oO2Y9Zi5uZXh0O2lmKG51bGw9PT1cbmYpaWYoaD1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1oKWJyZWFrO2Vsc2UgZj1oLm5leHQsaC5uZXh0PW51bGwsZS5sYXN0QmFzZVVwZGF0ZT1oLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKTtudWxsPT09biYmKGs9QSk7ZS5iYXNlU3RhdGU9aztlLmZpcnN0QmFzZVVwZGF0ZT1sO2UubGFzdEJhc2VVcGRhdGU9bjtEZ3w9ZzthLmxhbmVzPWc7YS5tZW1vaXplZFN0YXRlPUF9fWZ1bmN0aW9uIEVnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZSl0aHJvdyBFcnJvcih5KDE5MSxlKSk7ZS5jYWxsKGQpfX19dmFyIEZnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24gR2coYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm0oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEtnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbHMpP1piKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi50YWc9MTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGM9SGcoKSxkPUlnKGEpLGU9emcoYyxkKTtlLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZS5jYWxsYmFjaz1cbmIpO0FnKGEsZSk7SmcoYSxkLGMpfX07ZnVuY3Rpb24gTGcoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hSmUoYyxkKXx8IUplKGUsZik6ITB9XG5mdW5jdGlvbiBNZyhhLGIsYyl7dmFyIGQ9ITEsZT1DZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj12ZyhmKTooZT1GZihiKT9EZjpNLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9FZihhLGUpOkNmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9S2c7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBPZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUZnO3hnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9dmcoZik6KGY9RmYoYik/RGY6TS5jdXJyZW50LGUuY29udGV4dD1FZihhLGYpKTtDZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoR2coYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksQ2coYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NCl9dmFyIFBnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBRZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHkoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IoeSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RmcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IoeSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IoeSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFJnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHkoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7fVxuZnVuY3Rpb24gU2coYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5mbGFncz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1UZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFncz0yLFxuYyk6ZDtiLmZsYWdzPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmZsYWdzPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1VZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1RZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VmcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UWcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9XG5XZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbihhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9WGcoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBBKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1VZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYz1WZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1RZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgdGE6cmV0dXJuIGI9V2coYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKFBnKGIpfHxMYShiKSlyZXR1cm4gYj1YZyhiLFxuYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1JnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PXVhP24oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSB0YTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihQZyhjKXx8TGEoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bihhLGIsYyxkLG51bGwpO1JnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQyhhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxcbm51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT11YT9uKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSB0YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihQZyhkKXx8TGEoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbihiLGEsZCxlLG51bGwpO1JnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsdT1nLHo9Zz0wLHE9bnVsbDtudWxsIT09dSYmejxoLmxlbmd0aDt6Kyspe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIG49cChlLHUsaFt6XSxrKTtpZihudWxsPT09bil7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT1cbm4uYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKG4sZyx6KTtudWxsPT09dD9sPW46dC5zaWJsaW5nPW47dD1uO3U9cX1pZih6PT09aC5sZW5ndGgpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoO3o8aC5sZW5ndGg7eisrKXU9QShlLGhbel0sayksbnVsbCE9PXUmJihnPWYodSxnLHopLG51bGw9PT10P2w9dTp0LnNpYmxpbmc9dSx0PXUpO3JldHVybiBsfWZvcih1PWQoZSx1KTt6PGgubGVuZ3RoO3orKylxPUModSxlLHosaFt6XSxrKSxudWxsIT09cSYmKGEmJm51bGwhPT1xLmFsdGVybmF0ZSYmdS5kZWxldGUobnVsbD09PXEua2V5P3o6cS5rZXkpLGc9ZihxLGcseiksbnVsbD09PXQ/bD1xOnQuc2libGluZz1xLHQ9cSk7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiB3KGUsZyxoLGspe3ZhciBsPUxhKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHkoMTUwKSk7aD1sLmNhbGwoaCk7aWYobnVsbD09XG5oKXRocm93IEVycm9yKHkoMTUxKSk7Zm9yKHZhciB0PWw9bnVsbCx1PWcsej1nPTAscT1udWxsLG49aC5uZXh0KCk7bnVsbCE9PXUmJiFuLmRvbmU7eisrLG49aC5uZXh0KCkpe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIHc9cChlLHUsbi52YWx1ZSxrKTtpZihudWxsPT09dyl7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT13LmFsdGVybmF0ZSYmYihlLHUpO2c9Zih3LGcseik7bnVsbD09PXQ/bD13OnQuc2libGluZz13O3Q9dzt1PXF9aWYobi5kb25lKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDshbi5kb25lO3orKyxuPWgubmV4dCgpKW49QShlLG4udmFsdWUsayksbnVsbCE9PW4mJihnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO3JldHVybiBsfWZvcih1PWQoZSx1KTshbi5kb25lO3orKyxuPWgubmV4dCgpKW49Qyh1LGUseixuLnZhbHVlLGspLG51bGwhPT1uJiYoYSYmbnVsbCE9PW4uYWx0ZXJuYXRlJiZcbnUuZGVsZXRlKG51bGw9PT1uLmtleT96Om4ua2V5KSxnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PXVhJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIHNhOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09dWEpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtcbmQ9ZShrLGYucHJvcHMpO2QucmVmPVFnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09dWE/KGQ9WGcoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVZnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVFnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSB0YTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1cbldnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVVnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKFBnKGYpKXJldHVybiB4KGEsZCxmLGgpO2lmKExhKGYpKXJldHVybiB3KGEsZCxmLGgpO2wmJlJnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDIyOmNhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGhyb3cgRXJyb3IoeSgxNTIsUmEoYS50eXBlKXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWWc9U2coITApLFpnPVNnKCExKSwkZz17fSxhaD1CZigkZyksYmg9QmYoJGcpLGNoPUJmKCRnKTtcbmZ1bmN0aW9uIGRoKGEpe2lmKGE9PT0kZyl0aHJvdyBFcnJvcih5KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGVoKGEsYil7SShjaCxiKTtJKGJoLGEpO0koYWgsJGcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bWIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPW1iKGIsYSl9SChhaCk7SShhaCxiKX1mdW5jdGlvbiBmaCgpe0goYWgpO0goYmgpO0goY2gpfWZ1bmN0aW9uIGdoKGEpe2RoKGNoLmN1cnJlbnQpO3ZhciBiPWRoKGFoLmN1cnJlbnQpO3ZhciBjPW1iKGIsYS50eXBlKTtiIT09YyYmKEkoYmgsYSksSShhaCxjKSl9ZnVuY3Rpb24gaGgoYSl7YmguY3VycmVudD09PWEmJihIKGFoKSxIKGJoKSl9dmFyIFA9QmYoMCk7XG5mdW5jdGlvbiBpaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxcIiQ/XCI9PT1jLmRhdGF8fFwiJCFcIj09PWMuZGF0YSkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfXZhciBqaD1udWxsLGtoPW51bGwsbGg9ITE7XG5mdW5jdGlvbiBtaChhLGIpe3ZhciBjPW5oKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmZsYWdzPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBvaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcGgoYSl7aWYobGgpe3ZhciBiPWtoO2lmKGIpe3ZhciBjPWI7aWYoIW9oKGEsYikpe2I9cmYoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFvaChhLGIpKXthLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MjtsaD0hMTtqaD1hO3JldHVybn1taChqaCxjKX1qaD1hO2toPXJmKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MixsaD0hMSxqaD1hfX1mdW5jdGlvbiBxaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47amg9YX1cbmZ1bmN0aW9uIHJoKGEpe2lmKGEhPT1qaClyZXR1cm4hMTtpZighbGgpcmV0dXJuIHFoKGEpLGxoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhbmYoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPWtoO2I7KW1oKGEsYiksYj1yZihiLm5leHRTaWJsaW5nKTtxaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHkoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIvJFwiPT09Yyl7aWYoMD09PWIpe2toPXJmKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2VcIiRcIiE9PWMmJlwiJCFcIiE9PWMmJlwiJD9cIiE9PWN8fGIrK31hPWEubmV4dFNpYmxpbmd9a2g9bnVsbH19ZWxzZSBraD1qaD9yZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIHNoKCl7a2g9amg9bnVsbDtsaD0hMX12YXIgdGg9W107ZnVuY3Rpb24gdWgoKXtmb3IodmFyIGE9MDthPHRoLmxlbmd0aDthKyspdGhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDt0aC5sZW5ndGg9MH12YXIgdmg9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcix3aD1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyx4aD0wLFI9bnVsbCxTPW51bGwsVD1udWxsLHloPSExLHpoPSExO2Z1bmN0aW9uIEFoKCl7dGhyb3cgRXJyb3IoeSgzMjEpKTt9ZnVuY3Rpb24gQmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIENoKGEsYixjLGQsZSxmKXt4aD1mO1I9YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5sYW5lcz0wO3ZoLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/RGg6RWg7YT1jKGQsZSk7aWYoemgpe2Y9MDtkb3t6aD0hMTtpZighKDI1PmYpKXRocm93IEVycm9yKHkoMzAxKSk7Zis9MTtUPVM9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7dmguY3VycmVudD1GaDthPWMoZCxlKX13aGlsZSh6aCl9dmguY3VycmVudD1HaDtiPW51bGwhPT1TJiZudWxsIT09Uy5uZXh0O3hoPTA7VD1TPVI9bnVsbDt5aD0hMTtpZihiKXRocm93IEVycm9yKHkoMzAwKSk7cmV0dXJuIGF9ZnVuY3Rpb24gSGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWE7cmV0dXJuIFR9XG5mdW5jdGlvbiBJaCgpe2lmKG51bGw9PT1TKXt2YXIgYT1SLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1TLm5leHQ7dmFyIGI9bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlOlQubmV4dDtpZihudWxsIT09YilUPWIsUz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeSgzMTApKTtTPWE7YT17bWVtb2l6ZWRTdGF0ZTpTLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOlMuYmFzZVN0YXRlLGJhc2VRdWV1ZTpTLmJhc2VRdWV1ZSxxdWV1ZTpTLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hfXJldHVybiBUfWZ1bmN0aW9uIEpoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gS2goYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1TLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsubGFuZTtpZigoeGgmbCk9PT1sKW51bGwhPT1oJiYoaD1oLm5leHQ9e2xhbmU6MCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2Vsc2V7dmFyIG49e2xhbmU6bCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLFxuZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW4sZj1kKTpoPWgubmV4dD1uO1IubGFuZXN8PWw7RGd8PWx9az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7SGUoZCxiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIExoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTtIZShmLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24gTWgoYSxiLGMpe3ZhciBkPWIuX2dldFZlcnNpb247ZD1kKGIuX3NvdXJjZSk7dmFyIGU9Yi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeTtpZihudWxsIT09ZSlhPWU9PT1kO2Vsc2UgaWYoYT1hLm11dGFibGVSZWFkTGFuZXMsYT0oeGgmYSk9PT1hKWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9ZCx0aC5wdXNoKGIpO2lmKGEpcmV0dXJuIGMoYi5fc291cmNlKTt0aC5wdXNoKGIpO3Rocm93IEVycm9yKHkoMzUwKSk7fVxuZnVuY3Rpb24gTmgoYSxiLGMsZCl7dmFyIGU9VTtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih5KDM0OSkpO3ZhciBmPWIuX2dldFZlcnNpb24sZz1mKGIuX3NvdXJjZSksaD12aC5jdXJyZW50LGs9aC51c2VTdGF0ZShmdW5jdGlvbigpe3JldHVybiBNaChlLGIsYyl9KSxsPWtbMV0sbj1rWzBdO2s9VDt2YXIgQT1hLm1lbW9pemVkU3RhdGUscD1BLnJlZnMsQz1wLmdldFNuYXBzaG90LHg9QS5zb3VyY2U7QT1BLnN1YnNjcmliZTt2YXIgdz1SO2EubWVtb2l6ZWRTdGF0ZT17cmVmczpwLHNvdXJjZTpiLHN1YnNjcmliZTpkfTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3AuZ2V0U25hcHNob3Q9YztwLnNldFNuYXBzaG90PWw7dmFyIGE9ZihiLl9zb3VyY2UpO2lmKCFIZShnLGEpKXthPWMoYi5fc291cmNlKTtIZShuLGEpfHwobChhKSxhPUlnKHcpLGUubXV0YWJsZVJlYWRMYW5lc3w9YSZlLnBlbmRpbmdMYW5lcyk7YT1lLm11dGFibGVSZWFkTGFuZXM7ZS5lbnRhbmdsZWRMYW5lc3w9YTtmb3IodmFyIGQ9XG5lLmVudGFuZ2xlbWVudHMsaD1hOzA8aDspe3ZhciBrPTMxLVZjKGgpLHY9MTw8aztkW2tdfD1hO2gmPX52fX19LFtjLGIsZF0pO2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cmV0dXJuIGQoYi5fc291cmNlLGZ1bmN0aW9uKCl7dmFyIGE9cC5nZXRTbmFwc2hvdCxjPXAuc2V0U25hcHNob3Q7dHJ5e2MoYShiLl9zb3VyY2UpKTt2YXIgZD1JZyh3KTtlLm11dGFibGVSZWFkTGFuZXN8PWQmZS5wZW5kaW5nTGFuZXN9Y2F0Y2gocSl7YyhmdW5jdGlvbigpe3Rocm93IHE7fSl9fSl9LFtiLGRdKTtIZShDLGMpJiZIZSh4LGIpJiZIZShBLGQpfHwoYT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTpufSxhLmRpc3BhdGNoPWw9T2guYmluZChudWxsLFIsYSksay5xdWV1ZT1hLGsuYmFzZVF1ZXVlPW51bGwsbj1NaChlLGIsYyksay5tZW1vaXplZFN0YXRlPWsuYmFzZVN0YXRlPW4pO3JldHVybiBufVxuZnVuY3Rpb24gUGgoYSxiLGMpe3ZhciBkPUloKCk7cmV0dXJuIE5oKGQsYSxiLGMpfWZ1bmN0aW9uIFFoKGEpe3ZhciBiPUhoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gUmgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ui51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxSLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIFNoKGEpe3ZhciBiPUhoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9ZnVuY3Rpb24gVGgoKXtyZXR1cm4gSWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIFVoKGEsYixjLGQpe3ZhciBlPUhoKCk7Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIFZoKGEsYixjLGQpe3ZhciBlPUloKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PVMpe3ZhciBnPVMubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmQmgoZCxnLmRlcHMpKXtSaChiLGMsZixkKTtyZXR1cm59fVIuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLGYsZCl9ZnVuY3Rpb24gV2goYSxiKXtyZXR1cm4gVWgoNTE2LDQsYSxiKX1mdW5jdGlvbiBYaChhLGIpe3JldHVybiBWaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFloKGEsYil7cmV0dXJuIFZoKDQsMixhLGIpfWZ1bmN0aW9uIFpoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19XG5mdW5jdGlvbiAkaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFZoKDQsMixaaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBhaSgpe31mdW5jdGlvbiBiaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBjaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIGRpKGEsYil7dmFyIGM9ZWcoKTtnZyg5OD5jPzk4OmMsZnVuY3Rpb24oKXthKCEwKX0pO2dnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBjPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXthKCExKSxiKCl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWN9fSl9XG5mdW5jdGlvbiBPaChhLGIsYyl7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9e2xhbmU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIucGVuZGluZztudWxsPT09Zz9mLm5leHQ9ZjooZi5uZXh0PWcubmV4dCxnLm5leHQ9Zik7Yi5wZW5kaW5nPWY7Zz1hLmFsdGVybmF0ZTtpZihhPT09Unx8bnVsbCE9PWcmJmc9PT1SKXpoPXloPSEwO2Vsc2V7aWYoMD09PWEubGFuZXMmJihudWxsPT09Z3x8MD09PWcubGFuZXMpJiYoZz1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWcpKXRyeXt2YXIgaD1iLmxhc3RSZW5kZXJlZFN0YXRlLGs9ZyhoLGMpO2YuZWFnZXJSZWR1Y2VyPWc7Zi5lYWdlclN0YXRlPWs7aWYoSGUoayxoKSlyZXR1cm59Y2F0Y2gobCl7fWZpbmFsbHl7fUpnKGEsZSxkKX19XG52YXIgR2g9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOkFoLHVzZUNvbnRleHQ6QWgsdXNlRWZmZWN0OkFoLHVzZUltcGVyYXRpdmVIYW5kbGU6QWgsdXNlTGF5b3V0RWZmZWN0OkFoLHVzZU1lbW86QWgsdXNlUmVkdWNlcjpBaCx1c2VSZWY6QWgsdXNlU3RhdGU6QWgsdXNlRGVidWdWYWx1ZTpBaCx1c2VEZWZlcnJlZFZhbHVlOkFoLHVzZVRyYW5zaXRpb246QWgsdXNlTXV0YWJsZVNvdXJjZTpBaCx1c2VPcGFxdWVJZGVudGlmaWVyOkFoLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRGg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7SGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6V2gsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFVoKDQsMixaaC5iaW5kKG51bGwsXG5iLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVWgoNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1IaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpTaCx1c2VTdGF0ZTpRaCx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9UWgoYSksYz1iWzBdLGQ9YlsxXTtXaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247XG53aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9UWgoITEpLGI9YVswXTthPWRpLmJpbmQobnVsbCxhWzFdKTtTaChhKTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtkLm1lbW9pemVkU3RhdGU9e3JlZnM6e2dldFNuYXBzaG90OmIsc2V0U25hcHNob3Q6bnVsbH0sc291cmNlOmEsc3Vic2NyaWJlOmN9O3JldHVybiBOaChkLGEsYixjKX0sdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe2lmKGxoKXt2YXIgYT0hMSxiPXVmKGZ1bmN0aW9uKCl7YXx8KGE9ITAsYyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSkpO3Rocm93IEVycm9yKHkoMzU1KSk7fSksYz1RaChiKVsxXTswPT09KFIubW9kZSYyKSYmKFIuZmxhZ3N8PTUxNixSaCg1LGZ1bmN0aW9uKCl7YyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSl9LFxudm9pZCAwLG51bGwpKTtyZXR1cm4gYn1iPVwicjpcIisodGYrKykudG9TdHJpbmcoMzYpO1FoKGIpO3JldHVybiBifSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEVoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6S2gsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUtoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9S2goSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxGaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOkxoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBMaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1MaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUxoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBMaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sZWk9cmEuUmVhY3RDdXJyZW50T3duZXIsdWc9ITE7ZnVuY3Rpb24gZmkoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9aZyhiLG51bGwsYyxkKTpZZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBnaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7dGcoYixlKTtkPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhamkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsa2koYSxiLGcsZCxlLGYpO2E9VmcoYy50eXBlLG51bGwsZCxiLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKDA9PT0oZSZmKSYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpKZSxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBoaShhLGIsZik7Yi5mbGFnc3w9MTthPVRnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24ga2koYSxiLGMsZCxlLGYpe2lmKG51bGwhPT1hJiZKZShhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYpaWYodWc9ITEsMCE9PShmJmUpKTAhPT0oYS5mbGFncyYxNjM4NCkmJih1Zz0hMCk7ZWxzZSByZXR1cm4gYi5sYW5lcz1hLmxhbmVzLGhpKGEsYixmKTtyZXR1cm4gbGkoYSxiLGMsZCxmKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQuY2hpbGRyZW4sZj1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtpZihcImhpZGRlblwiPT09ZC5tb2RlfHxcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixjKTtlbHNlIGlmKDAhPT0oYyYxMDczNzQxODI0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLG51bGwhPT1mP2YuYmFzZUxhbmVzOmMpO2Vsc2UgcmV0dXJuIGE9bnVsbCE9PWY/Zi5iYXNlTGFuZXN8YzpjLGIubGFuZXM9Yi5jaGlsZExhbmVzPTEwNzM3NDE4MjQsYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6YX0sbmkoYixhKSxudWxsO2Vsc2UgbnVsbCE9PWY/KGQ9Zi5iYXNlTGFuZXN8YyxiLm1lbW9pemVkU3RhdGU9bnVsbCk6ZD1jLG5pKGIsZCk7ZmkoYSxiLGUsYyk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBvaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmZsYWdzfD0xMjh9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlKXt2YXIgZj1GZihjKT9EZjpNLmN1cnJlbnQ7Zj1FZihiLGYpO3RnKGIsZSk7Yz1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwaShhLGIsYyxkLGUpe2lmKEZmKGMpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7dGcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksTWcoYixjLGQpLE9nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXZnKGwpOihsPUZmKGMpP0RmOk0uY3VycmVudCxsPUVmKGIsbCkpO3ZhciBuPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG58fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO0F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZOZyhiLGcsZCxsKTt3Zz0hMTt2YXIgcD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHxwIT09a3x8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG4mJihHZyhiLGMsbixkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9d2d8fExnKGIsYyxoLGQscCxrLGwpKT8oQXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksZD0hMSl9ZWxzZXtnPWIuc3RhdGVOb2RlO3lnKGEsYik7aD1iLm1lbW9pemVkUHJvcHM7bD1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6bGcoYi50eXBlLGgpO2cucHJvcHM9bDtBPWIucGVuZGluZ1Byb3BzO3A9Zy5jb250ZXh0O2s9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9dmcoayk6KGs9RmYoYyk/RGY6TS5jdXJyZW50LGs9RWYoYixrKSk7dmFyIEM9Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KG49XCJmdW5jdGlvblwiPT09dHlwZW9mIEN8fFxuXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1BfHxwIT09aykmJk5nKGIsZyxkLGspO3dnPSExO3A9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7aCE9PUF8fHAhPT14fHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyYmKEdnKGIsYyxDLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobD13Z3x8TGcoYixjLGwsZCxwLHgsaykpPyhufHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsaykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5mbGFnc3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9ayxkPWwpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fFxuaD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxkPSExKX1yZXR1cm4gcWkoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gcWkoYSxiLGMsZCxlLGYpe29pKGEsYik7dmFyIGc9MCE9PShiLmZsYWdzJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJktmKGIsYywhMSksaGkoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7ZWkuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5mbGFnc3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1ZZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVlnKGIsbnVsbCxoLGYpKTpmaShhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZLZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHJpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/SGYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmSGYoYSxiLmNvbnRleHQsITEpO2VoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBzaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5TGFuZTowfTtcbmZ1bmN0aW9uIHRpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPVAuY3VycmVudCxmPSExLGc7KGc9MCE9PShiLmZsYWdzJjY0KSl8fChnPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7Zz8oZj0hMCxiLmZsYWdzJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1kLmZhbGxiYWNrfHwhMD09PWQudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChlfD0xKTtJKFAsZSYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZC5mYWxsYmFjayYmcGgoYik7YT1kLmNoaWxkcmVuO2U9ZC5mYWxsYmFjaztpZihmKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LGIubWVtb2l6ZWRTdGF0ZT1zaSxhO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgZC51bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LFxuYi5tZW1vaXplZFN0YXRlPXNpLGIubGFuZXM9MzM1NTQ0MzIsYTtjPXZpKHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmF9LGIubW9kZSxjLG51bGwpO2MucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9Y31pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXtpZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9OntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWlmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306XG57YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31mdW5jdGlvbiB1aShhLGIsYyxkKXt2YXIgZT1hLm1vZGUsZj1hLmNoaWxkO2I9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpifTswPT09KGUmMikmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1iKTpmPXZpKGIsZSwwLG51bGwpO2M9WGcoYyxlLGQsbnVsbCk7Zi5yZXR1cm49YTtjLnJldHVybj1hO2Yuc2libGluZz1jO2EuY2hpbGQ9ZjtyZXR1cm4gY31cbmZ1bmN0aW9uIHhpKGEsYixjLGQpe3ZhciBlPWEuY2hpbGQ7YT1lLnNpYmxpbmc7Yz1UZyhlLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmN9KTswPT09KGIubW9kZSYyKSYmKGMubGFuZXM9ZCk7Yy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGEubmV4dEVmZmVjdD1udWxsLGEuZmxhZ3M9OCxiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1hKTtyZXR1cm4gYi5jaGlsZD1jfVxuZnVuY3Rpb24gd2koYSxiLGMsZCxlKXt2YXIgZj1iLm1vZGUsZz1hLmNoaWxkO2E9Zy5zaWJsaW5nO3ZhciBoPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Y307MD09PShmJjIpJiZiLmNoaWxkIT09Zz8oYz1iLmNoaWxkLGMuY2hpbGRMYW5lcz0wLGMucGVuZGluZ1Byb3BzPWgsZz1jLmxhc3RFZmZlY3QsbnVsbCE9PWc/KGIuZmlyc3RFZmZlY3Q9Yy5maXJzdEVmZmVjdCxiLmxhc3RFZmZlY3Q9ZyxnLm5leHRFZmZlY3Q9bnVsbCk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbCk6Yz1UZyhnLGgpO251bGwhPT1hP2Q9VGcoYSxkKTooZD1YZyhkLGYsZSxudWxsKSxkLmZsYWdzfD0yKTtkLnJldHVybj1iO2MucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yi5jaGlsZD1jO3JldHVybiBkfWZ1bmN0aW9uIHlpKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO3NnKGEucmV0dXJuLGIpfVxuZnVuY3Rpb24gemkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIEFpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7ZmkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1QLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnlpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKXlpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoUCxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTt6aShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1paChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9emkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOnppKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBoaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7RGd8PWIubGFuZXM7aWYoMCE9PShjJmIuY2hpbGRMYW5lcykpe2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih5KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1UZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9VGcoYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1yZXR1cm4gbnVsbH12YXIgQmksQ2ksRGksRWk7XG5CaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07Q2k9ZnVuY3Rpb24oKXt9O1xuRGk9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9YS5tZW1vaXplZFByb3BzO2lmKGUhPT1kKXthPWIuc3RhdGVOb2RlO2RoKGFoLmN1cnJlbnQpO3ZhciBmPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmU9WWEoYSxlKTtkPVlhKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGUpO2Q9ZWIoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplPW0oe30sZSx7dmFsdWU6dm9pZCAwfSk7ZD1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZT1nYihhLGUpO2Q9Z2IoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGUub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1qZil9dmIoYyxkKTt2YXIgZztjPW51bGw7Zm9yKGwgaW4gZSlpZighZC5oYXNPd25Qcm9wZXJ0eShsKSYmZS5oYXNPd25Qcm9wZXJ0eShsKSYmbnVsbCE9ZVtsXSlpZihcInN0eWxlXCI9PT1cbmwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiYoY3x8KGM9e30pLGNbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWwmJlwiY2hpbGRyZW5cIiE9PWwmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2gobCxudWxsKSk7Zm9yKGwgaW4gZCl7dmFyIGs9ZFtsXTtoPW51bGwhPWU/ZVtsXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShsKSYmayE9PWgmJihudWxsIT1rfHxudWxsIT1oKSlpZihcInN0eWxlXCI9PT1sKWlmKGgpe2ZvcihnIGluIGgpIWguaGFzT3duUHJvcGVydHkoZyl8fGsmJmsuaGFzT3duUHJvcGVydHkoZyl8fChjfHwoYz17fSksY1tnXT1cIlwiKTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJmhbZ10hPT1rW2ddJiYoY3x8XG4oYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsYykpLGM9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8oaz1rP2suX19odG1sOnZvaWQgMCxoPWg/aC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmghPT1rJiYoZj1mfHxbXSkucHVzaChsLGspKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChsLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/KG51bGwhPWsmJlwib25TY3JvbGxcIj09PWwmJkcoXCJzY3JvbGxcIixhKSxmfHxoPT09a3x8KGY9W10pKTpcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rJiZrLiQkdHlwZW9mPT09R2E/ay50b1N0cmluZygpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixcbmMpO3ZhciBsPWY7aWYoYi51cGRhdGVRdWV1ZT1sKWIuZmxhZ3N8PTR9fTtFaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZmxhZ3N8PTQpfTtmdW5jdGlvbiBGaShhLGIpe2lmKCFsaClzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gR2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7ZD1iLnN0YXRlTm9kZTtkLnBlbmRpbmdDb250ZXh0JiYoZC5jb250ZXh0PWQucGVuZGluZ0NvbnRleHQsZC5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpcmgoYik/Yi5mbGFnc3w9NDpkLmh5ZHJhdGV8fChiLmZsYWdzfD0yNTYpO0NpKGIpO3JldHVybiBudWxsO2Nhc2UgNTpoaChiKTt2YXIgZT1kaChjaC5jdXJyZW50KTtjPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRGkoYSxiLGMsZCxlKSxhLnJlZiE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09XG5iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO3JldHVybiBudWxsfWE9ZGgoYWguY3VycmVudCk7aWYocmgoYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2Rbd2ZdPWI7ZFt4Zl09Zjtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixkKTtHKFwiY2xvc2VcIixkKTticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPFhlLmxlbmd0aDthKyspRyhYZVthXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsZCk7RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpaYShkLGYpO0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoZCxmKSxHKFwiaW52YWxpZFwiLGQpfXZiKGMsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWYuaGFzT3duUHJvcGVydHkoZykmJihlPWZbZ10sXCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGU/ZC50ZXh0Q29udGVudCE9PWUmJihhPVtcImNoaWxkcmVuXCIsZV0pOlwibnVtYmVyXCI9PT10eXBlb2YgZSYmZC50ZXh0Q29udGVudCE9PVwiXCIrZSYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2VdKTpjYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9ZSYmXCJvblNjcm9sbFwiPT09ZyYmRyhcInNjcm9sbFwiLGQpKTtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoZCk7Y2IoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShkKTtqYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGQub25jbGljaz1cbmpmKX1kPWE7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O2E9PT1rYi5odG1sJiYoYT1sYihjKSk7YT09PWtiLmh0bWw/XCJzY3JpcHRcIj09PWM/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChjLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGMpLFwic2VsZWN0XCI9PT1jJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxjKTthW3dmXT1iO2FbeGZdPWQ7QmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9d2IoYyxkKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixhKTtHKFwiY2xvc2VcIixhKTtcbmU9ZDticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxYZS5sZW5ndGg7ZSsrKUcoWGVbZV0sYSk7ZT1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsYSk7RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGEsZCk7ZT1ZYShhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2U9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGEsZCk7ZT1cbmdiKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztkZWZhdWx0OmU9ZH12YihjLGUpO3ZhciBoPWU7Zm9yKGYgaW4gaClpZihoLmhhc093blByb3BlcnR5KGYpKXt2YXIgaz1oW2ZdO1wic3R5bGVcIj09PWY/dGIoYSxrKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJm9iKGEsaykpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1jfHxcIlwiIT09aykmJnBiKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZwYihhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGNhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkcoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZxYShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGEpO2NiKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShhKTtqYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrU2EoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtmPWQudmFsdWU7bnVsbCE9Zj9mYihhLCEhZC5tdWx0aXBsZSxmLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmZmIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmKGEub25jbGljaz1qZil9bWYoYyxkKSYmKGIuZmxhZ3N8PTQpfW51bGwhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKUVpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO1xuYz1kaChjaC5jdXJyZW50KTtkaChhaC5jdXJyZW50KTtyaChiKT8oZD1iLnN0YXRlTm9kZSxjPWIubWVtb2l6ZWRQcm9wcyxkW3dmXT1iLGQubm9kZVZhbHVlIT09YyYmKGIuZmxhZ3N8PTQpKTooZD0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGRbd2ZdPWIsYi5zdGF0ZU5vZGU9ZCl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7Yz0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJnJoKGIpOmM9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZihkJiYhYyYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KFAuY3VycmVudCYxKSkwPT09ViYmKFY9Myk7ZWxzZXtpZigwPT09Vnx8Mz09PVYpVj1cbjQ7bnVsbD09PVV8fDA9PT0oRGcmMTM0MjE3NzI3KSYmMD09PShIaSYxMzQyMTc3MjcpfHxJaShVLFcpfWlmKGR8fGMpYi5mbGFnc3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksQ2koYiksbnVsbD09PWEmJmNmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYiksbnVsbDtjYXNlIDE3OnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAxOTpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2Y9MCE9PShiLmZsYWdzJjY0KTtnPWQucmVuZGVyaW5nO2lmKG51bGw9PT1nKWlmKGYpRmkoZCwhMSk7ZWxzZXtpZigwIT09Vnx8bnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9aWgoYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTY0O0ZpKGQsITEpO2Y9Zy51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKGIudXBkYXRlUXVldWU9ZixiLmZsYWdzfD00KTtcbm51bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7ZD1jO2ZvcihjPWIuY2hpbGQ7bnVsbCE9PWM7KWY9YyxhPWQsZi5mbGFncyY9MixmLm5leHRFZmZlY3Q9bnVsbCxmLmZpcnN0RWZmZWN0PW51bGwsZi5sYXN0RWZmZWN0PW51bGwsZz1mLmFsdGVybmF0ZSxudWxsPT09Zz8oZi5jaGlsZExhbmVzPTAsZi5sYW5lcz1hLGYuY2hpbGQ9bnVsbCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxmLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYubWVtb2l6ZWRQcm9wcz1nLm1lbW9pemVkUHJvcHMsZi5tZW1vaXplZFN0YXRlPWcubWVtb2l6ZWRTdGF0ZSxmLnVwZGF0ZVF1ZXVlPWcudXBkYXRlUXVldWUsZi50eXBlPWcudHlwZSxhPWcuZGVwZW5kZW5jaWVzLFxuZi5kZXBlbmRlbmNpZXM9bnVsbD09PWE/bnVsbDp7bGFuZXM6YS5sYW5lcyxmaXJzdENvbnRleHQ6YS5maXJzdENvbnRleHR9KSxjPWMuc2libGluZztJKFAsUC5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9YT1hLnNpYmxpbmd9bnVsbCE9PWQudGFpbCYmTygpPkppJiYoYi5mbGFnc3w9NjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKX1lbHNle2lmKCFmKWlmKGE9aWgoZyksbnVsbCE9PWEpe2lmKGIuZmxhZ3N8PTY0LGY9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZmxhZ3N8PTQpLEZpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZy5hbHRlcm5hdGUmJiFsaClyZXR1cm4gYj1iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKk8oKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5KaSYmMTA3Mzc0MTgyNCE9PWMmJihiLmZsYWdzfD1cbjY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMik7ZC5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGQubGFzdD1nKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9TygpLGMuc2libGluZz1udWxsLGI9UC5jdXJyZW50LEkoUCxmP2ImMXwyOmImMSksYyk6bnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbCE9PWEmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUhPT0obnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSkmJlwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIiE9PWQubW9kZSYmKGIuZmxhZ3N8PTQpLG51bGx9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTt9XG5mdW5jdGlvbiBMaShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpGZihhLnR5cGUpJiZHZigpO3ZhciBiPWEuZmxhZ3M7cmV0dXJuIGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7Yj1hLmZsYWdzO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IoeSgyODUpKTthLmZsYWdzPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBoaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoUCksYj1hLmZsYWdzLGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChQKSxudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGEpLG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBNaShhLGIpe3RyeXt2YXIgYz1cIlwiLGQ9YjtkbyBjKz1RYShkKSxkPWQucmV0dXJuO3doaWxlKGQpO3ZhciBlPWN9Y2F0Y2goZil7ZT1cIlxcbkVycm9yIGdlbmVyYXRpbmcgc3RhY2s6IFwiK2YubWVzc2FnZStcIlxcblwiK2Yuc3RhY2t9cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6ZX19ZnVuY3Rpb24gTmkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE9pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFBpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1FpfHwoUWk9ITAsUmk9ZCk7TmkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBTaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7TmkoYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVRpP1RpPW5ldyBTZXQoW3RoaXNdKTpUaS5hZGQodGhpcyksTmkoYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9dmFyIFVpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O1xuZnVuY3Rpb24gVmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7V2koYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfWZ1bmN0aW9uIFhpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmZsYWdzJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6bGcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmIuZmxhZ3MmMjU2JiZxZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTtyZXR1cm47Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBZaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97aWYoMz09PShhLnRhZyYzKSl7dmFyIGQ9YS5jcmVhdGU7YS5kZXN0cm95PWQoKX1hPWEubmV4dH13aGlsZShhIT09Yil9Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97dmFyIGU9YTtkPWUubmV4dDtlPWUudGFnOzAhPT0oZSY0KSYmMCE9PShlJjEpJiYoWmkoYyxhKSwkaShjLGEpKTthPWR9d2hpbGUoYSE9PWIpfXJldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtjLmZsYWdzJjQmJihudWxsPT09Yj9hLmNvbXBvbmVudERpZE1vdW50KCk6KGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6bGcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyksYS5jb21wb25lbnREaWRVcGRhdGUoZCxcbmIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKSkpO2I9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmRWcoYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1FZyhjLGIsYSl9cmV0dXJuO2Nhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmZsYWdzJjQmJm1mKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmQ2MoYykpKSk7XG5yZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpjYXNlIDIzOmNhc2UgMjQ6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gYWooYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZD1kLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLnNldFByb3BlcnR5P2Quc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6ZC5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PXNiKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKCgyMyE9PWMudGFnJiYyNCE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHxjPT09YSkmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09XG5hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gYmooYSxiKXtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJVbm1vdW50KXRyeXtNZi5vbkNvbW1pdEZpYmVyVW5tb3VudChMZixiKX1jYXRjaChmKXt9c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBjPWE9YS5uZXh0O2Rve3ZhciBkPWMsZT1kLmRlc3Ryb3k7ZD1kLnRhZztpZih2b2lkIDAhPT1lKWlmKDAhPT0oZCY0KSlaaShiLGMpO2Vsc2V7ZD1iO3RyeXtlKCl9Y2F0Y2goZil7V2koZCxmKX19Yz1jLm5leHR9d2hpbGUoYyE9PWEpfWJyZWFrO2Nhc2UgMTpWaShiKTthPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXthLnByb3BzPWIubWVtb2l6ZWRQcm9wcyxhLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxhLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZil7V2koYixcbmYpfWJyZWFrO2Nhc2UgNTpWaShiKTticmVhaztjYXNlIDQ6Y2ooYSxiKX19ZnVuY3Rpb24gZGooYSl7YS5hbHRlcm5hdGU9bnVsbDthLmNoaWxkPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLnJldHVybj1udWxsO2EudXBkYXRlUXVldWU9bnVsbH1mdW5jdGlvbiBlaihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIGZqKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKGVqKGIpKWJyZWFrIGE7Yj1iLnJldHVybn10aHJvdyBFcnJvcih5KDE2MCkpO312YXIgYz1iO2I9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDE2MSkpO31jLmZsYWdzJjE2JiYocGIoYixcIlwiKSxjLmZsYWdzJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8ZWooYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5mbGFncyYyKWNvbnRpbnVlIGI7aWYobnVsbD09PVxuYy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZmxhZ3MmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9naihhLGMsYik6aGooYSxjLGIpfVxuZnVuY3Rpb24gZ2ooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPWpmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspZ2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gaGooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihoaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWhqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGNqKGEsYil7Zm9yKHZhciBjPWIsZD0hMSxlLGY7Oyl7aWYoIWQpe2Q9Yy5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1kKXRocm93IEVycm9yKHkoMTYwKSk7ZT1kLnN0YXRlTm9kZTtzd2l0Y2goZC50YWcpe2Nhc2UgNTpmPSExO2JyZWFrIGE7Y2FzZSAzOmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYTtjYXNlIDQ6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhfWQ9ZC5yZXR1cm59ZD0hMH1pZig1PT09Yy50YWd8fDY9PT1jLnRhZyl7YTpmb3IodmFyIGc9YSxoPWMsaz1oOzspaWYoYmooZyxrKSxudWxsIT09ay5jaGlsZCYmNCE9PWsudGFnKWsuY2hpbGQucmV0dXJuPWssaz1rLmNoaWxkO2Vsc2V7aWYoaz09PWgpYnJlYWsgYTtmb3IoO251bGw9PT1rLnNpYmxpbmc7KXtpZihudWxsPT09ay5yZXR1cm58fGsucmV0dXJuPT09aClicmVhayBhO2s9ay5yZXR1cm59ay5zaWJsaW5nLnJldHVybj1rLnJldHVybjtrPWsuc2libGluZ31mPyhnPWUsaD1jLnN0YXRlTm9kZSxcbjg9PT1nLm5vZGVUeXBlP2cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChoKTpnLnJlbW92ZUNoaWxkKGgpKTplLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1jLnRhZyl7aWYobnVsbCE9PWMuY2hpbGQpe2U9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztmPSEwO2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKGJqKGEsYyksbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJuOzQ9PT1jLnRhZyYmKGQ9ITEpfWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gaWooYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOnZhciBjPWIudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG8gMz09PShkLnRhZyYzKSYmKGE9ZC5kZXN0cm95LGQuZGVzdHJveT12b2lkIDAsdm9pZCAwIT09YSYmYSgpKSxkPWQubmV4dDt3aGlsZShkIT09Yyl9cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OmM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7ZD1iLm1lbW9pemVkUHJvcHM7dmFyIGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbeGZdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJiRhKGMsZCk7d2IoYSxlKTtiPXdiKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPVxuMil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP3RiKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9vYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/cGIoYyxoKTpxYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6YWIoYyxkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGY9ZC52YWx1ZSxudWxsIT1mP2ZiKGMsISFkLm11bHRpcGxlLGYsITEpOmEhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9mYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6ZmIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1cbmIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmM9Yi5zdGF0ZU5vZGU7Yy5oeWRyYXRlJiYoYy5oeWRyYXRlPSExLENjKGMuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGwhPT1iLm1lbW9pemVkU3RhdGUmJihqaj1PKCksYWooYi5jaGlsZCwhMCkpO2tqKGIpO3JldHVybjtjYXNlIDE5OmtqKGIpO3JldHVybjtjYXNlIDE3OnJldHVybjtjYXNlIDIzOmNhc2UgMjQ6YWooYixudWxsIT09Yi5tZW1vaXplZFN0YXRlKTtyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9ZnVuY3Rpb24ga2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgVWkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1sai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIG1qKGEsYil7cmV0dXJuIG51bGwhPT1hJiYoYT1hLm1lbW9pemVkU3RhdGUsbnVsbD09PWF8fG51bGwhPT1hLmRlaHlkcmF0ZWQpPyhiPWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YiYmbnVsbD09PWIuZGVoeWRyYXRlZCk6ITF9dmFyIG5qPU1hdGguY2VpbCxvaj1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHBqPXJhLlJlYWN0Q3VycmVudE93bmVyLFg9MCxVPW51bGwsWT1udWxsLFc9MCxxaj0wLHJqPUJmKDApLFY9MCxzaj1udWxsLHRqPTAsRGc9MCxIaT0wLHVqPTAsdmo9bnVsbCxqaj0wLEppPUluZmluaXR5O2Z1bmN0aW9uIHdqKCl7Smk9TygpKzUwMH12YXIgWj1udWxsLFFpPSExLFJpPW51bGwsVGk9bnVsbCx4aj0hMSx5aj1udWxsLHpqPTkwLEFqPVtdLEJqPVtdLENqPW51bGwsRGo9MCxFaj1udWxsLEZqPS0xLEdqPTAsSGo9MCxJaj1udWxsLEpqPSExO2Z1bmN0aW9uIEhnKCl7cmV0dXJuIDAhPT0oWCY0OCk/TygpOi0xIT09Rmo/Rmo6Rmo9TygpfVxuZnVuY3Rpb24gSWcoYSl7YT1hLm1vZGU7aWYoMD09PShhJjIpKXJldHVybiAxO2lmKDA9PT0oYSY0KSlyZXR1cm4gOTk9PT1lZygpPzE6MjswPT09R2omJihHaj10aik7aWYoMCE9PWtnLnRyYW5zaXRpb24pezAhPT1IaiYmKEhqPW51bGwhPT12aj92ai5wZW5kaW5nTGFuZXM6MCk7YT1Hajt2YXIgYj00MTg2MTEyJn5IajtiJj0tYjswPT09YiYmKGE9NDE4NjExMiZ+YSxiPWEmLWEsMD09PWImJihiPTgxOTIpKTtyZXR1cm4gYn1hPWVnKCk7MCE9PShYJjQpJiY5OD09PWE/YT1YYygxMixHaik6KGE9U2MoYSksYT1YYyhhLEdqKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZyhhLGIsYyl7aWYoNTA8RGopdGhyb3cgRGo9MCxFaj1udWxsLEVycm9yKHkoMTg1KSk7YT1LaihhLGIpO2lmKG51bGw9PT1hKXJldHVybiBudWxsOyRjKGEsYixjKTthPT09VSYmKEhpfD1iLDQ9PT1WJiZJaShhLFcpKTt2YXIgZD1lZygpOzE9PT1iPzAhPT0oWCY4KSYmMD09PShYJjQ4KT9MaihhKTooTWooYSxjKSwwPT09WCYmKHdqKCksaWcoKSkpOigwPT09KFgmNCl8fDk4IT09ZCYmOTkhPT1kfHwobnVsbD09PUNqP0NqPW5ldyBTZXQoW2FdKTpDai5hZGQoYSkpLE1qKGEsYykpO3ZqPWF9ZnVuY3Rpb24gS2ooYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7Yz1hO2ZvcihhPWEucmV0dXJuO251bGwhPT1hOylhLmNoaWxkTGFuZXN8PWIsYz1hLmFsdGVybmF0ZSxudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9YiksYz1hLGE9YS5yZXR1cm47cmV0dXJuIDM9PT1jLnRhZz9jLnN0YXRlTm9kZTpudWxsfVxuZnVuY3Rpb24gTWooYSxiKXtmb3IodmFyIGM9YS5jYWxsYmFja05vZGUsZD1hLnN1c3BlbmRlZExhbmVzLGU9YS5waW5nZWRMYW5lcyxmPWEuZXhwaXJhdGlvblRpbWVzLGc9YS5wZW5kaW5nTGFuZXM7MDxnOyl7dmFyIGg9MzEtVmMoZyksaz0xPDxoLGw9ZltoXTtpZigtMT09PWwpe2lmKDA9PT0oayZkKXx8MCE9PShrJmUpKXtsPWI7UmMoayk7dmFyIG49RjtmW2hdPTEwPD1uP2wrMjUwOjY8PW4/bCs1RTM6LTF9fWVsc2UgbDw9YiYmKGEuZXhwaXJlZExhbmVzfD1rKTtnJj1+a31kPVVjKGEsYT09PVU/VzowKTtiPUY7aWYoMD09PWQpbnVsbCE9PWMmJihjIT09WmYmJlBmKGMpLGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja1ByaW9yaXR5PTApO2Vsc2V7aWYobnVsbCE9PWMpe2lmKGEuY2FsbGJhY2tQcmlvcml0eT09PWIpcmV0dXJuO2MhPT1aZiYmUGYoYyl9MTU9PT1iPyhjPUxqLmJpbmQobnVsbCxhKSxudWxsPT09YWc/KGFnPVtjXSxiZz1PZihVZixqZykpOmFnLnB1c2goYyksXG5jPVpmKToxND09PWI/Yz1oZyg5OSxMai5iaW5kKG51bGwsYSkpOihjPVRjKGIpLGM9aGcoYyxOai5iaW5kKG51bGwsYSkpKTthLmNhbGxiYWNrUHJpb3JpdHk9YjthLmNhbGxiYWNrTm9kZT1jfX1cbmZ1bmN0aW9uIE5qKGEpe0ZqPS0xO0hqPUdqPTA7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBiPWEuY2FsbGJhY2tOb2RlO2lmKE9qKCkmJmEuY2FsbGJhY2tOb2RlIT09YilyZXR1cm4gbnVsbDt2YXIgYz1VYyhhLGE9PT1VP1c6MCk7aWYoMD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9Yzt2YXIgZT1YO1h8PTE2O3ZhciBmPVBqKCk7aWYoVSE9PWF8fFchPT1kKXdqKCksUWooYSxkKTtkbyB0cnl7UmooKTticmVha31jYXRjaChoKXtTaihhLGgpfXdoaWxlKDEpO3FnKCk7b2ouY3VycmVudD1mO1g9ZTtudWxsIT09WT9kPTA6KFU9bnVsbCxXPTAsZD1WKTtpZigwIT09KHRqJkhpKSlRaihhLDApO2Vsc2UgaWYoMCE9PWQpezI9PT1kJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGM9V2MoYSksMCE9PWMmJihkPVRqKGEsYykpKTtpZigxPT09ZCl0aHJvdyBiPXNqLFFqKGEsMCksSWkoYSxjKSxNaihhLE8oKSksYjthLmZpbmlzaGVkV29yaz1cbmEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWM7c3dpdGNoKGQpe2Nhc2UgMDpjYXNlIDE6dGhyb3cgRXJyb3IoeSgzNDUpKTtjYXNlIDI6VWooYSk7YnJlYWs7Y2FzZSAzOklpKGEsYyk7aWYoKGMmNjI5MTQ1NjApPT09YyYmKGQ9amorNTAwLU8oKSwxMDxkKSl7aWYoMCE9PVVjKGEsMCkpYnJlYWs7ZT1hLnN1c3BlbmRlZExhbmVzO2lmKChlJmMpIT09Yyl7SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmU7YnJlYWt9YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxkKTticmVha31VaihhKTticmVhaztjYXNlIDQ6SWkoYSxjKTtpZigoYyY0MTg2MTEyKT09PWMpYnJlYWs7ZD1hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxjOyl7dmFyIGc9MzEtVmMoYyk7Zj0xPDxnO2c9ZFtnXTtnPmUmJihlPWcpO2MmPX5mfWM9ZTtjPU8oKS1jO2M9KDEyMD5jPzEyMDo0ODA+Yz80ODA6MTA4MD5jPzEwODA6MTkyMD5jPzE5MjA6M0UzPmM/M0UzOjQzMjA+XG5jPzQzMjA6MTk2MCpuaihjLzE5NjApKS1jO2lmKDEwPGMpe2EudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksYyk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA1OlVqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMjkpKTt9fU1qKGEsTygpKTtyZXR1cm4gYS5jYWxsYmFja05vZGU9PT1iP05qLmJpbmQobnVsbCxhKTpudWxsfWZ1bmN0aW9uIElpKGEsYil7YiY9fnVqO2ImPX5IaTthLnN1c3BlbmRlZExhbmVzfD1iO2EucGluZ2VkTGFuZXMmPX5iO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yjspe3ZhciBjPTMxLVZjKGIpLGQ9MTw8YzthW2NdPS0xO2ImPX5kfX1cbmZ1bmN0aW9uIExqKGEpe2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTtPaigpO2lmKGE9PT1VJiYwIT09KGEuZXhwaXJlZExhbmVzJlcpKXt2YXIgYj1XO3ZhciBjPVRqKGEsYik7MCE9PSh0aiZIaSkmJihiPVVjKGEsYiksYz1UaihhLGIpKX1lbHNlIGI9VWMoYSwwKSxjPVRqKGEsYik7MCE9PWEudGFnJiYyPT09YyYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxiPVdjKGEpLDAhPT1iJiYoYz1UaihhLGIpKSk7aWYoMT09PWMpdGhyb3cgYz1zaixRaihhLDApLElpKGEsYiksTWooYSxPKCkpLGM7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtVaihhKTtNaihhLE8oKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBWaigpe2lmKG51bGwhPT1Dail7dmFyIGE9Q2o7Q2o9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSl7YS5leHBpcmVkTGFuZXN8PTI0JmEucGVuZGluZ0xhbmVzO01qKGEsTygpKX0pfWlnKCl9ZnVuY3Rpb24gV2ooYSxiKXt2YXIgYz1YO1h8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gWGooYSxiKXt2YXIgYz1YO1gmPS0yO1h8PTg7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gbmkoYSxiKXtJKHJqLHFqKTtxanw9Yjt0anw9Yn1mdW5jdGlvbiBLaSgpe3FqPXJqLmN1cnJlbnQ7SChyail9XG5mdW5jdGlvbiBRaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxwZihjKSk7aWYobnVsbCE9PVkpZm9yKGM9WS5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZHZigpO2JyZWFrO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2JyZWFrO2Nhc2UgNTpoaChkKTticmVhaztjYXNlIDQ6ZmgoKTticmVhaztjYXNlIDEzOkgoUCk7YnJlYWs7Y2FzZSAxOTpIKFApO2JyZWFrO2Nhc2UgMTA6cmcoZCk7YnJlYWs7Y2FzZSAyMzpjYXNlIDI0OktpKCl9Yz1jLnJldHVybn1VPWE7WT1UZyhhLmN1cnJlbnQsbnVsbCk7Vz1xaj10aj1iO1Y9MDtzaj1udWxsO3VqPUhpPURnPTB9XG5mdW5jdGlvbiBTaihhLGIpe2Rve3ZhciBjPVk7dHJ5e3FnKCk7dmguY3VycmVudD1HaDtpZih5aCl7Zm9yKHZhciBkPVIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZDspe3ZhciBlPWQucXVldWU7bnVsbCE9PWUmJihlLnBlbmRpbmc9bnVsbCk7ZD1kLm5leHR9eWg9ITF9eGg9MDtUPVM9Uj1udWxsO3poPSExO3BqLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtWPTE7c2o9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1XO2guZmxhZ3N8PTIwNDg7aC5maXJzdEVmZmVjdD1oLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09ayYmXCJvYmplY3RcIj09PXR5cGVvZiBrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay50aGVuKXt2YXIgbD1rO2lmKDA9PT0oaC5tb2RlJjIpKXt2YXIgbj1oLmFsdGVybmF0ZTtuPyhoLnVwZGF0ZVF1ZXVlPW4udXBkYXRlUXVldWUsaC5tZW1vaXplZFN0YXRlPW4ubWVtb2l6ZWRTdGF0ZSxoLmxhbmVzPW4ubGFuZXMpOlxuKGgudXBkYXRlUXVldWU9bnVsbCxoLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIEE9MCE9PShQLmN1cnJlbnQmMSkscD1nO2Rve3ZhciBDO2lmKEM9MTM9PT1wLnRhZyl7dmFyIHg9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT14KUM9bnVsbCE9PXguZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciB3PXAubWVtb2l6ZWRQcm9wcztDPXZvaWQgMD09PXcuZmFsbGJhY2s/ITE6ITAhPT13LnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOkE/ITE6ITB9fWlmKEMpe3ZhciB6PXAudXBkYXRlUXVldWU7aWYobnVsbD09PXope3ZhciB1PW5ldyBTZXQ7dS5hZGQobCk7cC51cGRhdGVRdWV1ZT11fWVsc2Ugei5hZGQobCk7aWYoMD09PShwLm1vZGUmMikpe3AuZmxhZ3N8PTY0O2guZmxhZ3N8PTE2Mzg0O2guZmxhZ3MmPS0yOTgxO2lmKDE9PT1oLnRhZylpZihudWxsPT09aC5hbHRlcm5hdGUpaC50YWc9MTc7ZWxzZXt2YXIgdD16ZygtMSwxKTt0LnRhZz0yO0FnKGgsdCl9aC5sYW5lc3w9MTticmVhayBhfWs9XG52b2lkIDA7aD1iO3ZhciBxPWYucGluZ0NhY2hlO251bGw9PT1xPyhxPWYucGluZ0NhY2hlPW5ldyBPaSxrPW5ldyBTZXQscS5zZXQobCxrKSk6KGs9cS5nZXQobCksdm9pZCAwPT09ayYmKGs9bmV3IFNldCxxLnNldChsLGspKSk7aWYoIWsuaGFzKGgpKXtrLmFkZChoKTt2YXIgdj1Zai5iaW5kKG51bGwsZixsLGgpO2wudGhlbih2LHYpfXAuZmxhZ3N8PTQwOTY7cC5sYW5lcz1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7az1FcnJvcigoUmEoaC50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiKX01IT09ViYmKFY9Mik7az1NaShrLGgpO3A9XG5nO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOmY9aztwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEo9UGkocCxmLGIpO0JnKHAsSik7YnJlYWsgYTtjYXNlIDE6Zj1rO3ZhciBLPXAudHlwZSxRPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5mbGFncyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgSy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1RJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgUS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhRKSkpKXtwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEw9U2kocCxmLGIpO0JnKHAsTCk7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WmooYyl9Y2F0Y2godmEpe2I9dmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIFBqKCl7dmFyIGE9b2ouY3VycmVudDtvai5jdXJyZW50PUdoO3JldHVybiBudWxsPT09YT9HaDphfWZ1bmN0aW9uIFRqKGEsYil7dmFyIGM9WDtYfD0xNjt2YXIgZD1QaigpO1U9PT1hJiZXPT09Ynx8UWooYSxiKTtkbyB0cnl7YWsoKTticmVha31jYXRjaChlKXtTaihhLGUpfXdoaWxlKDEpO3FnKCk7WD1jO29qLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcih5KDI2MSkpO1U9bnVsbDtXPTA7cmV0dXJuIFZ9ZnVuY3Rpb24gYWsoKXtmb3IoO251bGwhPT1ZOyliayhZKX1mdW5jdGlvbiBSaigpe2Zvcig7bnVsbCE9PVkmJiFRZigpOyliayhZKX1mdW5jdGlvbiBiayhhKXt2YXIgYj1jayhhLmFsdGVybmF0ZSxhLHFqKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/WmooYSk6WT1iO3BqLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFpqKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMjA0OCkpe2M9R2koYyxiLHFqKTtpZihudWxsIT09Yyl7WT1jO3JldHVybn1jPWI7aWYoMjQhPT1jLnRhZyYmMjMhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8MCE9PShxaiYxMDczNzQxODI0KXx8MD09PShjLm1vZGUmNCkpe2Zvcih2YXIgZD0wLGU9Yy5jaGlsZDtudWxsIT09ZTspZHw9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZT1lLnNpYmxpbmc7Yy5jaGlsZExhbmVzPWR9bnVsbCE9PWEmJjA9PT0oYS5mbGFncyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxudWxsIT09Yi5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QpLDE8Yi5mbGFncyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iOmEuZmlyc3RFZmZlY3Q9YixhLmxhc3RFZmZlY3Q9YikpfWVsc2V7Yz1MaShiKTtpZihudWxsIT09Yyl7Yy5mbGFncyY9MjA0NztZPWM7cmV0dXJufW51bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmZsYWdzfD0yMDQ4KX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVYmJihWPTUpfWZ1bmN0aW9uIFVqKGEpe3ZhciBiPWVnKCk7Z2coOTksZGsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZGsoYSxiKXtkbyBPaigpO3doaWxlKG51bGwhPT15aik7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih5KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7dmFyIGQ9Yy5sYW5lc3xjLmNoaWxkTGFuZXMsZT1kLGY9YS5wZW5kaW5nTGFuZXMmfmU7YS5wZW5kaW5nTGFuZXM9ZTthLnN1c3BlbmRlZExhbmVzPTA7YS5waW5nZWRMYW5lcz0wO2EuZXhwaXJlZExhbmVzJj1lO2EubXV0YWJsZVJlYWRMYW5lcyY9ZTthLmVudGFuZ2xlZExhbmVzJj1lO2U9YS5lbnRhbmdsZW1lbnRzO2Zvcih2YXIgZz1hLmV2ZW50VGltZXMsaD1hLmV4cGlyYXRpb25UaW1lczswPGY7KXt2YXIgaz0zMS1WYyhmKSxsPTE8PGs7ZVtrXT0wO2dba109LTE7aFtrXT0tMTtmJj1+bH1udWxsIT09XG5DaiYmMD09PShkJjI0KSYmQ2ouaGFzKGEpJiZDai5kZWxldGUoYSk7YT09PVUmJihZPVU9bnVsbCxXPTApOzE8Yy5mbGFncz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGQ9Yy5maXJzdEVmZmVjdCk6ZD1jOmQ9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZCl7ZT1YO1h8PTMyO3BqLmN1cnJlbnQ9bnVsbDtrZj1mZDtnPU5lKCk7aWYoT2UoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTppZihoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdywobD1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKSkmJjAhPT1sLnJhbmdlQ291bnQpe2g9bC5hbmNob3JOb2RlO2Y9bC5hbmNob3JPZmZzZXQ7az1sLmZvY3VzTm9kZTtsPWwuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsay5ub2RlVHlwZX1jYXRjaCh2YSl7aD1udWxsO1xuYnJlYWsgYX12YXIgbj0wLEE9LTEscD0tMSxDPTAseD0wLHc9Zyx6PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdTs7KXt3IT09aHx8MCE9PWYmJjMhPT13Lm5vZGVUeXBlfHwoQT1uK2YpO3chPT1rfHwwIT09bCYmMyE9PXcubm9kZVR5cGV8fChwPW4rbCk7Mz09PXcubm9kZVR5cGUmJihuKz13Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odT13LmZpcnN0Q2hpbGQpKWJyZWFrO3o9dzt3PXV9Zm9yKDs7KXtpZih3PT09ZylicmVhayBiO3o9PT1oJiYrK0M9PT1mJiYoQT1uKTt6PT09ayYmKyt4PT09bCYmKHA9bik7aWYobnVsbCE9PSh1PXcubmV4dFNpYmxpbmcpKWJyZWFrO3c9ejt6PXcucGFyZW50Tm9kZX13PXV9aD0tMT09PUF8fC0xPT09cD9udWxsOntzdGFydDpBLGVuZDpwfX1lbHNlIGg9bnVsbDtoPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9bnVsbDtsZj17Zm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtJaj1udWxsO0pqPSExO1o9ZDtkbyB0cnl7ZWsoKX1jYXRjaCh2YSl7aWYobnVsbD09PVxuWil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtJaj1udWxsO1o9ZDtkbyB0cnl7Zm9yKGc9YTtudWxsIT09Wjspe3ZhciB0PVouZmxhZ3M7dCYxNiYmcGIoWi5zdGF0ZU5vZGUsXCJcIik7aWYodCYxMjgpe3ZhciBxPVouYWx0ZXJuYXRlO2lmKG51bGwhPT1xKXt2YXIgdj1xLnJlZjtudWxsIT09diYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB2P3YobnVsbCk6di5jdXJyZW50PW51bGwpfX1zd2l0Y2godCYxMDM4KXtjYXNlIDI6ZmooWik7Wi5mbGFncyY9LTM7YnJlYWs7Y2FzZSA2OmZqKFopO1ouZmxhZ3MmPS0zO2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgMTAyNDpaLmZsYWdzJj0tMTAyNTticmVhaztjYXNlIDEwMjg6Wi5mbGFncyY9LTEwMjU7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA0OmlqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgODpoPVo7Y2ooZyxoKTt2YXIgSj1oLmFsdGVybmF0ZTtkaihoKTtudWxsIT09XG5KJiZkaihKKX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO3Y9bGY7cT1OZSgpO3Q9di5mb2N1c2VkRWxlbTtnPXYuc2VsZWN0aW9uUmFuZ2U7aWYocSE9PXQmJnQmJnQub3duZXJEb2N1bWVudCYmTWUodC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx0KSl7bnVsbCE9PWcmJk9lKHQpJiYocT1nLnN0YXJ0LHY9Zy5lbmQsdm9pZCAwPT09diYmKHY9cSksXCJzZWxlY3Rpb25TdGFydFwiaW4gdD8odC5zZWxlY3Rpb25TdGFydD1xLHQuc2VsZWN0aW9uRW5kPU1hdGgubWluKHYsdC52YWx1ZS5sZW5ndGgpKToodj0ocT10Lm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmcS5kZWZhdWx0Vmlld3x8d2luZG93LHYuZ2V0U2VsZWN0aW9uJiYodj12LmdldFNlbGVjdGlvbigpLGg9dC50ZXh0Q29udGVudC5sZW5ndGgsSj1NYXRoLm1pbihnLnN0YXJ0LGgpLGc9dm9pZCAwPT09XG5nLmVuZD9KOk1hdGgubWluKGcuZW5kLGgpLCF2LmV4dGVuZCYmSj5nJiYoaD1nLGc9SixKPWgpLGg9TGUodCxKKSxmPUxlKHQsZyksaCYmZiYmKDEhPT12LnJhbmdlQ291bnR8fHYuYW5jaG9yTm9kZSE9PWgubm9kZXx8di5hbmNob3JPZmZzZXQhPT1oLm9mZnNldHx8di5mb2N1c05vZGUhPT1mLm5vZGV8fHYuZm9jdXNPZmZzZXQhPT1mLm9mZnNldCkmJihxPXEuY3JlYXRlUmFuZ2UoKSxxLnNldFN0YXJ0KGgubm9kZSxoLm9mZnNldCksdi5yZW1vdmVBbGxSYW5nZXMoKSxKPmc/KHYuYWRkUmFuZ2UocSksdi5leHRlbmQoZi5ub2RlLGYub2Zmc2V0KSk6KHEuc2V0RW5kKGYubm9kZSxmLm9mZnNldCksdi5hZGRSYW5nZShxKSkpKSkpO3E9W107Zm9yKHY9dDt2PXYucGFyZW50Tm9kZTspMT09PXYubm9kZVR5cGUmJnEucHVzaCh7ZWxlbWVudDp2LGxlZnQ6di5zY3JvbGxMZWZ0LHRvcDp2LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB0LmZvY3VzJiZ0LmZvY3VzKCk7Zm9yKHQ9XG4wO3Q8cS5sZW5ndGg7dCsrKXY9cVt0XSx2LmVsZW1lbnQuc2Nyb2xsTGVmdD12LmxlZnQsdi5lbGVtZW50LnNjcm9sbFRvcD12LnRvcH1mZD0hIWtmO2xmPWtmPW51bGw7YS5jdXJyZW50PWM7Wj1kO2RvIHRyeXtmb3IodD1hO251bGwhPT1aOyl7dmFyIEs9Wi5mbGFncztLJjM2JiZZaSh0LFouYWx0ZXJuYXRlLFopO2lmKEsmMTI4KXtxPXZvaWQgMDt2YXIgUT1aLnJlZjtpZihudWxsIT09USl7dmFyIEw9Wi5zdGF0ZU5vZGU7c3dpdGNoKFoudGFnKXtjYXNlIDU6cT1MO2JyZWFrO2RlZmF1bHQ6cT1MfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBRP1EocSk6US5jdXJyZW50PXF9fVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7Wj1udWxsOyRmKCk7WD1lfWVsc2UgYS5jdXJyZW50PWM7aWYoeGopeGo9ITEseWo9YSx6aj1iO2Vsc2UgZm9yKFo9ZDtudWxsIT09WjspYj1cbloubmV4dEVmZmVjdCxaLm5leHRFZmZlY3Q9bnVsbCxaLmZsYWdzJjgmJihLPVosSy5zaWJsaW5nPW51bGwsSy5zdGF0ZU5vZGU9bnVsbCksWj1iO2Q9YS5wZW5kaW5nTGFuZXM7MD09PWQmJihUaT1udWxsKTsxPT09ZD9hPT09RWo/RGorKzooRGo9MCxFaj1hKTpEaj0wO2M9Yy5zdGF0ZU5vZGU7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyUm9vdCl0cnl7TWYub25Db21taXRGaWJlclJvb3QoTGYsYyx2b2lkIDAsNjQ9PT0oYy5jdXJyZW50LmZsYWdzJjY0KSl9Y2F0Y2godmEpe31NaihhLE8oKSk7aWYoUWkpdGhyb3cgUWk9ITEsYT1SaSxSaT1udWxsLGE7aWYoMCE9PShYJjgpKXJldHVybiBudWxsO2lnKCk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBlaygpe2Zvcig7bnVsbCE9PVo7KXt2YXIgYT1aLmFsdGVybmF0ZTtKanx8bnVsbD09PUlqfHwoMCE9PShaLmZsYWdzJjgpP2RjKFosSWopJiYoSmo9ITApOjEzPT09Wi50YWcmJm1qKGEsWikmJmRjKFosSWopJiYoSmo9ITApKTt2YXIgYj1aLmZsYWdzOzAhPT0oYiYyNTYpJiZYaShhLFopOzA9PT0oYiY1MTIpfHx4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKTtaPVoubmV4dEVmZmVjdH19ZnVuY3Rpb24gT2ooKXtpZig5MCE9PXpqKXt2YXIgYT05Nzx6aj85Nzp6ajt6aj05MDtyZXR1cm4gZ2coYSxmayl9cmV0dXJuITF9ZnVuY3Rpb24gJGkoYSxiKXtBai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9ZnVuY3Rpb24gWmkoYSxiKXtCai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9XG5mdW5jdGlvbiBmaygpe2lmKG51bGw9PT15ailyZXR1cm4hMTt2YXIgYT15ajt5aj1udWxsO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMzEpKTt2YXIgYj1YO1h8PTMyO3ZhciBjPUJqO0JqPVtdO2Zvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7dmFyIGU9Y1tkXSxmPWNbZCsxXSxnPWUuZGVzdHJveTtlLmRlc3Ryb3k9dm9pZCAwO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnKXRyeXtnKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1jPUFqO0FqPVtdO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKz0yKXtlPWNbZF07Zj1jW2QrMV07dHJ5e3ZhciBoPWUuY3JlYXRlO2UuZGVzdHJveT1oKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1mb3IoaD1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWg7KWE9aC5uZXh0RWZmZWN0LGgubmV4dEVmZmVjdD1udWxsLGguZmxhZ3MmOCYmKGguc2libGluZz1cbm51bGwsaC5zdGF0ZU5vZGU9bnVsbCksaD1hO1g9YjtpZygpO3JldHVybiEwfWZ1bmN0aW9uIGdrKGEsYixjKXtiPU1pKGMsYik7Yj1QaShhLGIsMSk7QWcoYSxiKTtiPUhnKCk7YT1LaihhLDEpO251bGwhPT1hJiYoJGMoYSwxLGIpLE1qKGEsYikpfVxuZnVuY3Rpb24gV2koYSxiKXtpZigzPT09YS50YWcpZ2soYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtnayhjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpe2E9TWkoYixhKTt2YXIgZT1TaShjLGEsMSk7QWcoYyxlKTtlPUhnKCk7Yz1LaihjLDEpO2lmKG51bGwhPT1jKSRjKGMsMSxlKSxNaihjLGUpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXRyeXtkLmNvbXBvbmVudERpZENhdGNoKGIsYSl9Y2F0Y2goZil7fWJyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIFlqKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7Yj1IZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmYztVPT09YSYmKFcmYyk9PT1jJiYoND09PVZ8fDM9PT1WJiYoVyY2MjkxNDU2MCk9PT1XJiY1MDA+TygpLWpqP1FqKGEsMCk6dWp8PWMpO01qKGEsYil9ZnVuY3Rpb24gbGooYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1hLm1vZGUsMD09PShiJjIpP2I9MTowPT09KGImNCk/Yj05OT09PWVnKCk/MToyOigwPT09R2omJihHaj10aiksYj1ZYyg2MjkxNDU2MCZ+R2opLDA9PT1iJiYoYj00MTk0MzA0KSkpO2M9SGcoKTthPUtqKGEsYik7bnVsbCE9PWEmJigkYyhhLGIsYyksTWooYSxjKSl9dmFyIGNrO1xuY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIubGFuZXM7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fE4uY3VycmVudCl1Zz0hMDtlbHNlIGlmKDAhPT0oYyZkKSl1Zz0wIT09KGEuZmxhZ3MmMTYzODQpPyEwOiExO2Vsc2V7dWc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6cmkoYik7c2goKTticmVhaztjYXNlIDU6Z2goYik7YnJlYWs7Y2FzZSAxOkZmKGIudHlwZSkmJkpmKGIpO2JyZWFrO2Nhc2UgNDplaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7dmFyIGU9Yi50eXBlLl9jb250ZXh0O0kobWcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2lmKDAhPT0oYyZiLmNoaWxkLmNoaWxkTGFuZXMpKXJldHVybiB0aShhLGIsYyk7SShQLFAuY3VycmVudCYxKTtiPWhpKGEsYixjKTtyZXR1cm4gbnVsbCE9PVxuYj9iLnNpYmxpbmc6bnVsbH1JKFAsUC5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD0wIT09KGMmYi5jaGlsZExhbmVzKTtpZigwIT09KGEuZmxhZ3MmNjQpKXtpZihkKXJldHVybiBBaShhLGIsYyk7Yi5mbGFnc3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtJKFAsUC5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBiLmxhbmVzPTAsbWkoYSxiLGMpfXJldHVybiBoaShhLGIsYyl9ZWxzZSB1Zz0hMTtiLmxhbmVzPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsTS5jdXJyZW50KTt0ZyhiLGMpO2U9Q2gobnVsbCxiLGQsYSxlLGMpO2IuZmxhZ3N8PTE7aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEZmKGQpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt4ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmR2coYixkLGcsYSk7ZS51cGRhdGVyPUtnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbHM9YjtPZyhiLGQsYSxjKTtiPXFpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLGZpKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTthOntudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTtcbmE9Yi5wZW5kaW5nUHJvcHM7Zj1lLl9pbml0O2U9ZihlLl9wYXlsb2FkKTtiLnR5cGU9ZTtmPWIudGFnPWhrKGUpO2E9bGcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9bGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPXBpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9Z2kobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1paShudWxsLGIsZSxsZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHkoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSkscGkoYSxiLGQsZSxjKTtjYXNlIDM6cmkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih5KDI4MikpO1xuZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lnKGEsYik7Q2coYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlzaCgpLGI9aGkoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihmPWUuaHlkcmF0ZSlraD1yZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGpoPWIsZj1saD0hMDtpZihmKXthPWUubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YTtpZihudWxsIT1hKWZvcihlPTA7ZTxhLmxlbmd0aDtlKz0yKWY9YVtlXSxmLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWFbZSsxXSx0aC5wdXNoKGYpO2M9WmcoYixudWxsLGQsYyk7Zm9yKGIuY2hpbGQ9YztjOyljLmZsYWdzPWMuZmxhZ3MmLTN8MTAyNCxjPWMuc2libGluZ31lbHNlIGZpKGEsYixkLGMpLHNoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZ2goYiksbnVsbD09PWEmJlxucGgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixuZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmbmYoZCxmKSYmKGIuZmxhZ3N8PTE2KSxvaShhLGIpLGZpKGEsYixnLGMpLGIuY2hpbGQ7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmcGgoYiksbnVsbDtjYXNlIDEzOnJldHVybiB0aShhLGIsYyk7Y2FzZSA0OnJldHVybiBlaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1ZZyhiLG51bGwsZCxjKTpmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksZ2koYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKG1nLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9SGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIU4uY3VycmVudCl7Yj1oaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09ayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1cbmsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD16ZygtMSxjJi1jKSxsLnRhZz0yLEFnKGgsbCkpO2gubGFuZXN8PWM7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmKGwubGFuZXN8PWMpO3NnKGgucmV0dXJuLGMpO2subGFuZXN8PWM7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z31maShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix0ZyhiLGMpLGU9dmcoZSxcbmYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5mbGFnc3w9MSxmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9bGcoZSxiLnBlbmRpbmdQcm9wcyksZj1sZyhlLnR5cGUsZiksaWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGtpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLGIudGFnPTEsRmYoZCk/KGE9ITAsSmYoYikpOmE9ITEsdGcoYixjKSxNZyhiLGQsZSksT2coYixkLGUsYykscWkobnVsbCxiLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBBaShhLGIsYyk7Y2FzZSAyMzpyZXR1cm4gbWkoYSxiLGMpO2Nhc2UgMjQ6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO1xufTtmdW5jdGlvbiBpayhhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZmxhZ3M9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkTGFuZXM9dGhpcy5sYW5lcz0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gbmgoYSxiLGMsZCl7cmV0dXJuIG5ldyBpayhhLGIsYyxkKX1mdW5jdGlvbiBqaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfVxuZnVuY3Rpb24gaGsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGppKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1BYSlyZXR1cm4gMTE7aWYoYT09PURhKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFRnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9bmgoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy50eXBlPWEudHlwZSxjLmZsYWdzPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzO2MubGFuZXM9YS5sYW5lcztjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2xhbmVzOmIubGFuZXMsZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0fTtcbmMuc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVmcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWppKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHVhOnJldHVybiBYZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIEhhOmc9ODtlfD0xNjticmVhaztjYXNlIHdhOmc9ODtlfD0xO2JyZWFrO2Nhc2UgeGE6cmV0dXJuIGE9bmgoMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT14YSxhLnR5cGU9eGEsYS5sYW5lcz1mLGE7Y2FzZSBCYTpyZXR1cm4gYT1uaCgxMyxjLGIsZSksYS50eXBlPUJhLGEuZWxlbWVudFR5cGU9QmEsYS5sYW5lcz1mLGE7Y2FzZSBDYTpyZXR1cm4gYT1uaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1DYSxhLmxhbmVzPWYsYTtjYXNlIElhOnJldHVybiB2aShjLGUsZixiKTtjYXNlIEphOnJldHVybiBhPW5oKDI0LGMsYixlKSxhLmVsZW1lbnRUeXBlPUphLGEubGFuZXM9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHlhOmc9MTA7YnJlYWsgYTtjYXNlIHphOmc9OTticmVhayBhO2Nhc2UgQWE6Zz0xMTticmVhayBhO2Nhc2UgRGE6Zz0xNDticmVhayBhO2Nhc2UgRWE6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIEZhOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih5KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPW5oKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmxhbmVzPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gWGcoYSxiLGMsZCl7YT1uaCg3LGEsZCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gdmkoYSxiLGMsZCl7YT1uaCgyMyxhLGQsYik7YS5lbGVtZW50VHlwZT1JYTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVWcoYSxiLGMpe2E9bmgoNixhLG51bGwsYik7YS5sYW5lcz1jO3JldHVybiBhfVxuZnVuY3Rpb24gV2coYSxiLGMpe2I9bmgoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IubGFuZXM9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBqayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLmZpbmlzaGVkV29yaz10aGlzLnBpbmdDYWNoZT10aGlzLmN1cnJlbnQ9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz1aYygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz1aYygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz1aYygwKTt0aGlzLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9bnVsbH1cbmZ1bmN0aW9uIGtrKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6dGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5mdW5jdGlvbiBsayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1IZygpLGc9SWcoZSk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxzO2I6e2lmKFpiKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHkoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoRmYoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih5KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihGZihrKSl7Yz1JZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1DZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXpnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PVxuZCYmKGIuY2FsbGJhY2s9ZCk7QWcoZSxiKTtKZyhlLGcsZik7cmV0dXJuIGd9ZnVuY3Rpb24gbWsoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBuayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXt2YXIgYz1hLnJldHJ5TGFuZTthLnJldHJ5TGFuZT0wIT09YyYmYzxiP2M6Yn19ZnVuY3Rpb24gb2soYSxiKXtuayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmbmsoYSxiKX1mdW5jdGlvbiBwaygpe3JldHVybiBudWxsfVxuZnVuY3Rpb24gcWsoYSxiLGMpe3ZhciBkPW51bGwhPWMmJm51bGwhPWMuaHlkcmF0aW9uT3B0aW9ucyYmYy5oeWRyYXRpb25PcHRpb25zLm11dGFibGVTb3VyY2VzfHxudWxsO2M9bmV3IGprKGEsYixudWxsIT1jJiYhMD09PWMuaHlkcmF0ZSk7Yj1uaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7Yy5jdXJyZW50PWI7Yi5zdGF0ZU5vZGU9Yzt4ZyhiKTthW2ZmXT1jLmN1cnJlbnQ7Y2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO2lmKGQpZm9yKGE9MDthPGQubGVuZ3RoO2ErKyl7Yj1kW2FdO3ZhciBlPWIuX2dldFZlcnNpb247ZT1lKGIuX3NvdXJjZSk7bnVsbD09Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhP2MubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1bYixlXTpjLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEucHVzaChiLGUpfXRoaXMuX2ludGVybmFsUm9vdD1jfVxucWsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtsayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtxay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztsayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbZmZdPW51bGx9KX07ZnVuY3Rpb24gcmsoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVxuZnVuY3Rpb24gc2soYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBxayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIHRrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7aC5jYWxsKGEpfX1sayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPXNrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2suY2FsbChhKX19WGooZnVuY3Rpb24oKXtsayhiLGcsYSxlKX0pfXJldHVybiBtayhnKX1lYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNCxiKTtvayhhLDQpfX07ZmM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDY3MTA4ODY0LGIpO29rKGEsNjcxMDg4NjQpfX07XG5nYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpLGM9SWcoYSk7SmcoYSxjLGIpO29rKGEsYyl9fTtoYz1mdW5jdGlvbihhLGIpe3JldHVybiBiKCl9O1xueWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjphYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9RGIoZCk7aWYoIWUpdGhyb3cgRXJyb3IoeSg5MCkpO1dhKGQpO2FiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtHYj1XajtcbkhiPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9WDtYfD00O3RyeXtyZXR1cm4gZ2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7WD1mLDA9PT1YJiYod2ooKSxpZygpKX19O0liPWZ1bmN0aW9uKCl7MD09PShYJjQ5KSYmKFZqKCksT2ooKSl9O0piPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtYfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fTtmdW5jdGlvbiB1ayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiBrayhhLGIsbnVsbCxjKX12YXIgdms9e0V2ZW50czpbQ2IsdWUsRGIsRWIsRmIsT2ose2N1cnJlbnQ6ITF9XX0sd2s9e2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTcuMC4xXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifTtcbnZhciB4az17YnVuZGxlVHlwZTp3ay5idW5kbGVUeXBlLHZlcnNpb246d2sudmVyc2lvbixyZW5kZXJlclBhY2thZ2VOYW1lOndrLnJlbmRlcmVyUGFja2FnZU5hbWUscmVuZGVyZXJDb25maWc6d2sucmVuZGVyZXJDb25maWcsb3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsb3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzUmVuYW1lUGF0aDpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWNjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3ay5maW5kRmliZXJCeUhvc3RJbnN0YW5jZXx8XG5wayxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHlrPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZigheWsuaXNEaXNhYmxlZCYmeWsuc3VwcG9ydHNGaWJlcil0cnl7TGY9eWsuaW5qZWN0KHhrKSxNZj15a31jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dms7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9dWs7XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHkoMTg4KSk7dGhyb3cgRXJyb3IoeSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1jYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O2V4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtpZigwIT09KGMmNDgpKXJldHVybiBhKGIpO1h8PTE7dHJ5e2lmKGEpcmV0dXJuIGdnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1g9YyxpZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITAsYyl9O1xuZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMSxjKX07ZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFyayhhKSl0aHJvdyBFcnJvcih5KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oWGooZnVuY3Rpb24oKXt0ayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbZmZdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1XajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiB1ayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIXJrKGMpKXRocm93IEVycm9yKHkoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbHMpdGhyb3cgRXJyb3IoeSgzOCkpO3JldHVybiB0ayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5XCI7XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xudmFyIGRlZmF1bHRPcHRpb25zID0ge1xuICBiaW5kSTE4bjogJ2xhbmd1YWdlQ2hhbmdlZCcsXG4gIGJpbmRJMThuU3RvcmU6ICcnLFxuICB0cmFuc0VtcHR5Tm9kZVZhbHVlOiAnJyxcbiAgdHJhbnNTdXBwb3J0QmFzaWNIdG1sTm9kZXM6IHRydWUsXG4gIHRyYW5zS2VlcEJhc2ljSHRtbE5vZGVzRm9yOiBbJ2JyJywgJ3N0cm9uZycsICdpJywgJ3AnXSxcbiAgdXNlU3VzcGVuc2U6IHRydWVcbn07XG52YXIgaTE4bkluc3RhbmNlO1xuZXhwb3J0IHZhciBJMThuQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoKTtcbmV4cG9ydCBmdW5jdGlvbiBzZXREZWZhdWx0cygpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICBkZWZhdWx0T3B0aW9ucyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdE9wdGlvbnMpLCBvcHRpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0cygpIHtcbiAgcmV0dXJuIGRlZmF1bHRPcHRpb25zO1xufVxuZXhwb3J0IHZhciBSZXBvcnROYW1lc3BhY2VzID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBSZXBvcnROYW1lc3BhY2VzKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZXBvcnROYW1lc3BhY2VzKTtcblxuICAgIHRoaXMudXNlZE5hbWVzcGFjZXMgPSB7fTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhSZXBvcnROYW1lc3BhY2VzLCBbe1xuICAgIGtleTogXCJhZGRVc2VkTmFtZXNwYWNlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRVc2VkTmFtZXNwYWNlcyhuYW1lc3BhY2VzKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBuYW1lc3BhY2VzLmZvckVhY2goZnVuY3Rpb24gKG5zKSB7XG4gICAgICAgIGlmICghX3RoaXMudXNlZE5hbWVzcGFjZXNbbnNdKSBfdGhpcy51c2VkTmFtZXNwYWNlc1tuc10gPSB0cnVlO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFVzZWROYW1lc3BhY2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFVzZWROYW1lc3BhY2VzKCkge1xuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMudXNlZE5hbWVzcGFjZXMpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBSZXBvcnROYW1lc3BhY2VzO1xufSgpO1xuZXhwb3J0IGZ1bmN0aW9uIHNldEkxOG4oaW5zdGFuY2UpIHtcbiAgaTE4bkluc3RhbmNlID0gaW5zdGFuY2U7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0STE4bigpIHtcbiAgcmV0dXJuIGkxOG5JbnN0YW5jZTtcbn1cbmV4cG9ydCB2YXIgaW5pdFJlYWN0STE4bmV4dCA9IHtcbiAgdHlwZTogJzNyZFBhcnR5JyxcbiAgaW5pdDogZnVuY3Rpb24gaW5pdChpbnN0YW5jZSkge1xuICAgIHNldERlZmF1bHRzKGluc3RhbmNlLm9wdGlvbnMucmVhY3QpO1xuICAgIHNldEkxOG4oaW5zdGFuY2UpO1xuICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXBvc2VJbml0aWFsUHJvcHMoRm9yQ29tcG9uZW50KSB7XG4gIHJldHVybiBmdW5jdGlvbiAoY3R4KSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgICB2YXIgaTE4bkluaXRpYWxQcm9wcyA9IGdldEluaXRpYWxQcm9wcygpO1xuXG4gICAgICBpZiAoRm9yQ29tcG9uZW50LmdldEluaXRpYWxQcm9wcykge1xuICAgICAgICBGb3JDb21wb25lbnQuZ2V0SW5pdGlhbFByb3BzKGN0eCkudGhlbihmdW5jdGlvbiAoY29tcG9uZW50c0luaXRpYWxQcm9wcykge1xuICAgICAgICAgIHJlc29sdmUoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjb21wb25lbnRzSW5pdGlhbFByb3BzKSwgaTE4bkluaXRpYWxQcm9wcykpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc29sdmUoaTE4bkluaXRpYWxQcm9wcyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0SW5pdGlhbFByb3BzKCkge1xuICB2YXIgaTE4biA9IGdldEkxOG4oKTtcbiAgdmFyIG5hbWVzcGFjZXMgPSBpMThuLnJlcG9ydE5hbWVzcGFjZXMgPyBpMThuLnJlcG9ydE5hbWVzcGFjZXMuZ2V0VXNlZE5hbWVzcGFjZXMoKSA6IFtdO1xuICB2YXIgcmV0ID0ge307XG4gIHZhciBpbml0aWFsSTE4blN0b3JlID0ge307XG4gIGkxOG4ubGFuZ3VhZ2VzLmZvckVhY2goZnVuY3Rpb24gKGwpIHtcbiAgICBpbml0aWFsSTE4blN0b3JlW2xdID0ge307XG4gICAgbmFtZXNwYWNlcy5mb3JFYWNoKGZ1bmN0aW9uIChucykge1xuICAgICAgaW5pdGlhbEkxOG5TdG9yZVtsXVtuc10gPSBpMThuLmdldFJlc291cmNlQnVuZGxlKGwsIG5zKSB8fCB7fTtcbiAgICB9KTtcbiAgfSk7XG4gIHJldC5pbml0aWFsSTE4blN0b3JlID0gaW5pdGlhbEkxOG5TdG9yZTtcbiAgcmV0LmluaXRpYWxMYW5ndWFnZSA9IGkxOG4ubGFuZ3VhZ2U7XG4gIHJldHVybiByZXQ7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7XG4gICAgYXJyMltpXSA9IGFycltpXTtcbiAgfVxuXG4gIHJldHVybiBhcnIyO1xufSIsImltcG9ydCBhcnJheVdpdGhIb2xlcyBmcm9tIFwiLi4vYXJyYXlXaXRoSG9sZXMvX2luZGV4Lm1qc1wiO1xuaW1wb3J0IGl0ZXJhYmxlVG9BcnJheUxpbWl0IGZyb20gXCIuLi9pdGVyYWJsZVRvQXJyYXlMaW1pdC9faW5kZXgubWpzXCI7XG5pbXBvcnQgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkgZnJvbSBcIi4uL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5L19pbmRleC5tanNcIjtcbmltcG9ydCBub25JdGVyYWJsZVJlc3QgZnJvbSBcIi4uL25vbkl0ZXJhYmxlUmVzdC9faW5kZXgubWpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IG5vbkl0ZXJhYmxlUmVzdCgpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuO1xuICB2YXIgX2FyciA9IFtdO1xuICB2YXIgX24gPSB0cnVlO1xuICB2YXIgX2QgPSBmYWxzZTtcbiAgdmFyIF9lID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2QgPSB0cnVlO1xuICAgIF9lID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9hcnI7XG59IiwiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4uL2FycmF5TGlrZVRvQXJyYXkvX2luZGV4Lm1qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufSIsImV4cG9ydCBmdW5jdGlvbiB3YXJuKCkge1xuICBpZiAoY29uc29sZSAmJiBjb25zb2xlLndhcm4pIHtcbiAgICB2YXIgX2NvbnNvbGU7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJykgYXJnc1swXSA9IFwicmVhY3QtaTE4bmV4dDo6IFwiLmNvbmNhdChhcmdzWzBdKTtcblxuICAgIChfY29uc29sZSA9IGNvbnNvbGUpLndhcm4uYXBwbHkoX2NvbnNvbGUsIGFyZ3MpO1xuICB9XG59XG52YXIgYWxyZWFkeVdhcm5lZCA9IHt9O1xuZXhwb3J0IGZ1bmN0aW9uIHdhcm5PbmNlKCkge1xuICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gIH1cblxuICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09ICdzdHJpbmcnICYmIGFscmVhZHlXYXJuZWRbYXJnc1swXV0pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJykgYWxyZWFkeVdhcm5lZFthcmdzWzBdXSA9IG5ldyBEYXRlKCk7XG4gIHdhcm4uYXBwbHkodm9pZCAwLCBhcmdzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2FkTmFtZXNwYWNlcyhpMThuLCBucywgY2IpIHtcbiAgaTE4bi5sb2FkTmFtZXNwYWNlcyhucywgZnVuY3Rpb24gKCkge1xuICAgIGlmIChpMThuLmlzSW5pdGlhbGl6ZWQpIHtcbiAgICAgIGNiKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBpbml0aWFsaXplZCA9IGZ1bmN0aW9uIGluaXRpYWxpemVkKCkge1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpMThuLm9mZignaW5pdGlhbGl6ZWQnLCBpbml0aWFsaXplZCk7XG4gICAgICAgIH0sIDApO1xuICAgICAgICBjYigpO1xuICAgICAgfTtcblxuICAgICAgaTE4bi5vbignaW5pdGlhbGl6ZWQnLCBpbml0aWFsaXplZCk7XG4gICAgfVxuICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNMb2FkZWROYW1lc3BhY2UobnMsIGkxOG4pIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9O1xuXG4gIGlmICghaTE4bi5sYW5ndWFnZXMgfHwgIWkxOG4ubGFuZ3VhZ2VzLmxlbmd0aCkge1xuICAgIHdhcm5PbmNlKCdpMThuLmxhbmd1YWdlcyB3ZXJlIHVuZGVmaW5lZCBvciBlbXB0eScsIGkxOG4ubGFuZ3VhZ2VzKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHZhciBsbmcgPSBpMThuLmxhbmd1YWdlc1swXTtcbiAgdmFyIGZhbGxiYWNrTG5nID0gaTE4bi5vcHRpb25zID8gaTE4bi5vcHRpb25zLmZhbGxiYWNrTG5nIDogZmFsc2U7XG4gIHZhciBsYXN0TG5nID0gaTE4bi5sYW5ndWFnZXNbaTE4bi5sYW5ndWFnZXMubGVuZ3RoIC0gMV07XG4gIGlmIChsbmcudG9Mb3dlckNhc2UoKSA9PT0gJ2NpbW9kZScpIHJldHVybiB0cnVlO1xuXG4gIHZhciBsb2FkTm90UGVuZGluZyA9IGZ1bmN0aW9uIGxvYWROb3RQZW5kaW5nKGwsIG4pIHtcbiAgICB2YXIgbG9hZFN0YXRlID0gaTE4bi5zZXJ2aWNlcy5iYWNrZW5kQ29ubmVjdG9yLnN0YXRlW1wiXCIuY29uY2F0KGwsIFwifFwiKS5jb25jYXQobildO1xuICAgIHJldHVybiBsb2FkU3RhdGUgPT09IC0xIHx8IGxvYWRTdGF0ZSA9PT0gMjtcbiAgfTtcblxuICBpZiAob3B0aW9ucy5iaW5kSTE4biAmJiBvcHRpb25zLmJpbmRJMThuLmluZGV4T2YoJ2xhbmd1YWdlQ2hhbmdpbmcnKSA+IC0xICYmIGkxOG4uc2VydmljZXMuYmFja2VuZENvbm5lY3Rvci5iYWNrZW5kICYmIGkxOG4uaXNMYW5ndWFnZUNoYW5naW5nVG8gJiYgIWxvYWROb3RQZW5kaW5nKGkxOG4uaXNMYW5ndWFnZUNoYW5naW5nVG8sIG5zKSkgcmV0dXJuIGZhbHNlO1xuICBpZiAoaTE4bi5oYXNSZXNvdXJjZUJ1bmRsZShsbmcsIG5zKSkgcmV0dXJuIHRydWU7XG4gIGlmICghaTE4bi5zZXJ2aWNlcy5iYWNrZW5kQ29ubmVjdG9yLmJhY2tlbmQpIHJldHVybiB0cnVlO1xuICBpZiAobG9hZE5vdFBlbmRpbmcobG5nLCBucykgJiYgKCFmYWxsYmFja0xuZyB8fCBsb2FkTm90UGVuZGluZyhsYXN0TG5nLCBucykpKSByZXR1cm4gdHJ1ZTtcbiAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldERpc3BsYXlOYW1lKENvbXBvbmVudCkge1xuICByZXR1cm4gQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lIHx8ICh0eXBlb2YgQ29tcG9uZW50ID09PSAnc3RyaW5nJyAmJiBDb21wb25lbnQubGVuZ3RoID4gMCA/IENvbXBvbmVudCA6ICdVbmtub3duJyk7XG59IiwiaW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXlcIjtcbmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIjtcblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNvbnRleHQsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGdldEkxOG4sIGdldERlZmF1bHRzLCBSZXBvcnROYW1lc3BhY2VzLCBJMThuQ29udGV4dCB9IGZyb20gJy4vY29udGV4dCc7XG5pbXBvcnQgeyB3YXJuT25jZSwgbG9hZE5hbWVzcGFjZXMsIGhhc0xvYWRlZE5hbWVzcGFjZSB9IGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVRyYW5zbGF0aW9uKG5zKSB7XG4gIHZhciBwcm9wcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG4gIHZhciBpMThuRnJvbVByb3BzID0gcHJvcHMuaTE4bjtcblxuICB2YXIgX3JlZiA9IHVzZUNvbnRleHQoSTE4bkNvbnRleHQpIHx8IHt9LFxuICAgICAgaTE4bkZyb21Db250ZXh0ID0gX3JlZi5pMThuLFxuICAgICAgZGVmYXVsdE5TRnJvbUNvbnRleHQgPSBfcmVmLmRlZmF1bHROUztcblxuICB2YXIgaTE4biA9IGkxOG5Gcm9tUHJvcHMgfHwgaTE4bkZyb21Db250ZXh0IHx8IGdldEkxOG4oKTtcbiAgaWYgKGkxOG4gJiYgIWkxOG4ucmVwb3J0TmFtZXNwYWNlcykgaTE4bi5yZXBvcnROYW1lc3BhY2VzID0gbmV3IFJlcG9ydE5hbWVzcGFjZXMoKTtcblxuICBpZiAoIWkxOG4pIHtcbiAgICB3YXJuT25jZSgnWW91IHdpbGwgbmVlZCB0byBwYXNzIGluIGFuIGkxOG5leHQgaW5zdGFuY2UgYnkgdXNpbmcgaW5pdFJlYWN0STE4bmV4dCcpO1xuXG4gICAgdmFyIG5vdFJlYWR5VCA9IGZ1bmN0aW9uIG5vdFJlYWR5VChrKSB7XG4gICAgICByZXR1cm4gQXJyYXkuaXNBcnJheShrKSA/IGtbay5sZW5ndGggLSAxXSA6IGs7XG4gICAgfTtcblxuICAgIHZhciByZXROb3RSZWFkeSA9IFtub3RSZWFkeVQsIHt9LCBmYWxzZV07XG4gICAgcmV0Tm90UmVhZHkudCA9IG5vdFJlYWR5VDtcbiAgICByZXROb3RSZWFkeS5pMThuID0ge307XG4gICAgcmV0Tm90UmVhZHkucmVhZHkgPSBmYWxzZTtcbiAgICByZXR1cm4gcmV0Tm90UmVhZHk7XG4gIH1cblxuICBpZiAoaTE4bi5vcHRpb25zLnJlYWN0ICYmIGkxOG4ub3B0aW9ucy5yZWFjdC53YWl0ICE9PSB1bmRlZmluZWQpIHdhcm5PbmNlKCdJdCBzZWVtcyB5b3UgYXJlIHN0aWxsIHVzaW5nIHRoZSBvbGQgd2FpdCBvcHRpb24sIHlvdSBtYXkgbWlncmF0ZSB0byB0aGUgbmV3IHVzZVN1c3BlbnNlIGJlaGF2aW91ci4nKTtcblxuICB2YXIgaTE4bk9wdGlvbnMgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZ2V0RGVmYXVsdHMoKSksIGkxOG4ub3B0aW9ucy5yZWFjdCksIHByb3BzKTtcblxuICB2YXIgdXNlU3VzcGVuc2UgPSBpMThuT3B0aW9ucy51c2VTdXNwZW5zZTtcbiAgdmFyIG5hbWVzcGFjZXMgPSBucyB8fCBkZWZhdWx0TlNGcm9tQ29udGV4dCB8fCBpMThuLm9wdGlvbnMgJiYgaTE4bi5vcHRpb25zLmRlZmF1bHROUztcbiAgbmFtZXNwYWNlcyA9IHR5cGVvZiBuYW1lc3BhY2VzID09PSAnc3RyaW5nJyA/IFtuYW1lc3BhY2VzXSA6IG5hbWVzcGFjZXMgfHwgWyd0cmFuc2xhdGlvbiddO1xuICBpZiAoaTE4bi5yZXBvcnROYW1lc3BhY2VzLmFkZFVzZWROYW1lc3BhY2VzKSBpMThuLnJlcG9ydE5hbWVzcGFjZXMuYWRkVXNlZE5hbWVzcGFjZXMobmFtZXNwYWNlcyk7XG4gIHZhciByZWFkeSA9IChpMThuLmlzSW5pdGlhbGl6ZWQgfHwgaTE4bi5pbml0aWFsaXplZFN0b3JlT25jZSkgJiYgbmFtZXNwYWNlcy5ldmVyeShmdW5jdGlvbiAobikge1xuICAgIHJldHVybiBoYXNMb2FkZWROYW1lc3BhY2UobiwgaTE4biwgaTE4bk9wdGlvbnMpO1xuICB9KTtcblxuICBmdW5jdGlvbiBnZXRUKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0OiBpMThuLmdldEZpeGVkVChudWxsLCBpMThuT3B0aW9ucy5uc01vZGUgPT09ICdmYWxsYmFjaycgPyBuYW1lc3BhY2VzIDogbmFtZXNwYWNlc1swXSlcbiAgICB9O1xuICB9XG5cbiAgdmFyIF91c2VTdGF0ZSA9IHVzZVN0YXRlKGdldFQoKSksXG4gICAgICBfdXNlU3RhdGUyID0gX3NsaWNlZFRvQXJyYXkoX3VzZVN0YXRlLCAyKSxcbiAgICAgIHQgPSBfdXNlU3RhdGUyWzBdLFxuICAgICAgc2V0VCA9IF91c2VTdGF0ZTJbMV07XG5cbiAgdmFyIGlzTW91bnRlZCA9IHVzZVJlZih0cnVlKTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYmluZEkxOG4gPSBpMThuT3B0aW9ucy5iaW5kSTE4bixcbiAgICAgICAgYmluZEkxOG5TdG9yZSA9IGkxOG5PcHRpb25zLmJpbmRJMThuU3RvcmU7XG4gICAgaXNNb3VudGVkLmN1cnJlbnQgPSB0cnVlO1xuXG4gICAgaWYgKCFyZWFkeSAmJiAhdXNlU3VzcGVuc2UpIHtcbiAgICAgIGxvYWROYW1lc3BhY2VzKGkxOG4sIG5hbWVzcGFjZXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGlzTW91bnRlZC5jdXJyZW50KSBzZXRUKGdldFQoKSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBib3VuZFJlc2V0KCkge1xuICAgICAgaWYgKGlzTW91bnRlZC5jdXJyZW50KSBzZXRUKGdldFQoKSk7XG4gICAgfVxuXG4gICAgaWYgKGJpbmRJMThuICYmIGkxOG4pIGkxOG4ub24oYmluZEkxOG4sIGJvdW5kUmVzZXQpO1xuICAgIGlmIChiaW5kSTE4blN0b3JlICYmIGkxOG4pIGkxOG4uc3RvcmUub24oYmluZEkxOG5TdG9yZSwgYm91bmRSZXNldCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzTW91bnRlZC5jdXJyZW50ID0gZmFsc2U7XG4gICAgICBpZiAoYmluZEkxOG4gJiYgaTE4bikgYmluZEkxOG4uc3BsaXQoJyAnKS5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHJldHVybiBpMThuLm9mZihlLCBib3VuZFJlc2V0KTtcbiAgICAgIH0pO1xuICAgICAgaWYgKGJpbmRJMThuU3RvcmUgJiYgaTE4bikgYmluZEkxOG5TdG9yZS5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgcmV0dXJuIGkxOG4uc3RvcmUub2ZmKGUsIGJvdW5kUmVzZXQpO1xuICAgICAgfSk7XG4gICAgfTtcbiAgfSwgW2kxOG4sIG5hbWVzcGFjZXMuam9pbigpXSk7XG4gIHZhciBpc0luaXRpYWwgPSB1c2VSZWYodHJ1ZSk7XG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGlzTW91bnRlZC5jdXJyZW50ICYmICFpc0luaXRpYWwuY3VycmVudCkge1xuICAgICAgc2V0VChnZXRUKCkpO1xuICAgIH1cblxuICAgIGlzSW5pdGlhbC5jdXJyZW50ID0gZmFsc2U7XG4gIH0sIFtpMThuXSk7XG4gIHZhciByZXQgPSBbdC50LCBpMThuLCByZWFkeV07XG4gIHJldC50ID0gdC50O1xuICByZXQuaTE4biA9IGkxOG47XG4gIHJldC5yZWFkeSA9IHJlYWR5O1xuICBpZiAocmVhZHkpIHJldHVybiByZXQ7XG4gIGlmICghcmVhZHkgJiYgIXVzZVN1c3BlbnNlKSByZXR1cm4gcmV0O1xuICB0aHJvdyBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgIGxvYWROYW1lc3BhY2VzKGkxOG4sIG5hbWVzcGFjZXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJlc29sdmUoKTtcbiAgICB9KTtcbiAgfSk7XG59IiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjFcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgbD1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPTYwMTAzLHA9NjAxMDY7ZXhwb3J0cy5GcmFnbWVudD02MDEwNztleHBvcnRzLlN0cmljdE1vZGU9NjAxMDg7ZXhwb3J0cy5Qcm9maWxlcj02MDExNDt2YXIgcT02MDEwOSxyPTYwMTEwLHQ9NjAxMTI7ZXhwb3J0cy5TdXNwZW5zZT02MDExMzt2YXIgdT02MDExNSx2PTYwMTE2O1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIHc9U3ltYm9sLmZvcjtuPXcoXCJyZWFjdC5lbGVtZW50XCIpO3A9dyhcInJlYWN0LnBvcnRhbFwiKTtleHBvcnRzLkZyYWdtZW50PXcoXCJyZWFjdC5mcmFnbWVudFwiKTtleHBvcnRzLlN0cmljdE1vZGU9dyhcInJlYWN0LnN0cmljdF9tb2RlXCIpO2V4cG9ydHMuUHJvZmlsZXI9dyhcInJlYWN0LnByb2ZpbGVyXCIpO3E9dyhcInJlYWN0LnByb3ZpZGVyXCIpO3I9dyhcInJlYWN0LmNvbnRleHRcIik7dD13KFwicmVhY3QuZm9yd2FyZF9yZWZcIik7ZXhwb3J0cy5TdXNwZW5zZT13KFwicmVhY3Quc3VzcGVuc2VcIik7dT13KFwicmVhY3QubWVtb1wiKTt2PXcoXCJyZWFjdC5sYXp5XCIpfXZhciB4PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtcbmZ1bmN0aW9uIHkoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiB6KGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEE9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEI9e307ZnVuY3Rpb24gQyhhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfUMucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Qy5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKHooODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0MucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRCgpe31ELnByb3RvdHlwZT1DLnByb3RvdHlwZTtmdW5jdGlvbiBFKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9dmFyIEY9RS5wcm90b3R5cGU9bmV3IEQ7Ri5jb25zdHJ1Y3Rvcj1FO2woRixDLnByb3RvdHlwZSk7Ri5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsYyl7dmFyIGUsZD17fSxrPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGs9XCJcIitiLmtleSksYilILmNhbGwoYixlKSYmIUkuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBnPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZylkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGcpe2Zvcih2YXIgZj1BcnJheShnKSxtPTA7bTxnO20rKylmW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Zn1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBnPWEuZGVmYXVsdFByb3BzLGcpdm9pZCAwPT09ZFtlXSYmKGRbZV09Z1tlXSk7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLGtleTprLHJlZjpoLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19XG5mdW5jdGlvbiBLKGEsYil7cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBMKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1ufWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrYS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTT0vXFwvKy9nO2Z1bmN0aW9uIE4oYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoXCJcIithLmtleSk6Yi50b1N0cmluZygzNil9XG5mdW5jdGlvbiBPKGEsYixjLGUsZCl7dmFyIGs9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWt8fFwiYm9vbGVhblwiPT09aylhPW51bGw7dmFyIGg9ITE7aWYobnVsbD09PWEpaD0hMDtlbHNlIHN3aXRjaChrKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmg9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIG46Y2FzZSBwOmg9ITB9fWlmKGgpcmV0dXJuIGg9YSxkPWQoaCksYT1cIlwiPT09ZT9cIi5cIitOKGgsMCk6ZSxBcnJheS5pc0FycmF5KGQpPyhjPVwiXCIsbnVsbCE9YSYmKGM9YS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpLE8oZCxiLGMsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYX0pKTpudWxsIT1kJiYoTChkKSYmKGQ9SyhkLGMrKCFkLmtleXx8aCYmaC5rZXk9PT1kLmtleT9cIlwiOihcIlwiK2Qua2V5KS5yZXBsYWNlKE0sXCIkJi9cIikrXCIvXCIpK2EpKSxiLnB1c2goZCkpLDE7aD0wO2U9XCJcIj09PWU/XCIuXCI6ZStcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgZz1cbjA7ZzxhLmxlbmd0aDtnKyspe2s9YVtnXTt2YXIgZj1lK04oayxnKTtoKz1PKGssYixjLGYsZCl9ZWxzZSBpZihmPXkoYSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGc9MDshKGs9YS5uZXh0KCkpLmRvbmU7KWs9ay52YWx1ZSxmPWUrTihrLGcrKyksaCs9TyhrLGIsYyxmLGQpO2Vsc2UgaWYoXCJvYmplY3RcIj09PWspdGhyb3cgYj1cIlwiK2EsRXJyb3IoeigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09Yj9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7cmV0dXJuIGh9ZnVuY3Rpb24gUChhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZT1bXSxkPTA7TyhhLGUsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoYyxhLGQrKyl9KTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFEoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe3ZhciBiPWEuX3Jlc3VsdDtiPWIoKTthLl9zdGF0dXM9MDthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdDt0aHJvdyBhLl9yZXN1bHQ7fXZhciBSPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFMoKXt2YXIgYT1SLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeigzMjEpKTtyZXR1cm4gYX12YXIgVD17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpSLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOnt0cmFuc2l0aW9uOjB9LFJlYWN0Q3VycmVudE93bmVyOkcsSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtcbmV4cG9ydHMuQ2hpbGRyZW49e21hcDpQLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGMpe1AoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxjKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtQKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUChhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFMKGEpKXRocm93IEVycm9yKHooMTQzKSk7cmV0dXJuIGF9fTtleHBvcnRzLkNvbXBvbmVudD1DO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1FO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VDtcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcih6KDI2NyxhKSk7dmFyIGU9bCh7fSxhLnByb3BzKSxkPWEua2V5LGs9YS5yZWYsaD1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYsaD1HLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZD1cIlwiK2Iua2V5KTtpZihhLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMpdmFyIGc9YS50eXBlLmRlZmF1bHRQcm9wcztmb3IoZiBpbiBiKUguY2FsbChiLGYpJiYhSS5oYXNPd25Qcm9wZXJ0eShmKSYmKGVbZl09dm9pZCAwPT09YltmXSYmdm9pZCAwIT09Zz9nW2ZdOmJbZl0pfXZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2c9QXJyYXkoZik7Zm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxcbmtleTpkLHJlZjprLHByb3BzOmUsX293bmVyOmh9fTtleHBvcnRzLmNyZWF0ZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjpyLF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6cSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9SjtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9Si5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O2V4cG9ydHMuZm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dCxyZW5kZXI6YX19O2V4cG9ydHMuaXNWYWxpZEVsZW1lbnQ9TDtcbmV4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6dixfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlF9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6dSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFMoKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4xXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4yMC4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX1cbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciB0PW51bGwsdT1udWxsLHc9ZnVuY3Rpb24oKXtpZihudWxsIT09dCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0KCEwLGEpO3Q9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHcsMCksYjt9fTtmPWZ1bmN0aW9uKGEpe251bGwhPT10P3NldFRpbWVvdXQoZiwwLGEpOih0PWEsc2V0VGltZW91dCh3LDApKX07Zz1mdW5jdGlvbihhLGIpe3U9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHUpfTtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2s9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgeD13aW5kb3cuc2V0VGltZW91dCx5PXdpbmRvdy5jbGVhclRpbWVvdXQ7aWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlKXt2YXIgej1cbndpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB6JiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKX12YXIgQT0hMSxCPW51bGwsQz0tMSxEPTUsRT0wO2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49XG5FfTtrPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpEPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgRj1uZXcgTWVzc2FnZUNoYW5uZWwsRz1GLnBvcnQyO0YucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7aWYobnVsbCE9PUIpe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7RT1hK0Q7dHJ5e0IoITAsYSk/Ry5wb3N0TWVzc2FnZShudWxsKTooQT0hMSxCPW51bGwpfWNhdGNoKGIpe3Rocm93IEcucG9zdE1lc3NhZ2UobnVsbCksYjt9fWVsc2UgQT0hMX07Zj1mdW5jdGlvbihhKXtCPWE7QXx8KEE9ITAsRy5wb3N0TWVzc2FnZShudWxsKSl9O2c9ZnVuY3Rpb24oYSxiKXtDPVxueChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eShDKTtDPS0xfX1mdW5jdGlvbiBIKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEkoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEooYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIEsoYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SShuLGMpKXZvaWQgMCE9PXImJjA+SShyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SShyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSShhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTD1bXSxNPVtdLE49MSxPPW51bGwsUD0zLFE9ITEsUj0hMSxTPSExO1xuZnVuY3Rpb24gVChhKXtmb3IodmFyIGI9SihNKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKUsoTSk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlLKE0pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSChMLGIpO2Vsc2UgYnJlYWs7Yj1KKE0pfX1mdW5jdGlvbiBVKGEpe1M9ITE7VChhKTtpZighUilpZihudWxsIT09SihMKSlSPSEwLGYoVik7ZWxzZXt2YXIgYj1KKE0pO251bGwhPT1iJiZnKFUsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gVihhLGIpe1I9ITE7UyYmKFM9ITEsaCgpKTtRPSEwO3ZhciBjPVA7dHJ5e1QoYik7Zm9yKE89SihMKTtudWxsIT09TyYmKCEoTy5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQoKSk7KXt2YXIgZD1PLmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXtPLmNhbGxiYWNrPW51bGw7UD1PLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChPLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/Ty5jYWxsYmFjaz1lOk89PT1KKEwpJiZLKEwpO1QoYil9ZWxzZSBLKEwpO089SihMKX1pZihudWxsIT09Tyl2YXIgbT0hMDtlbHNle3ZhciBuPUooTSk7bnVsbCE9PW4mJmcoVSxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7Tz1udWxsLFA9YyxRPSExfX12YXIgVz1rO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7XG5leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1J8fFF8fChSPSEwLGYoVikpfTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFB9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gSihMKX07XG5leHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFApe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVB9dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtQPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1XO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UDtQPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtQPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jPyhjPWMuZGVsYXksYz1cIm51bWJlclwiPT09dHlwZW9mIGMmJjA8Yz9kK2M6ZCk6Yz1kO3N3aXRjaChhKXtjYXNlIDE6dmFyIGU9LTE7YnJlYWs7Y2FzZSAyOmU9MjUwO2JyZWFrO2Nhc2UgNTplPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmU9MUU0O2JyZWFrO2RlZmF1bHQ6ZT01RTN9ZT1jK2U7YT17aWQ6TisrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTpjLGV4cGlyYXRpb25UaW1lOmUsc29ydEluZGV4Oi0xfTtjPmQ/KGEuc29ydEluZGV4PWMsSChNLGEpLG51bGw9PT1KKEwpJiZhPT09SihNKSYmKFM/aCgpOlM9ITAsZyhVLGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxIKEwsYSksUnx8UXx8KFI9ITAsZihWKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVA7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UDtQPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1A9Y319fTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJ2YXIgbWFwID0ge1xuXHRcIi4vZW4vYnJvd3NlLmpzb25cIjogNDE3LFxuXHRcIi4vZW4vY291cnNlLmpzb25cIjogOTI4LFxuXHRcIi4vZW4vaGVhZGVyLmpzb25cIjogMjYzLFxuXHRcIi4vZW4vcG9wdXAuanNvblwiOiA2MDAsXG5cdFwiLi92aS9icm93c2UuanNvblwiOiA1MDgsXG5cdFwiLi92aS9jb3Vyc2UuanNvblwiOiA3MjIsXG5cdFwiLi92aS9oZWFkZXIuanNvblwiOiA1NjEsXG5cdFwiLi92aS9wb3B1cC5qc29uXCI6IDk3NlxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhtYXAsIHJlcSkpIHtcblx0XHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdFx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHRcdHRocm93IGU7XG5cdH1cblx0cmV0dXJuIG1hcFtyZXFdO1xufVxud2VicGFja0NvbnRleHQua2V5cyA9IGZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZTtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0NvbnRleHQ7XG53ZWJwYWNrQ29udGV4dC5pZCA9IDI1OTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgeGh0dHAgZnJvbSAnQHJlYWxtanMveGh0dHAtcmVxdWVzdCc7XHJcblxyXG5jb25zdCBUSU1FT1VUID0gMzAwMDA7ICAvLyAzMHNcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBmZXRjaCh1cmwpIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgeGh0dHAuZ2V0KHVybCwgeyB0aW1lb3V0OiBUSU1FT1VUIH0pLnRoZW4ocmVzID0+IHtcclxuICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMCkge1xyXG4gICAgICAgIHJlc29sdmUoSlNPTi5wYXJzZShyZXMucmVzcG9uc2VUZXh0KSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVqZWN0KGBSZXF1ZXN0IHRvICR7dXJsfSByZXR1cm4gJHtyZXMuc3RhdHVzfSBjb2RlYCk7XHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgfSk7XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCB7IGZldGNoIH0gZnJvbSAnLi9mZXRjaGVyJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBfX2VuZHBvaW50IDogbnVsbCxcclxuXHJcbiAgc2V0RW5kcG9pbnQoZW5kcG9pbnQpIHtcclxuICAgIHRoaXMuX19lbmRwb2ludCA9IGVuZHBvaW50O1xyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfSxcclxuXHJcbiAgZmV0Y2goKSB7XHJcblxyXG4gICAgaWYgKCF0aGlzLl9fZW5kcG9pbnQpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiIyBEYXRhIGZldGNoZXI6IE1pc3NpbmcgZW5kcG9pbnRcIik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgUHJvbWlzZS5hbGwoWyBmZXRjaCh0aGlzLl9fZW5kcG9pbnQucHJvZ3JhbXMpLCBmZXRjaCh0aGlzLl9fZW5kcG9pbnQucHJvbW90aW9ucykgXSkudGhlbihyZXNvbHZlKS5jYXRjaChyZWplY3QpO1xyXG4gICAgfSk7XHJcblxyXG4gIH0sXHJcblxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHtcbiAgICBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn0iLCJpbXBvcnQgZGVmaW5lUHJvcGVydHkgZnJvbSBcIi4uL2RlZmluZVByb3BlcnR5L19pbmRleC5tanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gT2JqZWN0KGFyZ3VtZW50c1tpXSkgOiB7fTtcbiAgICB2YXIgb3duS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG5cbiAgICBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIG93bktleXMgPSBvd25LZXlzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSkuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBzeW0pLmVudW1lcmFibGU7XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgb3duS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIHNlbGY7XG59IiwiaW1wb3J0IF90eXBlb2YgZnJvbSBcIi4uL3R5cGVvZi9faW5kZXgubWpzXCI7XG5pbXBvcnQgYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gXCIuLi9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQvX2luZGV4Lm1qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkge1xuICBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkge1xuICAgIHJldHVybiBjYWxsO1xuICB9XG5cbiAgcmV0dXJuIGFzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gIH07XG4gIHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9O1xuXG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59IiwiaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCIuLi9zZXRQcm90b3R5cGVPZi9faW5kZXgubWpzXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgfVxuXG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwge1xuICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICB2YWx1ZTogc3ViQ2xhc3MsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH1cbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59IiwiaW1wb3J0IF90eXBlb2YgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mJztcbmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZCc7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrJztcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MnO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4nO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZic7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQnO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyc7XG5cbnZhciBjb25zb2xlTG9nZ2VyID0ge1xuICB0eXBlOiAnbG9nZ2VyJyxcbiAgbG9nOiBmdW5jdGlvbiBsb2coYXJncykge1xuICAgIHRoaXMub3V0cHV0KCdsb2cnLCBhcmdzKTtcbiAgfSxcbiAgd2FybjogZnVuY3Rpb24gd2FybihhcmdzKSB7XG4gICAgdGhpcy5vdXRwdXQoJ3dhcm4nLCBhcmdzKTtcbiAgfSxcbiAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKGFyZ3MpIHtcbiAgICB0aGlzLm91dHB1dCgnZXJyb3InLCBhcmdzKTtcbiAgfSxcbiAgb3V0cHV0OiBmdW5jdGlvbiBvdXRwdXQodHlwZSwgYXJncykge1xuICAgIGlmIChjb25zb2xlICYmIGNvbnNvbGVbdHlwZV0pIGNvbnNvbGVbdHlwZV0uYXBwbHkoY29uc29sZSwgYXJncyk7XG4gIH1cbn07XG5cbnZhciBMb2dnZXIgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIExvZ2dlcihjb25jcmV0ZUxvZ2dlcikge1xuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2dnZXIpO1xuXG4gICAgdGhpcy5pbml0KGNvbmNyZXRlTG9nZ2VyLCBvcHRpb25zKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMb2dnZXIsIFt7XG4gICAga2V5OiBcImluaXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdChjb25jcmV0ZUxvZ2dlcikge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuICAgICAgdGhpcy5wcmVmaXggPSBvcHRpb25zLnByZWZpeCB8fCAnaTE4bmV4dDonO1xuICAgICAgdGhpcy5sb2dnZXIgPSBjb25jcmV0ZUxvZ2dlciB8fCBjb25zb2xlTG9nZ2VyO1xuICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgIHRoaXMuZGVidWcgPSBvcHRpb25zLmRlYnVnO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXREZWJ1Z1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXREZWJ1Zyhib29sKSB7XG4gICAgICB0aGlzLmRlYnVnID0gYm9vbDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibG9nXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvZygpIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5mb3J3YXJkKGFyZ3MsICdsb2cnLCAnJywgdHJ1ZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIndhcm5cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gd2FybigpIHtcbiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiksIF9rZXkyID0gMDsgX2tleTIgPCBfbGVuMjsgX2tleTIrKykge1xuICAgICAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmZvcndhcmQoYXJncywgJ3dhcm4nLCAnJywgdHJ1ZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImVycm9yXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVycm9yKCkge1xuICAgICAgZm9yICh2YXIgX2xlbjMgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4zKSwgX2tleTMgPSAwOyBfa2V5MyA8IF9sZW4zOyBfa2V5MysrKSB7XG4gICAgICAgIGFyZ3NbX2tleTNdID0gYXJndW1lbnRzW19rZXkzXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuZm9yd2FyZChhcmdzLCAnZXJyb3InLCAnJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRlcHJlY2F0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZXByZWNhdGUoKSB7XG4gICAgICBmb3IgKHZhciBfbGVuNCA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjQpLCBfa2V5NCA9IDA7IF9rZXk0IDwgX2xlbjQ7IF9rZXk0KyspIHtcbiAgICAgICAgYXJnc1tfa2V5NF0gPSBhcmd1bWVudHNbX2tleTRdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5mb3J3YXJkKGFyZ3MsICd3YXJuJywgJ1dBUk5JTkcgREVQUkVDQVRFRDogJywgdHJ1ZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImZvcndhcmRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9yd2FyZChhcmdzLCBsdmwsIHByZWZpeCwgZGVidWdPbmx5KSB7XG4gICAgICBpZiAoZGVidWdPbmx5ICYmICF0aGlzLmRlYnVnKSByZXR1cm4gbnVsbDtcbiAgICAgIGlmICh0eXBlb2YgYXJnc1swXSA9PT0gJ3N0cmluZycpIGFyZ3NbMF0gPSBcIlwiLmNvbmNhdChwcmVmaXgpLmNvbmNhdCh0aGlzLnByZWZpeCwgXCIgXCIpLmNvbmNhdChhcmdzWzBdKTtcbiAgICAgIHJldHVybiB0aGlzLmxvZ2dlcltsdmxdKGFyZ3MpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjcmVhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKG1vZHVsZU5hbWUpIHtcbiAgICAgIHJldHVybiBuZXcgTG9nZ2VyKHRoaXMubG9nZ2VyLCBfb2JqZWN0U3ByZWFkKHt9LCB7XG4gICAgICAgIHByZWZpeDogXCJcIi5jb25jYXQodGhpcy5wcmVmaXgsIFwiOlwiKS5jb25jYXQobW9kdWxlTmFtZSwgXCI6XCIpXG4gICAgICB9LCB0aGlzLm9wdGlvbnMpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTG9nZ2VyO1xufSgpO1xuXG52YXIgYmFzZUxvZ2dlciA9IG5ldyBMb2dnZXIoKTtcblxudmFyIEV2ZW50RW1pdHRlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBFdmVudEVtaXR0ZXIpO1xuXG4gICAgdGhpcy5vYnNlcnZlcnMgPSB7fTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhFdmVudEVtaXR0ZXIsIFt7XG4gICAga2V5OiBcIm9uXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9uKGV2ZW50cywgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIGV2ZW50cy5zcGxpdCgnICcpLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIF90aGlzLm9ic2VydmVyc1tldmVudF0gPSBfdGhpcy5vYnNlcnZlcnNbZXZlbnRdIHx8IFtdO1xuXG4gICAgICAgIF90aGlzLm9ic2VydmVyc1tldmVudF0ucHVzaChsaXN0ZW5lcik7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJvZmZcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb2ZmKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgICAgaWYgKCF0aGlzLm9ic2VydmVyc1tldmVudF0pIHJldHVybjtcblxuICAgICAgaWYgKCFsaXN0ZW5lcikge1xuICAgICAgICBkZWxldGUgdGhpcy5vYnNlcnZlcnNbZXZlbnRdO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMub2JzZXJ2ZXJzW2V2ZW50XSA9IHRoaXMub2JzZXJ2ZXJzW2V2ZW50XS5maWx0ZXIoZnVuY3Rpb24gKGwpIHtcbiAgICAgICAgcmV0dXJuIGwgIT09IGxpc3RlbmVyO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImVtaXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZW1pdChldmVudCkge1xuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMub2JzZXJ2ZXJzW2V2ZW50XSkge1xuICAgICAgICB2YXIgY2xvbmVkID0gW10uY29uY2F0KHRoaXMub2JzZXJ2ZXJzW2V2ZW50XSk7XG4gICAgICAgIGNsb25lZC5mb3JFYWNoKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgICAgIG9ic2VydmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5vYnNlcnZlcnNbJyonXSkge1xuICAgICAgICB2YXIgX2Nsb25lZCA9IFtdLmNvbmNhdCh0aGlzLm9ic2VydmVyc1snKiddKTtcblxuICAgICAgICBfY2xvbmVkLmZvckVhY2goZnVuY3Rpb24gKG9ic2VydmVyKSB7XG4gICAgICAgICAgb2JzZXJ2ZXIuYXBwbHkob2JzZXJ2ZXIsIFtldmVudF0uY29uY2F0KGFyZ3MpKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEV2ZW50RW1pdHRlcjtcbn0oKTtcblxuZnVuY3Rpb24gZGVmZXIoKSB7XG4gIHZhciByZXM7XG4gIHZhciByZWo7XG4gIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgIHJlcyA9IHJlc29sdmU7XG4gICAgcmVqID0gcmVqZWN0O1xuICB9KTtcbiAgcHJvbWlzZS5yZXNvbHZlID0gcmVzO1xuICBwcm9taXNlLnJlamVjdCA9IHJlajtcbiAgcmV0dXJuIHByb21pc2U7XG59XG5mdW5jdGlvbiBtYWtlU3RyaW5nKG9iamVjdCkge1xuICBpZiAob2JqZWN0ID09IG51bGwpIHJldHVybiAnJztcbiAgcmV0dXJuICcnICsgb2JqZWN0O1xufVxuZnVuY3Rpb24gY29weShhLCBzLCB0KSB7XG4gIGEuZm9yRWFjaChmdW5jdGlvbiAobSkge1xuICAgIGlmIChzW21dKSB0W21dID0gc1ttXTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldExhc3RPZlBhdGgob2JqZWN0LCBwYXRoLCBFbXB0eSkge1xuICBmdW5jdGlvbiBjbGVhbktleShrZXkpIHtcbiAgICByZXR1cm4ga2V5ICYmIGtleS5pbmRleE9mKCcjIyMnKSA+IC0xID8ga2V5LnJlcGxhY2UoLyMjIy9nLCAnLicpIDoga2V5O1xuICB9XG5cbiAgZnVuY3Rpb24gY2FuTm90VHJhdmVyc2VEZWVwZXIoKSB7XG4gICAgcmV0dXJuICFvYmplY3QgfHwgdHlwZW9mIG9iamVjdCA9PT0gJ3N0cmluZyc7XG4gIH1cblxuICB2YXIgc3RhY2sgPSB0eXBlb2YgcGF0aCAhPT0gJ3N0cmluZycgPyBbXS5jb25jYXQocGF0aCkgOiBwYXRoLnNwbGl0KCcuJyk7XG5cbiAgd2hpbGUgKHN0YWNrLmxlbmd0aCA+IDEpIHtcbiAgICBpZiAoY2FuTm90VHJhdmVyc2VEZWVwZXIoKSkgcmV0dXJuIHt9O1xuICAgIHZhciBrZXkgPSBjbGVhbktleShzdGFjay5zaGlmdCgpKTtcbiAgICBpZiAoIW9iamVjdFtrZXldICYmIEVtcHR5KSBvYmplY3Rba2V5XSA9IG5ldyBFbXB0eSgpO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkpIHtcbiAgICAgIG9iamVjdCA9IG9iamVjdFtrZXldO1xuICAgIH0gZWxzZSB7XG4gICAgICBvYmplY3QgPSB7fTtcbiAgICB9XG4gIH1cblxuICBpZiAoY2FuTm90VHJhdmVyc2VEZWVwZXIoKSkgcmV0dXJuIHt9O1xuICByZXR1cm4ge1xuICAgIG9iajogb2JqZWN0LFxuICAgIGs6IGNsZWFuS2V5KHN0YWNrLnNoaWZ0KCkpXG4gIH07XG59XG5cbmZ1bmN0aW9uIHNldFBhdGgob2JqZWN0LCBwYXRoLCBuZXdWYWx1ZSkge1xuICB2YXIgX2dldExhc3RPZlBhdGggPSBnZXRMYXN0T2ZQYXRoKG9iamVjdCwgcGF0aCwgT2JqZWN0KSxcbiAgICAgIG9iaiA9IF9nZXRMYXN0T2ZQYXRoLm9iaixcbiAgICAgIGsgPSBfZ2V0TGFzdE9mUGF0aC5rO1xuXG4gIG9ialtrXSA9IG5ld1ZhbHVlO1xufVxuZnVuY3Rpb24gcHVzaFBhdGgob2JqZWN0LCBwYXRoLCBuZXdWYWx1ZSwgY29uY2F0KSB7XG4gIHZhciBfZ2V0TGFzdE9mUGF0aDIgPSBnZXRMYXN0T2ZQYXRoKG9iamVjdCwgcGF0aCwgT2JqZWN0KSxcbiAgICAgIG9iaiA9IF9nZXRMYXN0T2ZQYXRoMi5vYmosXG4gICAgICBrID0gX2dldExhc3RPZlBhdGgyLms7XG5cbiAgb2JqW2tdID0gb2JqW2tdIHx8IFtdO1xuICBpZiAoY29uY2F0KSBvYmpba10gPSBvYmpba10uY29uY2F0KG5ld1ZhbHVlKTtcbiAgaWYgKCFjb25jYXQpIG9ialtrXS5wdXNoKG5ld1ZhbHVlKTtcbn1cbmZ1bmN0aW9uIGdldFBhdGgob2JqZWN0LCBwYXRoKSB7XG4gIHZhciBfZ2V0TGFzdE9mUGF0aDMgPSBnZXRMYXN0T2ZQYXRoKG9iamVjdCwgcGF0aCksXG4gICAgICBvYmogPSBfZ2V0TGFzdE9mUGF0aDMub2JqLFxuICAgICAgayA9IF9nZXRMYXN0T2ZQYXRoMy5rO1xuXG4gIGlmICghb2JqKSByZXR1cm4gdW5kZWZpbmVkO1xuICByZXR1cm4gb2JqW2tdO1xufVxuZnVuY3Rpb24gZ2V0UGF0aFdpdGhEZWZhdWx0cyhkYXRhLCBkZWZhdWx0RGF0YSwga2V5KSB7XG4gIHZhciB2YWx1ZSA9IGdldFBhdGgoZGF0YSwga2V5KTtcblxuICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBnZXRQYXRoKGRlZmF1bHREYXRhLCBrZXkpO1xufVxuZnVuY3Rpb24gZGVlcEV4dGVuZCh0YXJnZXQsIHNvdXJjZSwgb3ZlcndyaXRlKSB7XG4gIGZvciAodmFyIHByb3AgaW4gc291cmNlKSB7XG4gICAgaWYgKHByb3AgIT09ICdfX3Byb3RvX18nICYmIHByb3AgIT09ICdjb25zdHJ1Y3RvcicpIHtcbiAgICAgIGlmIChwcm9wIGluIHRhcmdldCkge1xuICAgICAgICBpZiAodHlwZW9mIHRhcmdldFtwcm9wXSA9PT0gJ3N0cmluZycgfHwgdGFyZ2V0W3Byb3BdIGluc3RhbmNlb2YgU3RyaW5nIHx8IHR5cGVvZiBzb3VyY2VbcHJvcF0gPT09ICdzdHJpbmcnIHx8IHNvdXJjZVtwcm9wXSBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgICAgICAgIGlmIChvdmVyd3JpdGUpIHRhcmdldFtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWVwRXh0ZW5kKHRhcmdldFtwcm9wXSwgc291cmNlW3Byb3BdLCBvdmVyd3JpdGUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0YXJnZXRbcHJvcF0gPSBzb3VyY2VbcHJvcF07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cbmZ1bmN0aW9uIHJlZ2V4RXNjYXBlKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL1tcXC1cXFtcXF1cXC9cXHtcXH1cXChcXClcXCpcXCtcXD9cXC5cXFxcXFxeXFwkXFx8XS9nLCAnXFxcXCQmJyk7XG59XG52YXIgX2VudGl0eU1hcCA9IHtcbiAgJyYnOiAnJmFtcDsnLFxuICAnPCc6ICcmbHQ7JyxcbiAgJz4nOiAnJmd0OycsXG4gICdcIic6ICcmcXVvdDsnLFxuICBcIidcIjogJyYjMzk7JyxcbiAgJy8nOiAnJiN4MkY7J1xufTtcbmZ1bmN0aW9uIGVzY2FwZShkYXRhKSB7XG4gIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZGF0YS5yZXBsYWNlKC9bJjw+XCInXFwvXS9nLCBmdW5jdGlvbiAocykge1xuICAgICAgcmV0dXJuIF9lbnRpdHlNYXBbc107XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cbnZhciBpc0lFMTAgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cubmF2aWdhdG9yICYmIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50ICYmIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ01TSUUnKSA+IC0xO1xuXG52YXIgUmVzb3VyY2VTdG9yZSA9IGZ1bmN0aW9uIChfRXZlbnRFbWl0dGVyKSB7XG4gIF9pbmhlcml0cyhSZXNvdXJjZVN0b3JlLCBfRXZlbnRFbWl0dGVyKTtcblxuICBmdW5jdGlvbiBSZXNvdXJjZVN0b3JlKGRhdGEpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge1xuICAgICAgbnM6IFsndHJhbnNsYXRpb24nXSxcbiAgICAgIGRlZmF1bHROUzogJ3RyYW5zbGF0aW9uJ1xuICAgIH07XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVzb3VyY2VTdG9yZSk7XG5cbiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihSZXNvdXJjZVN0b3JlKS5jYWxsKHRoaXMpKTtcblxuICAgIGlmIChpc0lFMTApIHtcbiAgICAgIEV2ZW50RW1pdHRlci5jYWxsKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICB9XG5cbiAgICBfdGhpcy5kYXRhID0gZGF0YSB8fCB7fTtcbiAgICBfdGhpcy5vcHRpb25zID0gb3B0aW9ucztcblxuICAgIGlmIChfdGhpcy5vcHRpb25zLmtleVNlcGFyYXRvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBfdGhpcy5vcHRpb25zLmtleVNlcGFyYXRvciA9ICcuJztcbiAgICB9XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUmVzb3VyY2VTdG9yZSwgW3tcbiAgICBrZXk6IFwiYWRkTmFtZXNwYWNlc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGROYW1lc3BhY2VzKG5zKSB7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLm5zLmluZGV4T2YobnMpIDwgMCkge1xuICAgICAgICB0aGlzLm9wdGlvbnMubnMucHVzaChucyk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbW92ZU5hbWVzcGFjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlTmFtZXNwYWNlcyhucykge1xuICAgICAgdmFyIGluZGV4ID0gdGhpcy5vcHRpb25zLm5zLmluZGV4T2YobnMpO1xuXG4gICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICB0aGlzLm9wdGlvbnMubnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0UmVzb3VyY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UmVzb3VyY2UobG5nLCBucywga2V5KSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDoge307XG4gICAgICB2YXIga2V5U2VwYXJhdG9yID0gb3B0aW9ucy5rZXlTZXBhcmF0b3IgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMua2V5U2VwYXJhdG9yIDogdGhpcy5vcHRpb25zLmtleVNlcGFyYXRvcjtcbiAgICAgIHZhciBwYXRoID0gW2xuZywgbnNdO1xuICAgICAgaWYgKGtleSAmJiB0eXBlb2Yga2V5ICE9PSAnc3RyaW5nJykgcGF0aCA9IHBhdGguY29uY2F0KGtleSk7XG4gICAgICBpZiAoa2V5ICYmIHR5cGVvZiBrZXkgPT09ICdzdHJpbmcnKSBwYXRoID0gcGF0aC5jb25jYXQoa2V5U2VwYXJhdG9yID8ga2V5LnNwbGl0KGtleVNlcGFyYXRvcikgOiBrZXkpO1xuXG4gICAgICBpZiAobG5nLmluZGV4T2YoJy4nKSA+IC0xKSB7XG4gICAgICAgIHBhdGggPSBsbmcuc3BsaXQoJy4nKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGdldFBhdGgodGhpcy5kYXRhLCBwYXRoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYWRkUmVzb3VyY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkUmVzb3VyY2UobG5nLCBucywga2V5LCB2YWx1ZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IHtcbiAgICAgICAgc2lsZW50OiBmYWxzZVxuICAgICAgfTtcbiAgICAgIHZhciBrZXlTZXBhcmF0b3IgPSB0aGlzLm9wdGlvbnMua2V5U2VwYXJhdG9yO1xuICAgICAgaWYgKGtleVNlcGFyYXRvciA9PT0gdW5kZWZpbmVkKSBrZXlTZXBhcmF0b3IgPSAnLic7XG4gICAgICB2YXIgcGF0aCA9IFtsbmcsIG5zXTtcbiAgICAgIGlmIChrZXkpIHBhdGggPSBwYXRoLmNvbmNhdChrZXlTZXBhcmF0b3IgPyBrZXkuc3BsaXQoa2V5U2VwYXJhdG9yKSA6IGtleSk7XG5cbiAgICAgIGlmIChsbmcuaW5kZXhPZignLicpID4gLTEpIHtcbiAgICAgICAgcGF0aCA9IGxuZy5zcGxpdCgnLicpO1xuICAgICAgICB2YWx1ZSA9IG5zO1xuICAgICAgICBucyA9IHBhdGhbMV07XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYWRkTmFtZXNwYWNlcyhucyk7XG4gICAgICBzZXRQYXRoKHRoaXMuZGF0YSwgcGF0aCwgdmFsdWUpO1xuICAgICAgaWYgKCFvcHRpb25zLnNpbGVudCkgdGhpcy5lbWl0KCdhZGRlZCcsIGxuZywgbnMsIGtleSwgdmFsdWUpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRSZXNvdXJjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkUmVzb3VyY2VzKGxuZywgbnMsIHJlc291cmNlcykge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHtcbiAgICAgICAgc2lsZW50OiBmYWxzZVxuICAgICAgfTtcblxuICAgICAgZm9yICh2YXIgbSBpbiByZXNvdXJjZXMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXNvdXJjZXNbbV0gPT09ICdzdHJpbmcnIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkocmVzb3VyY2VzW21dKSA9PT0gJ1tvYmplY3QgQXJyYXldJykgdGhpcy5hZGRSZXNvdXJjZShsbmcsIG5zLCBtLCByZXNvdXJjZXNbbV0sIHtcbiAgICAgICAgICBzaWxlbnQ6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghb3B0aW9ucy5zaWxlbnQpIHRoaXMuZW1pdCgnYWRkZWQnLCBsbmcsIG5zLCByZXNvdXJjZXMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRSZXNvdXJjZUJ1bmRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRSZXNvdXJjZUJ1bmRsZShsbmcsIG5zLCByZXNvdXJjZXMsIGRlZXAsIG92ZXJ3cml0ZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gNSAmJiBhcmd1bWVudHNbNV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s1XSA6IHtcbiAgICAgICAgc2lsZW50OiBmYWxzZVxuICAgICAgfTtcbiAgICAgIHZhciBwYXRoID0gW2xuZywgbnNdO1xuXG4gICAgICBpZiAobG5nLmluZGV4T2YoJy4nKSA+IC0xKSB7XG4gICAgICAgIHBhdGggPSBsbmcuc3BsaXQoJy4nKTtcbiAgICAgICAgZGVlcCA9IHJlc291cmNlcztcbiAgICAgICAgcmVzb3VyY2VzID0gbnM7XG4gICAgICAgIG5zID0gcGF0aFsxXTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5hZGROYW1lc3BhY2VzKG5zKTtcbiAgICAgIHZhciBwYWNrID0gZ2V0UGF0aCh0aGlzLmRhdGEsIHBhdGgpIHx8IHt9O1xuXG4gICAgICBpZiAoZGVlcCkge1xuICAgICAgICBkZWVwRXh0ZW5kKHBhY2ssIHJlc291cmNlcywgb3ZlcndyaXRlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhY2sgPSBfb2JqZWN0U3ByZWFkKHt9LCBwYWNrLCByZXNvdXJjZXMpO1xuICAgICAgfVxuXG4gICAgICBzZXRQYXRoKHRoaXMuZGF0YSwgcGF0aCwgcGFjayk7XG4gICAgICBpZiAoIW9wdGlvbnMuc2lsZW50KSB0aGlzLmVtaXQoJ2FkZGVkJywgbG5nLCBucywgcmVzb3VyY2VzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVtb3ZlUmVzb3VyY2VCdW5kbGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlUmVzb3VyY2VCdW5kbGUobG5nLCBucykge1xuICAgICAgaWYgKHRoaXMuaGFzUmVzb3VyY2VCdW5kbGUobG5nLCBucykpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMuZGF0YVtsbmddW25zXTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5yZW1vdmVOYW1lc3BhY2VzKG5zKTtcbiAgICAgIHRoaXMuZW1pdCgncmVtb3ZlZCcsIGxuZywgbnMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYXNSZXNvdXJjZUJ1bmRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYXNSZXNvdXJjZUJ1bmRsZShsbmcsIG5zKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRSZXNvdXJjZShsbmcsIG5zKSAhPT0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRSZXNvdXJjZUJ1bmRsZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSZXNvdXJjZUJ1bmRsZShsbmcsIG5zKSB7XG4gICAgICBpZiAoIW5zKSBucyA9IHRoaXMub3B0aW9ucy5kZWZhdWx0TlM7XG4gICAgICBpZiAodGhpcy5vcHRpb25zLmNvbXBhdGliaWxpdHlBUEkgPT09ICd2MScpIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCB7fSwgdGhpcy5nZXRSZXNvdXJjZShsbmcsIG5zKSk7XG4gICAgICByZXR1cm4gdGhpcy5nZXRSZXNvdXJjZShsbmcsIG5zKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0RGF0YUJ5TGFuZ3VhZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RGF0YUJ5TGFuZ3VhZ2UobG5nKSB7XG4gICAgICByZXR1cm4gdGhpcy5kYXRhW2xuZ107XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInRvSlNPTlwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgICByZXR1cm4gdGhpcy5kYXRhO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBSZXNvdXJjZVN0b3JlO1xufShFdmVudEVtaXR0ZXIpO1xuXG52YXIgcG9zdFByb2Nlc3NvciA9IHtcbiAgcHJvY2Vzc29yczoge30sXG4gIGFkZFBvc3RQcm9jZXNzb3I6IGZ1bmN0aW9uIGFkZFBvc3RQcm9jZXNzb3IobW9kdWxlKSB7XG4gICAgdGhpcy5wcm9jZXNzb3JzW21vZHVsZS5uYW1lXSA9IG1vZHVsZTtcbiAgfSxcbiAgaGFuZGxlOiBmdW5jdGlvbiBoYW5kbGUocHJvY2Vzc29ycywgdmFsdWUsIGtleSwgb3B0aW9ucywgdHJhbnNsYXRvcikge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBwcm9jZXNzb3JzLmZvckVhY2goZnVuY3Rpb24gKHByb2Nlc3Nvcikge1xuICAgICAgaWYgKF90aGlzLnByb2Nlc3NvcnNbcHJvY2Vzc29yXSkgdmFsdWUgPSBfdGhpcy5wcm9jZXNzb3JzW3Byb2Nlc3Nvcl0ucHJvY2Vzcyh2YWx1ZSwga2V5LCBvcHRpb25zLCB0cmFuc2xhdG9yKTtcbiAgICB9KTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbn07XG5cbnZhciBjaGVja2VkTG9hZGVkRm9yID0ge307XG5cbnZhciBUcmFuc2xhdG9yID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKFRyYW5zbGF0b3IsIF9FdmVudEVtaXR0ZXIpO1xuXG4gIGZ1bmN0aW9uIFRyYW5zbGF0b3Ioc2VydmljZXMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVHJhbnNsYXRvcik7XG5cbiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihUcmFuc2xhdG9yKS5jYWxsKHRoaXMpKTtcblxuICAgIGlmIChpc0lFMTApIHtcbiAgICAgIEV2ZW50RW1pdHRlci5jYWxsKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICB9XG5cbiAgICBjb3B5KFsncmVzb3VyY2VTdG9yZScsICdsYW5ndWFnZVV0aWxzJywgJ3BsdXJhbFJlc29sdmVyJywgJ2ludGVycG9sYXRvcicsICdiYWNrZW5kQ29ubmVjdG9yJywgJ2kxOG5Gb3JtYXQnLCAndXRpbHMnXSwgc2VydmljZXMsIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5vcHRpb25zID0gb3B0aW9ucztcblxuICAgIGlmIChfdGhpcy5vcHRpb25zLmtleVNlcGFyYXRvciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBfdGhpcy5vcHRpb25zLmtleVNlcGFyYXRvciA9ICcuJztcbiAgICB9XG5cbiAgICBfdGhpcy5sb2dnZXIgPSBiYXNlTG9nZ2VyLmNyZWF0ZSgndHJhbnNsYXRvcicpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhUcmFuc2xhdG9yLCBbe1xuICAgIGtleTogXCJjaGFuZ2VMYW5ndWFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjaGFuZ2VMYW5ndWFnZShsbmcpIHtcbiAgICAgIGlmIChsbmcpIHRoaXMubGFuZ3VhZ2UgPSBsbmc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImV4aXN0c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBleGlzdHMoa2V5KSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7fVxuICAgICAgfTtcbiAgICAgIHZhciByZXNvbHZlZCA9IHRoaXMucmVzb2x2ZShrZXksIG9wdGlvbnMpO1xuICAgICAgcmV0dXJuIHJlc29sdmVkICYmIHJlc29sdmVkLnJlcyAhPT0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJleHRyYWN0RnJvbUtleVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBleHRyYWN0RnJvbUtleShrZXksIG9wdGlvbnMpIHtcbiAgICAgIHZhciBuc1NlcGFyYXRvciA9IG9wdGlvbnMubnNTZXBhcmF0b3IgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubnNTZXBhcmF0b3IgOiB0aGlzLm9wdGlvbnMubnNTZXBhcmF0b3I7XG4gICAgICBpZiAobnNTZXBhcmF0b3IgPT09IHVuZGVmaW5lZCkgbnNTZXBhcmF0b3IgPSAnOic7XG4gICAgICB2YXIga2V5U2VwYXJhdG9yID0gb3B0aW9ucy5rZXlTZXBhcmF0b3IgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMua2V5U2VwYXJhdG9yIDogdGhpcy5vcHRpb25zLmtleVNlcGFyYXRvcjtcbiAgICAgIHZhciBuYW1lc3BhY2VzID0gb3B0aW9ucy5ucyB8fCB0aGlzLm9wdGlvbnMuZGVmYXVsdE5TO1xuXG4gICAgICBpZiAobnNTZXBhcmF0b3IgJiYga2V5LmluZGV4T2YobnNTZXBhcmF0b3IpID4gLTEpIHtcbiAgICAgICAgdmFyIG0gPSBrZXkubWF0Y2godGhpcy5pbnRlcnBvbGF0b3IubmVzdGluZ1JlZ2V4cCk7XG5cbiAgICAgICAgaWYgKG0gJiYgbS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgICAgbmFtZXNwYWNlczogbmFtZXNwYWNlc1xuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcGFydHMgPSBrZXkuc3BsaXQobnNTZXBhcmF0b3IpO1xuICAgICAgICBpZiAobnNTZXBhcmF0b3IgIT09IGtleVNlcGFyYXRvciB8fCBuc1NlcGFyYXRvciA9PT0ga2V5U2VwYXJhdG9yICYmIHRoaXMub3B0aW9ucy5ucy5pbmRleE9mKHBhcnRzWzBdKSA+IC0xKSBuYW1lc3BhY2VzID0gcGFydHMuc2hpZnQoKTtcbiAgICAgICAga2V5ID0gcGFydHMuam9pbihrZXlTZXBhcmF0b3IpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIG5hbWVzcGFjZXMgPT09ICdzdHJpbmcnKSBuYW1lc3BhY2VzID0gW25hbWVzcGFjZXNdO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAga2V5OiBrZXksXG4gICAgICAgIG5hbWVzcGFjZXM6IG5hbWVzcGFjZXNcbiAgICAgIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInRyYW5zbGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0cmFuc2xhdGUoa2V5cywgb3B0aW9ucywgbGFzdEtleSkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIGlmIChfdHlwZW9mKG9wdGlvbnMpICE9PSAnb2JqZWN0JyAmJiB0aGlzLm9wdGlvbnMub3ZlcmxvYWRUcmFuc2xhdGlvbk9wdGlvbkhhbmRsZXIpIHtcbiAgICAgICAgb3B0aW9ucyA9IHRoaXMub3B0aW9ucy5vdmVybG9hZFRyYW5zbGF0aW9uT3B0aW9uSGFuZGxlcihhcmd1bWVudHMpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIW9wdGlvbnMpIG9wdGlvbnMgPSB7fTtcbiAgICAgIGlmIChrZXlzID09PSB1bmRlZmluZWQgfHwga2V5cyA9PT0gbnVsbCkgcmV0dXJuICcnO1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGtleXMpKSBrZXlzID0gW1N0cmluZyhrZXlzKV07XG4gICAgICB2YXIga2V5U2VwYXJhdG9yID0gb3B0aW9ucy5rZXlTZXBhcmF0b3IgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMua2V5U2VwYXJhdG9yIDogdGhpcy5vcHRpb25zLmtleVNlcGFyYXRvcjtcblxuICAgICAgdmFyIF90aGlzJGV4dHJhY3RGcm9tS2V5ID0gdGhpcy5leHRyYWN0RnJvbUtleShrZXlzW2tleXMubGVuZ3RoIC0gMV0sIG9wdGlvbnMpLFxuICAgICAgICAgIGtleSA9IF90aGlzJGV4dHJhY3RGcm9tS2V5LmtleSxcbiAgICAgICAgICBuYW1lc3BhY2VzID0gX3RoaXMkZXh0cmFjdEZyb21LZXkubmFtZXNwYWNlcztcblxuICAgICAgdmFyIG5hbWVzcGFjZSA9IG5hbWVzcGFjZXNbbmFtZXNwYWNlcy5sZW5ndGggLSAxXTtcbiAgICAgIHZhciBsbmcgPSBvcHRpb25zLmxuZyB8fCB0aGlzLmxhbmd1YWdlO1xuICAgICAgdmFyIGFwcGVuZE5hbWVzcGFjZVRvQ0lNb2RlID0gb3B0aW9ucy5hcHBlbmROYW1lc3BhY2VUb0NJTW9kZSB8fCB0aGlzLm9wdGlvbnMuYXBwZW5kTmFtZXNwYWNlVG9DSU1vZGU7XG5cbiAgICAgIGlmIChsbmcgJiYgbG5nLnRvTG93ZXJDYXNlKCkgPT09ICdjaW1vZGUnKSB7XG4gICAgICAgIGlmIChhcHBlbmROYW1lc3BhY2VUb0NJTW9kZSkge1xuICAgICAgICAgIHZhciBuc1NlcGFyYXRvciA9IG9wdGlvbnMubnNTZXBhcmF0b3IgfHwgdGhpcy5vcHRpb25zLm5zU2VwYXJhdG9yO1xuICAgICAgICAgIHJldHVybiBuYW1lc3BhY2UgKyBuc1NlcGFyYXRvciArIGtleTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBrZXk7XG4gICAgICB9XG5cbiAgICAgIHZhciByZXNvbHZlZCA9IHRoaXMucmVzb2x2ZShrZXlzLCBvcHRpb25zKTtcbiAgICAgIHZhciByZXMgPSByZXNvbHZlZCAmJiByZXNvbHZlZC5yZXM7XG4gICAgICB2YXIgcmVzVXNlZEtleSA9IHJlc29sdmVkICYmIHJlc29sdmVkLnVzZWRLZXkgfHwga2V5O1xuICAgICAgdmFyIHJlc0V4YWN0VXNlZEtleSA9IHJlc29sdmVkICYmIHJlc29sdmVkLmV4YWN0VXNlZEtleSB8fCBrZXk7XG4gICAgICB2YXIgcmVzVHlwZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkocmVzKTtcbiAgICAgIHZhciBub09iamVjdCA9IFsnW29iamVjdCBOdW1iZXJdJywgJ1tvYmplY3QgRnVuY3Rpb25dJywgJ1tvYmplY3QgUmVnRXhwXSddO1xuICAgICAgdmFyIGpvaW5BcnJheXMgPSBvcHRpb25zLmpvaW5BcnJheXMgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMuam9pbkFycmF5cyA6IHRoaXMub3B0aW9ucy5qb2luQXJyYXlzO1xuICAgICAgdmFyIGhhbmRsZUFzT2JqZWN0SW5JMThuRm9ybWF0ID0gIXRoaXMuaTE4bkZvcm1hdCB8fCB0aGlzLmkxOG5Gb3JtYXQuaGFuZGxlQXNPYmplY3Q7XG4gICAgICB2YXIgaGFuZGxlQXNPYmplY3QgPSB0eXBlb2YgcmVzICE9PSAnc3RyaW5nJyAmJiB0eXBlb2YgcmVzICE9PSAnYm9vbGVhbicgJiYgdHlwZW9mIHJlcyAhPT0gJ251bWJlcic7XG5cbiAgICAgIGlmIChoYW5kbGVBc09iamVjdEluSTE4bkZvcm1hdCAmJiByZXMgJiYgaGFuZGxlQXNPYmplY3QgJiYgbm9PYmplY3QuaW5kZXhPZihyZXNUeXBlKSA8IDAgJiYgISh0eXBlb2Ygam9pbkFycmF5cyA9PT0gJ3N0cmluZycgJiYgcmVzVHlwZSA9PT0gJ1tvYmplY3QgQXJyYXldJykpIHtcbiAgICAgICAgaWYgKCFvcHRpb25zLnJldHVybk9iamVjdHMgJiYgIXRoaXMub3B0aW9ucy5yZXR1cm5PYmplY3RzKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIud2FybignYWNjZXNzaW5nIGFuIG9iamVjdCAtIGJ1dCByZXR1cm5PYmplY3RzIG9wdGlvbnMgaXMgbm90IGVuYWJsZWQhJyk7XG4gICAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5yZXR1cm5lZE9iamVjdEhhbmRsZXIgPyB0aGlzLm9wdGlvbnMucmV0dXJuZWRPYmplY3RIYW5kbGVyKHJlc1VzZWRLZXksIHJlcywgb3B0aW9ucykgOiBcImtleSAnXCIuY29uY2F0KGtleSwgXCIgKFwiKS5jb25jYXQodGhpcy5sYW5ndWFnZSwgXCIpJyByZXR1cm5lZCBhbiBvYmplY3QgaW5zdGVhZCBvZiBzdHJpbmcuXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGtleVNlcGFyYXRvcikge1xuICAgICAgICAgIHZhciByZXNUeXBlSXNBcnJheSA9IHJlc1R5cGUgPT09ICdbb2JqZWN0IEFycmF5XSc7XG4gICAgICAgICAgdmFyIGNvcHkgPSByZXNUeXBlSXNBcnJheSA/IFtdIDoge307XG4gICAgICAgICAgdmFyIG5ld0tleVRvVXNlID0gcmVzVHlwZUlzQXJyYXkgPyByZXNFeGFjdFVzZWRLZXkgOiByZXNVc2VkS2V5O1xuXG4gICAgICAgICAgZm9yICh2YXIgbSBpbiByZXMpIHtcbiAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocmVzLCBtKSkge1xuICAgICAgICAgICAgICB2YXIgZGVlcEtleSA9IFwiXCIuY29uY2F0KG5ld0tleVRvVXNlKS5jb25jYXQoa2V5U2VwYXJhdG9yKS5jb25jYXQobSk7XG4gICAgICAgICAgICAgIGNvcHlbbV0gPSB0aGlzLnRyYW5zbGF0ZShkZWVwS2V5LCBfb2JqZWN0U3ByZWFkKHt9LCBvcHRpb25zLCB7XG4gICAgICAgICAgICAgICAgam9pbkFycmF5czogZmFsc2UsXG4gICAgICAgICAgICAgICAgbnM6IG5hbWVzcGFjZXNcbiAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICBpZiAoY29weVttXSA9PT0gZGVlcEtleSkgY29weVttXSA9IHJlc1ttXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXMgPSBjb3B5O1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGhhbmRsZUFzT2JqZWN0SW5JMThuRm9ybWF0ICYmIHR5cGVvZiBqb2luQXJyYXlzID09PSAnc3RyaW5nJyAmJiByZXNUeXBlID09PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICAgIHJlcyA9IHJlcy5qb2luKGpvaW5BcnJheXMpO1xuICAgICAgICBpZiAocmVzKSByZXMgPSB0aGlzLmV4dGVuZFRyYW5zbGF0aW9uKHJlcywga2V5cywgb3B0aW9ucywgbGFzdEtleSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgdXNlZERlZmF1bHQgPSBmYWxzZTtcbiAgICAgICAgdmFyIHVzZWRLZXkgPSBmYWxzZTtcbiAgICAgICAgdmFyIG5lZWRzUGx1cmFsSGFuZGxpbmcgPSBvcHRpb25zLmNvdW50ICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIG9wdGlvbnMuY291bnQgIT09ICdzdHJpbmcnO1xuICAgICAgICB2YXIgaGFzRGVmYXVsdFZhbHVlID0gVHJhbnNsYXRvci5oYXNEZWZhdWx0VmFsdWUob3B0aW9ucyk7XG4gICAgICAgIHZhciBkZWZhdWx0VmFsdWVTdWZmaXggPSBuZWVkc1BsdXJhbEhhbmRsaW5nID8gdGhpcy5wbHVyYWxSZXNvbHZlci5nZXRTdWZmaXgobG5nLCBvcHRpb25zLmNvdW50KSA6ICcnO1xuICAgICAgICB2YXIgZGVmYXVsdFZhbHVlID0gb3B0aW9uc1tcImRlZmF1bHRWYWx1ZVwiLmNvbmNhdChkZWZhdWx0VmFsdWVTdWZmaXgpXSB8fCBvcHRpb25zLmRlZmF1bHRWYWx1ZTtcblxuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZExvb2t1cChyZXMpICYmIGhhc0RlZmF1bHRWYWx1ZSkge1xuICAgICAgICAgIHVzZWREZWZhdWx0ID0gdHJ1ZTtcbiAgICAgICAgICByZXMgPSBkZWZhdWx0VmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZExvb2t1cChyZXMpKSB7XG4gICAgICAgICAgdXNlZEtleSA9IHRydWU7XG4gICAgICAgICAgcmVzID0ga2V5O1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHVwZGF0ZU1pc3NpbmcgPSBoYXNEZWZhdWx0VmFsdWUgJiYgZGVmYXVsdFZhbHVlICE9PSByZXMgJiYgdGhpcy5vcHRpb25zLnVwZGF0ZU1pc3Npbmc7XG5cbiAgICAgICAgaWYgKHVzZWRLZXkgfHwgdXNlZERlZmF1bHQgfHwgdXBkYXRlTWlzc2luZykge1xuICAgICAgICAgIHRoaXMubG9nZ2VyLmxvZyh1cGRhdGVNaXNzaW5nID8gJ3VwZGF0ZUtleScgOiAnbWlzc2luZ0tleScsIGxuZywgbmFtZXNwYWNlLCBrZXksIHVwZGF0ZU1pc3NpbmcgPyBkZWZhdWx0VmFsdWUgOiByZXMpO1xuXG4gICAgICAgICAgaWYgKGtleVNlcGFyYXRvcikge1xuICAgICAgICAgICAgdmFyIGZrID0gdGhpcy5yZXNvbHZlKGtleSwgX29iamVjdFNwcmVhZCh7fSwgb3B0aW9ucywge1xuICAgICAgICAgICAgICBrZXlTZXBhcmF0b3I6IGZhbHNlXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBpZiAoZmsgJiYgZmsucmVzKSB0aGlzLmxvZ2dlci53YXJuKCdTZWVtcyB0aGUgbG9hZGVkIHRyYW5zbGF0aW9ucyB3ZXJlIGluIGZsYXQgSlNPTiBmb3JtYXQgaW5zdGVhZCBvZiBuZXN0ZWQuIEVpdGhlciBzZXQga2V5U2VwYXJhdG9yOiBmYWxzZSBvbiBpbml0IG9yIG1ha2Ugc3VyZSB5b3VyIHRyYW5zbGF0aW9ucyBhcmUgcHVibGlzaGVkIGluIG5lc3RlZCBmb3JtYXQuJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgdmFyIGxuZ3MgPSBbXTtcbiAgICAgICAgICB2YXIgZmFsbGJhY2tMbmdzID0gdGhpcy5sYW5ndWFnZVV0aWxzLmdldEZhbGxiYWNrQ29kZXModGhpcy5vcHRpb25zLmZhbGxiYWNrTG5nLCBvcHRpb25zLmxuZyB8fCB0aGlzLmxhbmd1YWdlKTtcblxuICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2F2ZU1pc3NpbmdUbyA9PT0gJ2ZhbGxiYWNrJyAmJiBmYWxsYmFja0xuZ3MgJiYgZmFsbGJhY2tMbmdzWzBdKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGZhbGxiYWNrTG5ncy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICBsbmdzLnB1c2goZmFsbGJhY2tMbmdzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy5zYXZlTWlzc2luZ1RvID09PSAnYWxsJykge1xuICAgICAgICAgICAgbG5ncyA9IHRoaXMubGFuZ3VhZ2VVdGlscy50b1Jlc29sdmVIaWVyYXJjaHkob3B0aW9ucy5sbmcgfHwgdGhpcy5sYW5ndWFnZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxuZ3MucHVzaChvcHRpb25zLmxuZyB8fCB0aGlzLmxhbmd1YWdlKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICB2YXIgc2VuZCA9IGZ1bmN0aW9uIHNlbmQobCwgaywgZmFsbGJhY2tWYWx1ZSkge1xuICAgICAgICAgICAgaWYgKF90aGlzMi5vcHRpb25zLm1pc3NpbmdLZXlIYW5kbGVyKSB7XG4gICAgICAgICAgICAgIF90aGlzMi5vcHRpb25zLm1pc3NpbmdLZXlIYW5kbGVyKGwsIG5hbWVzcGFjZSwgaywgdXBkYXRlTWlzc2luZyA/IGZhbGxiYWNrVmFsdWUgOiByZXMsIHVwZGF0ZU1pc3NpbmcsIG9wdGlvbnMpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChfdGhpczIuYmFja2VuZENvbm5lY3RvciAmJiBfdGhpczIuYmFja2VuZENvbm5lY3Rvci5zYXZlTWlzc2luZykge1xuICAgICAgICAgICAgICBfdGhpczIuYmFja2VuZENvbm5lY3Rvci5zYXZlTWlzc2luZyhsLCBuYW1lc3BhY2UsIGssIHVwZGF0ZU1pc3NpbmcgPyBmYWxsYmFja1ZhbHVlIDogcmVzLCB1cGRhdGVNaXNzaW5nLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgX3RoaXMyLmVtaXQoJ21pc3NpbmdLZXknLCBsLCBuYW1lc3BhY2UsIGssIHJlcyk7XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2F2ZU1pc3NpbmcpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2F2ZU1pc3NpbmdQbHVyYWxzICYmIG5lZWRzUGx1cmFsSGFuZGxpbmcpIHtcbiAgICAgICAgICAgICAgbG5ncy5mb3JFYWNoKGZ1bmN0aW9uIChsYW5ndWFnZSkge1xuICAgICAgICAgICAgICAgIF90aGlzMi5wbHVyYWxSZXNvbHZlci5nZXRTdWZmaXhlcyhsYW5ndWFnZSkuZm9yRWFjaChmdW5jdGlvbiAoc3VmZml4KSB7XG4gICAgICAgICAgICAgICAgICBzZW5kKFtsYW5ndWFnZV0sIGtleSArIHN1ZmZpeCwgb3B0aW9uc1tcImRlZmF1bHRWYWx1ZVwiLmNvbmNhdChzdWZmaXgpXSB8fCBkZWZhdWx0VmFsdWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHNlbmQobG5ncywga2V5LCBkZWZhdWx0VmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJlcyA9IHRoaXMuZXh0ZW5kVHJhbnNsYXRpb24ocmVzLCBrZXlzLCBvcHRpb25zLCByZXNvbHZlZCwgbGFzdEtleSk7XG4gICAgICAgIGlmICh1c2VkS2V5ICYmIHJlcyA9PT0ga2V5ICYmIHRoaXMub3B0aW9ucy5hcHBlbmROYW1lc3BhY2VUb01pc3NpbmdLZXkpIHJlcyA9IFwiXCIuY29uY2F0KG5hbWVzcGFjZSwgXCI6XCIpLmNvbmNhdChrZXkpO1xuICAgICAgICBpZiAodXNlZEtleSAmJiB0aGlzLm9wdGlvbnMucGFyc2VNaXNzaW5nS2V5SGFuZGxlcikgcmVzID0gdGhpcy5vcHRpb25zLnBhcnNlTWlzc2luZ0tleUhhbmRsZXIocmVzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZXh0ZW5kVHJhbnNsYXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZXh0ZW5kVHJhbnNsYXRpb24ocmVzLCBrZXksIG9wdGlvbnMsIHJlc29sdmVkLCBsYXN0S2V5KSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgaWYgKHRoaXMuaTE4bkZvcm1hdCAmJiB0aGlzLmkxOG5Gb3JtYXQucGFyc2UpIHtcbiAgICAgICAgcmVzID0gdGhpcy5pMThuRm9ybWF0LnBhcnNlKHJlcywgb3B0aW9ucywgcmVzb2x2ZWQudXNlZExuZywgcmVzb2x2ZWQudXNlZE5TLCByZXNvbHZlZC51c2VkS2V5LCB7XG4gICAgICAgICAgcmVzb2x2ZWQ6IHJlc29sdmVkXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmICghb3B0aW9ucy5za2lwSW50ZXJwb2xhdGlvbikge1xuICAgICAgICBpZiAob3B0aW9ucy5pbnRlcnBvbGF0aW9uKSB0aGlzLmludGVycG9sYXRvci5pbml0KF9vYmplY3RTcHJlYWQoe30sIG9wdGlvbnMsIHtcbiAgICAgICAgICBpbnRlcnBvbGF0aW9uOiBfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbiwgb3B0aW9ucy5pbnRlcnBvbGF0aW9uKVxuICAgICAgICB9KSk7XG4gICAgICAgIHZhciBza2lwT25WYXJpYWJsZXMgPSBvcHRpb25zLmludGVycG9sYXRpb24gJiYgb3B0aW9ucy5pbnRlcnBvbGF0aW9uLnNraXBPblZhcmlhYmxlcyB8fCB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbi5za2lwT25WYXJpYWJsZXM7XG4gICAgICAgIHZhciBuZXN0QmVmO1xuXG4gICAgICAgIGlmIChza2lwT25WYXJpYWJsZXMpIHtcbiAgICAgICAgICB2YXIgbmIgPSByZXMubWF0Y2godGhpcy5pbnRlcnBvbGF0b3IubmVzdGluZ1JlZ2V4cCk7XG4gICAgICAgICAgbmVzdEJlZiA9IG5iICYmIG5iLmxlbmd0aDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBkYXRhID0gb3B0aW9ucy5yZXBsYWNlICYmIHR5cGVvZiBvcHRpb25zLnJlcGxhY2UgIT09ICdzdHJpbmcnID8gb3B0aW9ucy5yZXBsYWNlIDogb3B0aW9ucztcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5pbnRlcnBvbGF0aW9uLmRlZmF1bHRWYXJpYWJsZXMpIGRhdGEgPSBfb2JqZWN0U3ByZWFkKHt9LCB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbi5kZWZhdWx0VmFyaWFibGVzLCBkYXRhKTtcbiAgICAgICAgcmVzID0gdGhpcy5pbnRlcnBvbGF0b3IuaW50ZXJwb2xhdGUocmVzLCBkYXRhLCBvcHRpb25zLmxuZyB8fCB0aGlzLmxhbmd1YWdlLCBvcHRpb25zKTtcblxuICAgICAgICBpZiAoc2tpcE9uVmFyaWFibGVzKSB7XG4gICAgICAgICAgdmFyIG5hID0gcmVzLm1hdGNoKHRoaXMuaW50ZXJwb2xhdG9yLm5lc3RpbmdSZWdleHApO1xuICAgICAgICAgIHZhciBuZXN0QWZ0ID0gbmEgJiYgbmEubGVuZ3RoO1xuICAgICAgICAgIGlmIChuZXN0QmVmIDwgbmVzdEFmdCkgb3B0aW9ucy5uZXN0ID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3B0aW9ucy5uZXN0ICE9PSBmYWxzZSkgcmVzID0gdGhpcy5pbnRlcnBvbGF0b3IubmVzdChyZXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGxhc3RLZXkgJiYgbGFzdEtleVswXSA9PT0gYXJnc1swXSAmJiAhb3B0aW9ucy5jb250ZXh0KSB7XG4gICAgICAgICAgICBfdGhpczMubG9nZ2VyLndhcm4oXCJJdCBzZWVtcyB5b3UgYXJlIG5lc3RpbmcgcmVjdXJzaXZlbHkga2V5OiBcIi5jb25jYXQoYXJnc1swXSwgXCIgaW4ga2V5OiBcIikuY29uY2F0KGtleVswXSkpO1xuXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gX3RoaXMzLnRyYW5zbGF0ZS5hcHBseShfdGhpczMsIGFyZ3MuY29uY2F0KFtrZXldKSk7XG4gICAgICAgIH0sIG9wdGlvbnMpO1xuICAgICAgICBpZiAob3B0aW9ucy5pbnRlcnBvbGF0aW9uKSB0aGlzLmludGVycG9sYXRvci5yZXNldCgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgcG9zdFByb2Nlc3MgPSBvcHRpb25zLnBvc3RQcm9jZXNzIHx8IHRoaXMub3B0aW9ucy5wb3N0UHJvY2VzcztcbiAgICAgIHZhciBwb3N0UHJvY2Vzc29yTmFtZXMgPSB0eXBlb2YgcG9zdFByb2Nlc3MgPT09ICdzdHJpbmcnID8gW3Bvc3RQcm9jZXNzXSA6IHBvc3RQcm9jZXNzO1xuXG4gICAgICBpZiAocmVzICE9PSB1bmRlZmluZWQgJiYgcmVzICE9PSBudWxsICYmIHBvc3RQcm9jZXNzb3JOYW1lcyAmJiBwb3N0UHJvY2Vzc29yTmFtZXMubGVuZ3RoICYmIG9wdGlvbnMuYXBwbHlQb3N0UHJvY2Vzc29yICE9PSBmYWxzZSkge1xuICAgICAgICByZXMgPSBwb3N0UHJvY2Vzc29yLmhhbmRsZShwb3N0UHJvY2Vzc29yTmFtZXMsIHJlcywga2V5LCB0aGlzLm9wdGlvbnMgJiYgdGhpcy5vcHRpb25zLnBvc3RQcm9jZXNzUGFzc1Jlc29sdmVkID8gX29iamVjdFNwcmVhZCh7XG4gICAgICAgICAgaTE4blJlc29sdmVkOiByZXNvbHZlZFxuICAgICAgICB9LCBvcHRpb25zKSA6IG9wdGlvbnMsIHRoaXMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNvbHZlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc29sdmUoa2V5cykge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgICAgIHZhciBmb3VuZDtcbiAgICAgIHZhciB1c2VkS2V5O1xuICAgICAgdmFyIGV4YWN0VXNlZEtleTtcbiAgICAgIHZhciB1c2VkTG5nO1xuICAgICAgdmFyIHVzZWROUztcbiAgICAgIGlmICh0eXBlb2Yga2V5cyA9PT0gJ3N0cmluZycpIGtleXMgPSBba2V5c107XG4gICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24gKGspIHtcbiAgICAgICAgaWYgKF90aGlzNC5pc1ZhbGlkTG9va3VwKGZvdW5kKSkgcmV0dXJuO1xuXG4gICAgICAgIHZhciBleHRyYWN0ZWQgPSBfdGhpczQuZXh0cmFjdEZyb21LZXkoaywgb3B0aW9ucyk7XG5cbiAgICAgICAgdmFyIGtleSA9IGV4dHJhY3RlZC5rZXk7XG4gICAgICAgIHVzZWRLZXkgPSBrZXk7XG4gICAgICAgIHZhciBuYW1lc3BhY2VzID0gZXh0cmFjdGVkLm5hbWVzcGFjZXM7XG4gICAgICAgIGlmIChfdGhpczQub3B0aW9ucy5mYWxsYmFja05TKSBuYW1lc3BhY2VzID0gbmFtZXNwYWNlcy5jb25jYXQoX3RoaXM0Lm9wdGlvbnMuZmFsbGJhY2tOUyk7XG4gICAgICAgIHZhciBuZWVkc1BsdXJhbEhhbmRsaW5nID0gb3B0aW9ucy5jb3VudCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvcHRpb25zLmNvdW50ICE9PSAnc3RyaW5nJztcbiAgICAgICAgdmFyIG5lZWRzQ29udGV4dEhhbmRsaW5nID0gb3B0aW9ucy5jb250ZXh0ICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIG9wdGlvbnMuY29udGV4dCA9PT0gJ3N0cmluZycgJiYgb3B0aW9ucy5jb250ZXh0ICE9PSAnJztcbiAgICAgICAgdmFyIGNvZGVzID0gb3B0aW9ucy5sbmdzID8gb3B0aW9ucy5sbmdzIDogX3RoaXM0Lmxhbmd1YWdlVXRpbHMudG9SZXNvbHZlSGllcmFyY2h5KG9wdGlvbnMubG5nIHx8IF90aGlzNC5sYW5ndWFnZSwgb3B0aW9ucy5mYWxsYmFja0xuZyk7XG4gICAgICAgIG5hbWVzcGFjZXMuZm9yRWFjaChmdW5jdGlvbiAobnMpIHtcbiAgICAgICAgICBpZiAoX3RoaXM0LmlzVmFsaWRMb29rdXAoZm91bmQpKSByZXR1cm47XG4gICAgICAgICAgdXNlZE5TID0gbnM7XG5cbiAgICAgICAgICBpZiAoIWNoZWNrZWRMb2FkZWRGb3JbXCJcIi5jb25jYXQoY29kZXNbMF0sIFwiLVwiKS5jb25jYXQobnMpXSAmJiBfdGhpczQudXRpbHMgJiYgX3RoaXM0LnV0aWxzLmhhc0xvYWRlZE5hbWVzcGFjZSAmJiAhX3RoaXM0LnV0aWxzLmhhc0xvYWRlZE5hbWVzcGFjZSh1c2VkTlMpKSB7XG4gICAgICAgICAgICBjaGVja2VkTG9hZGVkRm9yW1wiXCIuY29uY2F0KGNvZGVzWzBdLCBcIi1cIikuY29uY2F0KG5zKV0gPSB0cnVlO1xuXG4gICAgICAgICAgICBfdGhpczQubG9nZ2VyLndhcm4oXCJrZXkgXFxcIlwiLmNvbmNhdCh1c2VkS2V5LCBcIlxcXCIgZm9yIGxhbmd1YWdlcyBcXFwiXCIpLmNvbmNhdChjb2Rlcy5qb2luKCcsICcpLCBcIlxcXCIgd29uJ3QgZ2V0IHJlc29sdmVkIGFzIG5hbWVzcGFjZSBcXFwiXCIpLmNvbmNhdCh1c2VkTlMsIFwiXFxcIiB3YXMgbm90IHlldCBsb2FkZWRcIiksICdUaGlzIG1lYW5zIHNvbWV0aGluZyBJUyBXUk9ORyBpbiB5b3VyIHNldHVwLiBZb3UgYWNjZXNzIHRoZSB0IGZ1bmN0aW9uIGJlZm9yZSBpMThuZXh0LmluaXQgLyBpMThuZXh0LmxvYWROYW1lc3BhY2UgLyBpMThuZXh0LmNoYW5nZUxhbmd1YWdlIHdhcyBkb25lLiBXYWl0IGZvciB0aGUgY2FsbGJhY2sgb3IgUHJvbWlzZSB0byByZXNvbHZlIGJlZm9yZSBhY2Nlc3NpbmcgaXQhISEnKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChjb2RlKSB7XG4gICAgICAgICAgICBpZiAoX3RoaXM0LmlzVmFsaWRMb29rdXAoZm91bmQpKSByZXR1cm47XG4gICAgICAgICAgICB1c2VkTG5nID0gY29kZTtcbiAgICAgICAgICAgIHZhciBmaW5hbEtleSA9IGtleTtcbiAgICAgICAgICAgIHZhciBmaW5hbEtleXMgPSBbZmluYWxLZXldO1xuXG4gICAgICAgICAgICBpZiAoX3RoaXM0LmkxOG5Gb3JtYXQgJiYgX3RoaXM0LmkxOG5Gb3JtYXQuYWRkTG9va3VwS2V5cykge1xuICAgICAgICAgICAgICBfdGhpczQuaTE4bkZvcm1hdC5hZGRMb29rdXBLZXlzKGZpbmFsS2V5cywga2V5LCBjb2RlLCBucywgb3B0aW9ucyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB2YXIgcGx1cmFsU3VmZml4O1xuICAgICAgICAgICAgICBpZiAobmVlZHNQbHVyYWxIYW5kbGluZykgcGx1cmFsU3VmZml4ID0gX3RoaXM0LnBsdXJhbFJlc29sdmVyLmdldFN1ZmZpeChjb2RlLCBvcHRpb25zLmNvdW50KTtcbiAgICAgICAgICAgICAgaWYgKG5lZWRzUGx1cmFsSGFuZGxpbmcgJiYgbmVlZHNDb250ZXh0SGFuZGxpbmcpIGZpbmFsS2V5cy5wdXNoKGZpbmFsS2V5ICsgcGx1cmFsU3VmZml4KTtcbiAgICAgICAgICAgICAgaWYgKG5lZWRzQ29udGV4dEhhbmRsaW5nKSBmaW5hbEtleXMucHVzaChmaW5hbEtleSArPSBcIlwiLmNvbmNhdChfdGhpczQub3B0aW9ucy5jb250ZXh0U2VwYXJhdG9yKS5jb25jYXQob3B0aW9ucy5jb250ZXh0KSk7XG4gICAgICAgICAgICAgIGlmIChuZWVkc1BsdXJhbEhhbmRsaW5nKSBmaW5hbEtleXMucHVzaChmaW5hbEtleSArPSBwbHVyYWxTdWZmaXgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgcG9zc2libGVLZXk7XG5cbiAgICAgICAgICAgIHdoaWxlIChwb3NzaWJsZUtleSA9IGZpbmFsS2V5cy5wb3AoKSkge1xuICAgICAgICAgICAgICBpZiAoIV90aGlzNC5pc1ZhbGlkTG9va3VwKGZvdW5kKSkge1xuICAgICAgICAgICAgICAgIGV4YWN0VXNlZEtleSA9IHBvc3NpYmxlS2V5O1xuICAgICAgICAgICAgICAgIGZvdW5kID0gX3RoaXM0LmdldFJlc291cmNlKGNvZGUsIG5zLCBwb3NzaWJsZUtleSwgb3B0aW9ucyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlczogZm91bmQsXG4gICAgICAgIHVzZWRLZXk6IHVzZWRLZXksXG4gICAgICAgIGV4YWN0VXNlZEtleTogZXhhY3RVc2VkS2V5LFxuICAgICAgICB1c2VkTG5nOiB1c2VkTG5nLFxuICAgICAgICB1c2VkTlM6IHVzZWROU1xuICAgICAgfTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaXNWYWxpZExvb2t1cFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc1ZhbGlkTG9va3VwKHJlcykge1xuICAgICAgcmV0dXJuIHJlcyAhPT0gdW5kZWZpbmVkICYmICEoIXRoaXMub3B0aW9ucy5yZXR1cm5OdWxsICYmIHJlcyA9PT0gbnVsbCkgJiYgISghdGhpcy5vcHRpb25zLnJldHVybkVtcHR5U3RyaW5nICYmIHJlcyA9PT0gJycpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRSZXNvdXJjZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRSZXNvdXJjZShjb2RlLCBucywga2V5KSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDoge307XG4gICAgICBpZiAodGhpcy5pMThuRm9ybWF0ICYmIHRoaXMuaTE4bkZvcm1hdC5nZXRSZXNvdXJjZSkgcmV0dXJuIHRoaXMuaTE4bkZvcm1hdC5nZXRSZXNvdXJjZShjb2RlLCBucywga2V5LCBvcHRpb25zKTtcbiAgICAgIHJldHVybiB0aGlzLnJlc291cmNlU3RvcmUuZ2V0UmVzb3VyY2UoY29kZSwgbnMsIGtleSwgb3B0aW9ucyk7XG4gICAgfVxuICB9XSwgW3tcbiAgICBrZXk6IFwiaGFzRGVmYXVsdFZhbHVlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhc0RlZmF1bHRWYWx1ZShvcHRpb25zKSB7XG4gICAgICB2YXIgcHJlZml4ID0gJ2RlZmF1bHRWYWx1ZSc7XG5cbiAgICAgIGZvciAodmFyIG9wdGlvbiBpbiBvcHRpb25zKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3B0aW9ucywgb3B0aW9uKSAmJiBwcmVmaXggPT09IG9wdGlvbi5zdWJzdHJpbmcoMCwgcHJlZml4Lmxlbmd0aCkgJiYgdW5kZWZpbmVkICE9PSBvcHRpb25zW29wdGlvbl0pIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFRyYW5zbGF0b3I7XG59KEV2ZW50RW1pdHRlcik7XG5cbmZ1bmN0aW9uIGNhcGl0YWxpemUoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHJpbmcuc2xpY2UoMSk7XG59XG5cbnZhciBMYW5ndWFnZVV0aWwgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIExhbmd1YWdlVXRpbChvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExhbmd1YWdlVXRpbCk7XG5cbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMud2hpdGVsaXN0ID0gdGhpcy5vcHRpb25zLnN1cHBvcnRlZExuZ3MgfHwgZmFsc2U7XG4gICAgdGhpcy5zdXBwb3J0ZWRMbmdzID0gdGhpcy5vcHRpb25zLnN1cHBvcnRlZExuZ3MgfHwgZmFsc2U7XG4gICAgdGhpcy5sb2dnZXIgPSBiYXNlTG9nZ2VyLmNyZWF0ZSgnbGFuZ3VhZ2VVdGlscycpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKExhbmd1YWdlVXRpbCwgW3tcbiAgICBrZXk6IFwiZ2V0U2NyaXB0UGFydEZyb21Db2RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFNjcmlwdFBhcnRGcm9tQ29kZShjb2RlKSB7XG4gICAgICBpZiAoIWNvZGUgfHwgY29kZS5pbmRleE9mKCctJykgPCAwKSByZXR1cm4gbnVsbDtcbiAgICAgIHZhciBwID0gY29kZS5zcGxpdCgnLScpO1xuICAgICAgaWYgKHAubGVuZ3RoID09PSAyKSByZXR1cm4gbnVsbDtcbiAgICAgIHAucG9wKCk7XG4gICAgICBpZiAocFtwLmxlbmd0aCAtIDFdLnRvTG93ZXJDYXNlKCkgPT09ICd4JykgcmV0dXJuIG51bGw7XG4gICAgICByZXR1cm4gdGhpcy5mb3JtYXRMYW5ndWFnZUNvZGUocC5qb2luKCctJykpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRMYW5ndWFnZVBhcnRGcm9tQ29kZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRMYW5ndWFnZVBhcnRGcm9tQ29kZShjb2RlKSB7XG4gICAgICBpZiAoIWNvZGUgfHwgY29kZS5pbmRleE9mKCctJykgPCAwKSByZXR1cm4gY29kZTtcbiAgICAgIHZhciBwID0gY29kZS5zcGxpdCgnLScpO1xuICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0TGFuZ3VhZ2VDb2RlKHBbMF0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJmb3JtYXRMYW5ndWFnZUNvZGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0TGFuZ3VhZ2VDb2RlKGNvZGUpIHtcbiAgICAgIGlmICh0eXBlb2YgY29kZSA9PT0gJ3N0cmluZycgJiYgY29kZS5pbmRleE9mKCctJykgPiAtMSkge1xuICAgICAgICB2YXIgc3BlY2lhbENhc2VzID0gWydoYW5zJywgJ2hhbnQnLCAnbGF0bicsICdjeXJsJywgJ2NhbnMnLCAnbW9uZycsICdhcmFiJ107XG4gICAgICAgIHZhciBwID0gY29kZS5zcGxpdCgnLScpO1xuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubG93ZXJDYXNlTG5nKSB7XG4gICAgICAgICAgcCA9IHAubWFwKGZ1bmN0aW9uIChwYXJ0KSB7XG4gICAgICAgICAgICByZXR1cm4gcGFydC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKHAubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgcFswXSA9IHBbMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICBwWzFdID0gcFsxXS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgIGlmIChzcGVjaWFsQ2FzZXMuaW5kZXhPZihwWzFdLnRvTG93ZXJDYXNlKCkpID4gLTEpIHBbMV0gPSBjYXBpdGFsaXplKHBbMV0udG9Mb3dlckNhc2UoKSk7XG4gICAgICAgIH0gZWxzZSBpZiAocC5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICBwWzBdID0gcFswXS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgIGlmIChwWzFdLmxlbmd0aCA9PT0gMikgcFsxXSA9IHBbMV0udG9VcHBlckNhc2UoKTtcbiAgICAgICAgICBpZiAocFswXSAhPT0gJ3NnbicgJiYgcFsyXS5sZW5ndGggPT09IDIpIHBbMl0gPSBwWzJdLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgaWYgKHNwZWNpYWxDYXNlcy5pbmRleE9mKHBbMV0udG9Mb3dlckNhc2UoKSkgPiAtMSkgcFsxXSA9IGNhcGl0YWxpemUocFsxXS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICBpZiAoc3BlY2lhbENhc2VzLmluZGV4T2YocFsyXS50b0xvd2VyQ2FzZSgpKSA+IC0xKSBwWzJdID0gY2FwaXRhbGl6ZShwWzJdLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHAuam9pbignLScpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLmNsZWFuQ29kZSB8fCB0aGlzLm9wdGlvbnMubG93ZXJDYXNlTG5nID8gY29kZS50b0xvd2VyQ2FzZSgpIDogY29kZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaXNXaGl0ZWxpc3RlZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc1doaXRlbGlzdGVkKGNvZGUpIHtcbiAgICAgIHRoaXMubG9nZ2VyLmRlcHJlY2F0ZSgnbGFuZ3VhZ2VVdGlscy5pc1doaXRlbGlzdGVkJywgJ2Z1bmN0aW9uIFwiaXNXaGl0ZWxpc3RlZFwiIHdpbGwgYmUgcmVuYW1lZCB0byBcImlzU3VwcG9ydGVkQ29kZVwiIGluIHRoZSBuZXh0IG1ham9yIC0gcGxlYXNlIG1ha2Ugc3VyZSB0byByZW5hbWUgaXRcXCdzIHVzYWdlIGFzYXAuJyk7XG4gICAgICByZXR1cm4gdGhpcy5pc1N1cHBvcnRlZENvZGUoY29kZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImlzU3VwcG9ydGVkQ29kZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc1N1cHBvcnRlZENvZGUoY29kZSkge1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy5sb2FkID09PSAnbGFuZ3VhZ2VPbmx5JyB8fCB0aGlzLm9wdGlvbnMubm9uRXhwbGljaXRTdXBwb3J0ZWRMbmdzKSB7XG4gICAgICAgIGNvZGUgPSB0aGlzLmdldExhbmd1YWdlUGFydEZyb21Db2RlKGNvZGUpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gIXRoaXMuc3VwcG9ydGVkTG5ncyB8fCAhdGhpcy5zdXBwb3J0ZWRMbmdzLmxlbmd0aCB8fCB0aGlzLnN1cHBvcnRlZExuZ3MuaW5kZXhPZihjb2RlKSA+IC0xO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRCZXN0TWF0Y2hGcm9tQ29kZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0QmVzdE1hdGNoRnJvbUNvZGVzKGNvZGVzKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBpZiAoIWNvZGVzKSByZXR1cm4gbnVsbDtcbiAgICAgIHZhciBmb3VuZDtcbiAgICAgIGNvZGVzLmZvckVhY2goZnVuY3Rpb24gKGNvZGUpIHtcbiAgICAgICAgaWYgKGZvdW5kKSByZXR1cm47XG5cbiAgICAgICAgdmFyIGNsZWFuZWRMbmcgPSBfdGhpcy5mb3JtYXRMYW5ndWFnZUNvZGUoY29kZSk7XG5cbiAgICAgICAgaWYgKCFfdGhpcy5vcHRpb25zLnN1cHBvcnRlZExuZ3MgfHwgX3RoaXMuaXNTdXBwb3J0ZWRDb2RlKGNsZWFuZWRMbmcpKSBmb3VuZCA9IGNsZWFuZWRMbmc7XG4gICAgICB9KTtcblxuICAgICAgaWYgKCFmb3VuZCAmJiB0aGlzLm9wdGlvbnMuc3VwcG9ydGVkTG5ncykge1xuICAgICAgICBjb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChjb2RlKSB7XG4gICAgICAgICAgaWYgKGZvdW5kKSByZXR1cm47XG5cbiAgICAgICAgICB2YXIgbG5nT25seSA9IF90aGlzLmdldExhbmd1YWdlUGFydEZyb21Db2RlKGNvZGUpO1xuXG4gICAgICAgICAgaWYgKF90aGlzLmlzU3VwcG9ydGVkQ29kZShsbmdPbmx5KSkgcmV0dXJuIGZvdW5kID0gbG5nT25seTtcbiAgICAgICAgICBmb3VuZCA9IF90aGlzLm9wdGlvbnMuc3VwcG9ydGVkTG5ncy5maW5kKGZ1bmN0aW9uIChzdXBwb3J0ZWRMbmcpIHtcbiAgICAgICAgICAgIGlmIChzdXBwb3J0ZWRMbmcuaW5kZXhPZihsbmdPbmx5KSA9PT0gMCkgcmV0dXJuIHN1cHBvcnRlZExuZztcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghZm91bmQpIGZvdW5kID0gdGhpcy5nZXRGYWxsYmFja0NvZGVzKHRoaXMub3B0aW9ucy5mYWxsYmFja0xuZylbMF07XG4gICAgICByZXR1cm4gZm91bmQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEZhbGxiYWNrQ29kZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RmFsbGJhY2tDb2RlcyhmYWxsYmFja3MsIGNvZGUpIHtcbiAgICAgIGlmICghZmFsbGJhY2tzKSByZXR1cm4gW107XG4gICAgICBpZiAodHlwZW9mIGZhbGxiYWNrcyA9PT0gJ2Z1bmN0aW9uJykgZmFsbGJhY2tzID0gZmFsbGJhY2tzKGNvZGUpO1xuICAgICAgaWYgKHR5cGVvZiBmYWxsYmFja3MgPT09ICdzdHJpbmcnKSBmYWxsYmFja3MgPSBbZmFsbGJhY2tzXTtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KGZhbGxiYWNrcykgPT09ICdbb2JqZWN0IEFycmF5XScpIHJldHVybiBmYWxsYmFja3M7XG4gICAgICBpZiAoIWNvZGUpIHJldHVybiBmYWxsYmFja3NbXCJkZWZhdWx0XCJdIHx8IFtdO1xuICAgICAgdmFyIGZvdW5kID0gZmFsbGJhY2tzW2NvZGVdO1xuICAgICAgaWYgKCFmb3VuZCkgZm91bmQgPSBmYWxsYmFja3NbdGhpcy5nZXRTY3JpcHRQYXJ0RnJvbUNvZGUoY29kZSldO1xuICAgICAgaWYgKCFmb3VuZCkgZm91bmQgPSBmYWxsYmFja3NbdGhpcy5mb3JtYXRMYW5ndWFnZUNvZGUoY29kZSldO1xuICAgICAgaWYgKCFmb3VuZCkgZm91bmQgPSBmYWxsYmFja3NbdGhpcy5nZXRMYW5ndWFnZVBhcnRGcm9tQ29kZShjb2RlKV07XG4gICAgICBpZiAoIWZvdW5kKSBmb3VuZCA9IGZhbGxiYWNrc1tcImRlZmF1bHRcIl07XG4gICAgICByZXR1cm4gZm91bmQgfHwgW107XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInRvUmVzb2x2ZUhpZXJhcmNoeVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b1Jlc29sdmVIaWVyYXJjaHkoY29kZSwgZmFsbGJhY2tDb2RlKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIGZhbGxiYWNrQ29kZXMgPSB0aGlzLmdldEZhbGxiYWNrQ29kZXMoZmFsbGJhY2tDb2RlIHx8IHRoaXMub3B0aW9ucy5mYWxsYmFja0xuZyB8fCBbXSwgY29kZSk7XG4gICAgICB2YXIgY29kZXMgPSBbXTtcblxuICAgICAgdmFyIGFkZENvZGUgPSBmdW5jdGlvbiBhZGRDb2RlKGMpIHtcbiAgICAgICAgaWYgKCFjKSByZXR1cm47XG5cbiAgICAgICAgaWYgKF90aGlzMi5pc1N1cHBvcnRlZENvZGUoYykpIHtcbiAgICAgICAgICBjb2Rlcy5wdXNoKGMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzMi5sb2dnZXIud2FybihcInJlamVjdGluZyBsYW5ndWFnZSBjb2RlIG5vdCBmb3VuZCBpbiBzdXBwb3J0ZWRMbmdzOiBcIi5jb25jYXQoYykpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBpZiAodHlwZW9mIGNvZGUgPT09ICdzdHJpbmcnICYmIGNvZGUuaW5kZXhPZignLScpID4gLTEpIHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5sb2FkICE9PSAnbGFuZ3VhZ2VPbmx5JykgYWRkQ29kZSh0aGlzLmZvcm1hdExhbmd1YWdlQ29kZShjb2RlKSk7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubG9hZCAhPT0gJ2xhbmd1YWdlT25seScgJiYgdGhpcy5vcHRpb25zLmxvYWQgIT09ICdjdXJyZW50T25seScpIGFkZENvZGUodGhpcy5nZXRTY3JpcHRQYXJ0RnJvbUNvZGUoY29kZSkpO1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLmxvYWQgIT09ICdjdXJyZW50T25seScpIGFkZENvZGUodGhpcy5nZXRMYW5ndWFnZVBhcnRGcm9tQ29kZShjb2RlKSk7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb2RlID09PSAnc3RyaW5nJykge1xuICAgICAgICBhZGRDb2RlKHRoaXMuZm9ybWF0TGFuZ3VhZ2VDb2RlKGNvZGUpKTtcbiAgICAgIH1cblxuICAgICAgZmFsbGJhY2tDb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChmYykge1xuICAgICAgICBpZiAoY29kZXMuaW5kZXhPZihmYykgPCAwKSBhZGRDb2RlKF90aGlzMi5mb3JtYXRMYW5ndWFnZUNvZGUoZmMpKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGNvZGVzO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMYW5ndWFnZVV0aWw7XG59KCk7XG5cbnZhciBzZXRzID0gW3tcbiAgbG5nczogWydhY2gnLCAnYWsnLCAnYW0nLCAnYXJuJywgJ2JyJywgJ2ZpbCcsICdndW4nLCAnbG4nLCAnbWZlJywgJ21nJywgJ21pJywgJ29jJywgJ3B0JywgJ3B0LUJSJywgJ3RnJywgJ3RsJywgJ3RpJywgJ3RyJywgJ3V6JywgJ3dhJ10sXG4gIG5yOiBbMSwgMl0sXG4gIGZjOiAxXG59LCB7XG4gIGxuZ3M6IFsnYWYnLCAnYW4nLCAnYXN0JywgJ2F6JywgJ2JnJywgJ2JuJywgJ2NhJywgJ2RhJywgJ2RlJywgJ2RldicsICdlbCcsICdlbicsICdlbycsICdlcycsICdldCcsICdldScsICdmaScsICdmbycsICdmdXInLCAnZnknLCAnZ2wnLCAnZ3UnLCAnaGEnLCAnaGknLCAnaHUnLCAnaHknLCAnaWEnLCAnaXQnLCAna24nLCAna3UnLCAnbGInLCAnbWFpJywgJ21sJywgJ21uJywgJ21yJywgJ25haCcsICduYXAnLCAnbmInLCAnbmUnLCAnbmwnLCAnbm4nLCAnbm8nLCAnbnNvJywgJ3BhJywgJ3BhcCcsICdwbXMnLCAncHMnLCAncHQtUFQnLCAncm0nLCAnc2NvJywgJ3NlJywgJ3NpJywgJ3NvJywgJ3NvbicsICdzcScsICdzdicsICdzdycsICd0YScsICd0ZScsICd0aycsICd1cicsICd5byddLFxuICBucjogWzEsIDJdLFxuICBmYzogMlxufSwge1xuICBsbmdzOiBbJ2F5JywgJ2JvJywgJ2NnZycsICdmYScsICdodCcsICdpZCcsICdqYScsICdqYm8nLCAna2EnLCAna2snLCAna20nLCAna28nLCAna3knLCAnbG8nLCAnbXMnLCAnc2FoJywgJ3N1JywgJ3RoJywgJ3R0JywgJ3VnJywgJ3ZpJywgJ3dvJywgJ3poJ10sXG4gIG5yOiBbMV0sXG4gIGZjOiAzXG59LCB7XG4gIGxuZ3M6IFsnYmUnLCAnYnMnLCAnY25yJywgJ2R6JywgJ2hyJywgJ3J1JywgJ3NyJywgJ3VrJ10sXG4gIG5yOiBbMSwgMiwgNV0sXG4gIGZjOiA0XG59LCB7XG4gIGxuZ3M6IFsnYXInXSxcbiAgbnI6IFswLCAxLCAyLCAzLCAxMSwgMTAwXSxcbiAgZmM6IDVcbn0sIHtcbiAgbG5nczogWydjcycsICdzayddLFxuICBucjogWzEsIDIsIDVdLFxuICBmYzogNlxufSwge1xuICBsbmdzOiBbJ2NzYicsICdwbCddLFxuICBucjogWzEsIDIsIDVdLFxuICBmYzogN1xufSwge1xuICBsbmdzOiBbJ2N5J10sXG4gIG5yOiBbMSwgMiwgMywgOF0sXG4gIGZjOiA4XG59LCB7XG4gIGxuZ3M6IFsnZnInXSxcbiAgbnI6IFsxLCAyXSxcbiAgZmM6IDlcbn0sIHtcbiAgbG5nczogWydnYSddLFxuICBucjogWzEsIDIsIDMsIDcsIDExXSxcbiAgZmM6IDEwXG59LCB7XG4gIGxuZ3M6IFsnZ2QnXSxcbiAgbnI6IFsxLCAyLCAzLCAyMF0sXG4gIGZjOiAxMVxufSwge1xuICBsbmdzOiBbJ2lzJ10sXG4gIG5yOiBbMSwgMl0sXG4gIGZjOiAxMlxufSwge1xuICBsbmdzOiBbJ2p2J10sXG4gIG5yOiBbMCwgMV0sXG4gIGZjOiAxM1xufSwge1xuICBsbmdzOiBbJ2t3J10sXG4gIG5yOiBbMSwgMiwgMywgNF0sXG4gIGZjOiAxNFxufSwge1xuICBsbmdzOiBbJ2x0J10sXG4gIG5yOiBbMSwgMiwgMTBdLFxuICBmYzogMTVcbn0sIHtcbiAgbG5nczogWydsdiddLFxuICBucjogWzEsIDIsIDBdLFxuICBmYzogMTZcbn0sIHtcbiAgbG5nczogWydtayddLFxuICBucjogWzEsIDJdLFxuICBmYzogMTdcbn0sIHtcbiAgbG5nczogWydtbmsnXSxcbiAgbnI6IFswLCAxLCAyXSxcbiAgZmM6IDE4XG59LCB7XG4gIGxuZ3M6IFsnbXQnXSxcbiAgbnI6IFsxLCAyLCAxMSwgMjBdLFxuICBmYzogMTlcbn0sIHtcbiAgbG5nczogWydvciddLFxuICBucjogWzIsIDFdLFxuICBmYzogMlxufSwge1xuICBsbmdzOiBbJ3JvJ10sXG4gIG5yOiBbMSwgMiwgMjBdLFxuICBmYzogMjBcbn0sIHtcbiAgbG5nczogWydzbCddLFxuICBucjogWzUsIDEsIDIsIDNdLFxuICBmYzogMjFcbn0sIHtcbiAgbG5nczogWydoZScsICdpdyddLFxuICBucjogWzEsIDIsIDIwLCAyMV0sXG4gIGZjOiAyMlxufV07XG52YXIgX3J1bGVzUGx1cmFsc1R5cGVzID0ge1xuICAxOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPiAxKTtcbiAgfSxcbiAgMjogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuICE9IDEpO1xuICB9LFxuICAzOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gMDtcbiAgfSxcbiAgNDogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuICUgMTAgPT0gMSAmJiBuICUgMTAwICE9IDExID8gMCA6IG4gJSAxMCA+PSAyICYmIG4gJSAxMCA8PSA0ICYmIChuICUgMTAwIDwgMTAgfHwgbiAlIDEwMCA+PSAyMCkgPyAxIDogMik7XG4gIH0sXG4gIDU6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAwID8gMCA6IG4gPT0gMSA/IDEgOiBuID09IDIgPyAyIDogbiAlIDEwMCA+PSAzICYmIG4gJSAxMDAgPD0gMTAgPyAzIDogbiAlIDEwMCA+PSAxMSA/IDQgOiA1KTtcbiAgfSxcbiAgNjogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiA+PSAyICYmIG4gPD0gNCA/IDEgOiAyKTtcbiAgfSxcbiAgNzogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiAlIDEwID49IDIgJiYgbiAlIDEwIDw9IDQgJiYgKG4gJSAxMDAgPCAxMCB8fCBuICUgMTAwID49IDIwKSA/IDEgOiAyKTtcbiAgfSxcbiAgODogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgPyAwIDogbiA9PSAyID8gMSA6IG4gIT0gOCAmJiBuICE9IDExID8gMiA6IDMpO1xuICB9LFxuICA5OiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPj0gMik7XG4gIH0sXG4gIDEwOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gPT0gMSA/IDAgOiBuID09IDIgPyAxIDogbiA8IDcgPyAyIDogbiA8IDExID8gMyA6IDQpO1xuICB9LFxuICAxMTogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgfHwgbiA9PSAxMSA/IDAgOiBuID09IDIgfHwgbiA9PSAxMiA/IDEgOiBuID4gMiAmJiBuIDwgMjAgPyAyIDogMyk7XG4gIH0sXG4gIDEyOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gJSAxMCAhPSAxIHx8IG4gJSAxMDAgPT0gMTEpO1xuICB9LFxuICAxMzogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuICE9PSAwKTtcbiAgfSxcbiAgMTQ6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAxID8gMCA6IG4gPT0gMiA/IDEgOiBuID09IDMgPyAyIDogMyk7XG4gIH0sXG4gIDE1OiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gJSAxMCA9PSAxICYmIG4gJSAxMDAgIT0gMTEgPyAwIDogbiAlIDEwID49IDIgJiYgKG4gJSAxMDAgPCAxMCB8fCBuICUgMTAwID49IDIwKSA/IDEgOiAyKTtcbiAgfSxcbiAgMTY6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiAlIDEwID09IDEgJiYgbiAlIDEwMCAhPSAxMSA/IDAgOiBuICE9PSAwID8gMSA6IDIpO1xuICB9LFxuICAxNzogZnVuY3Rpb24gXyhuKSB7XG4gICAgcmV0dXJuIE51bWJlcihuID09IDEgfHwgbiAlIDEwID09IDEgJiYgbiAlIDEwMCAhPSAxMSA/IDAgOiAxKTtcbiAgfSxcbiAgMTg6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAwID8gMCA6IG4gPT0gMSA/IDEgOiAyKTtcbiAgfSxcbiAgMTk6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAxID8gMCA6IG4gPT0gMCB8fCBuICUgMTAwID4gMSAmJiBuICUgMTAwIDwgMTEgPyAxIDogbiAlIDEwMCA+IDEwICYmIG4gJSAxMDAgPCAyMCA/IDIgOiAzKTtcbiAgfSxcbiAgMjA6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAxID8gMCA6IG4gPT0gMCB8fCBuICUgMTAwID4gMCAmJiBuICUgMTAwIDwgMjAgPyAxIDogMik7XG4gIH0sXG4gIDIxOiBmdW5jdGlvbiBfKG4pIHtcbiAgICByZXR1cm4gTnVtYmVyKG4gJSAxMDAgPT0gMSA/IDEgOiBuICUgMTAwID09IDIgPyAyIDogbiAlIDEwMCA9PSAzIHx8IG4gJSAxMDAgPT0gNCA/IDMgOiAwKTtcbiAgfSxcbiAgMjI6IGZ1bmN0aW9uIF8obikge1xuICAgIHJldHVybiBOdW1iZXIobiA9PSAxID8gMCA6IG4gPT0gMiA/IDEgOiAobiA8IDAgfHwgbiA+IDEwKSAmJiBuICUgMTAgPT0gMCA/IDIgOiAzKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gY3JlYXRlUnVsZXMoKSB7XG4gIHZhciBydWxlcyA9IHt9O1xuICBzZXRzLmZvckVhY2goZnVuY3Rpb24gKHNldCkge1xuICAgIHNldC5sbmdzLmZvckVhY2goZnVuY3Rpb24gKGwpIHtcbiAgICAgIHJ1bGVzW2xdID0ge1xuICAgICAgICBudW1iZXJzOiBzZXQubnIsXG4gICAgICAgIHBsdXJhbHM6IF9ydWxlc1BsdXJhbHNUeXBlc1tzZXQuZmNdXG4gICAgICB9O1xuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIHJ1bGVzO1xufVxuXG52YXIgUGx1cmFsUmVzb2x2ZXIgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFBsdXJhbFJlc29sdmVyKGxhbmd1YWdlVXRpbHMpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGx1cmFsUmVzb2x2ZXIpO1xuXG4gICAgdGhpcy5sYW5ndWFnZVV0aWxzID0gbGFuZ3VhZ2VVdGlscztcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMubG9nZ2VyID0gYmFzZUxvZ2dlci5jcmVhdGUoJ3BsdXJhbFJlc29sdmVyJyk7XG4gICAgdGhpcy5ydWxlcyA9IGNyZWF0ZVJ1bGVzKCk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUGx1cmFsUmVzb2x2ZXIsIFt7XG4gICAga2V5OiBcImFkZFJ1bGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkUnVsZShsbmcsIG9iaikge1xuICAgICAgdGhpcy5ydWxlc1tsbmddID0gb2JqO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRSdWxlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJ1bGUoY29kZSkge1xuICAgICAgcmV0dXJuIHRoaXMucnVsZXNbY29kZV0gfHwgdGhpcy5ydWxlc1t0aGlzLmxhbmd1YWdlVXRpbHMuZ2V0TGFuZ3VhZ2VQYXJ0RnJvbUNvZGUoY29kZSldO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJuZWVkc1BsdXJhbFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBuZWVkc1BsdXJhbChjb2RlKSB7XG4gICAgICB2YXIgcnVsZSA9IHRoaXMuZ2V0UnVsZShjb2RlKTtcbiAgICAgIHJldHVybiBydWxlICYmIHJ1bGUubnVtYmVycy5sZW5ndGggPiAxO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRQbHVyYWxGb3Jtc09mS2V5XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFBsdXJhbEZvcm1zT2ZLZXkoY29kZSwga2V5KSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRTdWZmaXhlcyhjb2RlKS5tYXAoZnVuY3Rpb24gKHN1ZmZpeCkge1xuICAgICAgICByZXR1cm4ga2V5ICsgc3VmZml4O1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldFN1ZmZpeGVzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFN1ZmZpeGVzKGNvZGUpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBydWxlID0gdGhpcy5nZXRSdWxlKGNvZGUpO1xuXG4gICAgICBpZiAoIXJ1bGUpIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcnVsZS5udW1iZXJzLm1hcChmdW5jdGlvbiAobnVtYmVyKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5nZXRTdWZmaXgoY29kZSwgbnVtYmVyKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRTdWZmaXhcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U3VmZml4KGNvZGUsIGNvdW50KSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIHJ1bGUgPSB0aGlzLmdldFJ1bGUoY29kZSk7XG5cbiAgICAgIGlmIChydWxlKSB7XG4gICAgICAgIHZhciBpZHggPSBydWxlLm5vQWJzID8gcnVsZS5wbHVyYWxzKGNvdW50KSA6IHJ1bGUucGx1cmFscyhNYXRoLmFicyhjb3VudCkpO1xuICAgICAgICB2YXIgc3VmZml4ID0gcnVsZS5udW1iZXJzW2lkeF07XG5cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5zaW1wbGlmeVBsdXJhbFN1ZmZpeCAmJiBydWxlLm51bWJlcnMubGVuZ3RoID09PSAyICYmIHJ1bGUubnVtYmVyc1swXSA9PT0gMSkge1xuICAgICAgICAgIGlmIChzdWZmaXggPT09IDIpIHtcbiAgICAgICAgICAgIHN1ZmZpeCA9ICdwbHVyYWwnO1xuICAgICAgICAgIH0gZWxzZSBpZiAoc3VmZml4ID09PSAxKSB7XG4gICAgICAgICAgICBzdWZmaXggPSAnJztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmV0dXJuU3VmZml4ID0gZnVuY3Rpb24gcmV0dXJuU3VmZml4KCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIub3B0aW9ucy5wcmVwZW5kICYmIHN1ZmZpeC50b1N0cmluZygpID8gX3RoaXMyLm9wdGlvbnMucHJlcGVuZCArIHN1ZmZpeC50b1N0cmluZygpIDogc3VmZml4LnRvU3RyaW5nKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jb21wYXRpYmlsaXR5SlNPTiA9PT0gJ3YxJykge1xuICAgICAgICAgIGlmIChzdWZmaXggPT09IDEpIHJldHVybiAnJztcbiAgICAgICAgICBpZiAodHlwZW9mIHN1ZmZpeCA9PT0gJ251bWJlcicpIHJldHVybiBcIl9wbHVyYWxfXCIuY29uY2F0KHN1ZmZpeC50b1N0cmluZygpKTtcbiAgICAgICAgICByZXR1cm4gcmV0dXJuU3VmZml4KCk7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLmNvbXBhdGliaWxpdHlKU09OID09PSAndjInKSB7XG4gICAgICAgICAgcmV0dXJuIHJldHVyblN1ZmZpeCgpO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy5zaW1wbGlmeVBsdXJhbFN1ZmZpeCAmJiBydWxlLm51bWJlcnMubGVuZ3RoID09PSAyICYmIHJ1bGUubnVtYmVyc1swXSA9PT0gMSkge1xuICAgICAgICAgIHJldHVybiByZXR1cm5TdWZmaXgoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMucHJlcGVuZCAmJiBpZHgudG9TdHJpbmcoKSA/IHRoaXMub3B0aW9ucy5wcmVwZW5kICsgaWR4LnRvU3RyaW5nKCkgOiBpZHgudG9TdHJpbmcoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5sb2dnZXIud2FybihcIm5vIHBsdXJhbCBydWxlIGZvdW5kIGZvcjogXCIuY29uY2F0KGNvZGUpKTtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUGx1cmFsUmVzb2x2ZXI7XG59KCk7XG5cbnZhciBJbnRlcnBvbGF0b3IgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEludGVycG9sYXRvcigpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSW50ZXJwb2xhdG9yKTtcblxuICAgIHRoaXMubG9nZ2VyID0gYmFzZUxvZ2dlci5jcmVhdGUoJ2ludGVycG9sYXRvcicpO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cbiAgICB0aGlzLmZvcm1hdCA9IG9wdGlvbnMuaW50ZXJwb2xhdGlvbiAmJiBvcHRpb25zLmludGVycG9sYXRpb24uZm9ybWF0IHx8IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG5cbiAgICB0aGlzLmluaXQob3B0aW9ucyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoSW50ZXJwb2xhdG9yLCBbe1xuICAgIGtleTogXCJpbml0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgICBpZiAoIW9wdGlvbnMuaW50ZXJwb2xhdGlvbikgb3B0aW9ucy5pbnRlcnBvbGF0aW9uID0ge1xuICAgICAgICBlc2NhcGVWYWx1ZTogdHJ1ZVxuICAgICAgfTtcbiAgICAgIHZhciBpT3B0cyA9IG9wdGlvbnMuaW50ZXJwb2xhdGlvbjtcbiAgICAgIHRoaXMuZXNjYXBlID0gaU9wdHMuZXNjYXBlICE9PSB1bmRlZmluZWQgPyBpT3B0cy5lc2NhcGUgOiBlc2NhcGU7XG4gICAgICB0aGlzLmVzY2FwZVZhbHVlID0gaU9wdHMuZXNjYXBlVmFsdWUgIT09IHVuZGVmaW5lZCA/IGlPcHRzLmVzY2FwZVZhbHVlIDogdHJ1ZTtcbiAgICAgIHRoaXMudXNlUmF3VmFsdWVUb0VzY2FwZSA9IGlPcHRzLnVzZVJhd1ZhbHVlVG9Fc2NhcGUgIT09IHVuZGVmaW5lZCA/IGlPcHRzLnVzZVJhd1ZhbHVlVG9Fc2NhcGUgOiBmYWxzZTtcbiAgICAgIHRoaXMucHJlZml4ID0gaU9wdHMucHJlZml4ID8gcmVnZXhFc2NhcGUoaU9wdHMucHJlZml4KSA6IGlPcHRzLnByZWZpeEVzY2FwZWQgfHwgJ3t7JztcbiAgICAgIHRoaXMuc3VmZml4ID0gaU9wdHMuc3VmZml4ID8gcmVnZXhFc2NhcGUoaU9wdHMuc3VmZml4KSA6IGlPcHRzLnN1ZmZpeEVzY2FwZWQgfHwgJ319JztcbiAgICAgIHRoaXMuZm9ybWF0U2VwYXJhdG9yID0gaU9wdHMuZm9ybWF0U2VwYXJhdG9yID8gaU9wdHMuZm9ybWF0U2VwYXJhdG9yIDogaU9wdHMuZm9ybWF0U2VwYXJhdG9yIHx8ICcsJztcbiAgICAgIHRoaXMudW5lc2NhcGVQcmVmaXggPSBpT3B0cy51bmVzY2FwZVN1ZmZpeCA/ICcnIDogaU9wdHMudW5lc2NhcGVQcmVmaXggfHwgJy0nO1xuICAgICAgdGhpcy51bmVzY2FwZVN1ZmZpeCA9IHRoaXMudW5lc2NhcGVQcmVmaXggPyAnJyA6IGlPcHRzLnVuZXNjYXBlU3VmZml4IHx8ICcnO1xuICAgICAgdGhpcy5uZXN0aW5nUHJlZml4ID0gaU9wdHMubmVzdGluZ1ByZWZpeCA/IHJlZ2V4RXNjYXBlKGlPcHRzLm5lc3RpbmdQcmVmaXgpIDogaU9wdHMubmVzdGluZ1ByZWZpeEVzY2FwZWQgfHwgcmVnZXhFc2NhcGUoJyR0KCcpO1xuICAgICAgdGhpcy5uZXN0aW5nU3VmZml4ID0gaU9wdHMubmVzdGluZ1N1ZmZpeCA/IHJlZ2V4RXNjYXBlKGlPcHRzLm5lc3RpbmdTdWZmaXgpIDogaU9wdHMubmVzdGluZ1N1ZmZpeEVzY2FwZWQgfHwgcmVnZXhFc2NhcGUoJyknKTtcbiAgICAgIHRoaXMubmVzdGluZ09wdGlvbnNTZXBhcmF0b3IgPSBpT3B0cy5uZXN0aW5nT3B0aW9uc1NlcGFyYXRvciA/IGlPcHRzLm5lc3RpbmdPcHRpb25zU2VwYXJhdG9yIDogaU9wdHMubmVzdGluZ09wdGlvbnNTZXBhcmF0b3IgfHwgJywnO1xuICAgICAgdGhpcy5tYXhSZXBsYWNlcyA9IGlPcHRzLm1heFJlcGxhY2VzID8gaU9wdHMubWF4UmVwbGFjZXMgOiAxMDAwO1xuICAgICAgdGhpcy5hbHdheXNGb3JtYXQgPSBpT3B0cy5hbHdheXNGb3JtYXQgIT09IHVuZGVmaW5lZCA/IGlPcHRzLmFsd2F5c0Zvcm1hdCA6IGZhbHNlO1xuICAgICAgdGhpcy5yZXNldFJlZ0V4cCgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNldFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMpIHRoaXMuaW5pdCh0aGlzLm9wdGlvbnMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZXNldFJlZ0V4cFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXNldFJlZ0V4cCgpIHtcbiAgICAgIHZhciByZWdleHBTdHIgPSBcIlwiLmNvbmNhdCh0aGlzLnByZWZpeCwgXCIoLis/KVwiKS5jb25jYXQodGhpcy5zdWZmaXgpO1xuICAgICAgdGhpcy5yZWdleHAgPSBuZXcgUmVnRXhwKHJlZ2V4cFN0ciwgJ2cnKTtcbiAgICAgIHZhciByZWdleHBVbmVzY2FwZVN0ciA9IFwiXCIuY29uY2F0KHRoaXMucHJlZml4KS5jb25jYXQodGhpcy51bmVzY2FwZVByZWZpeCwgXCIoLis/KVwiKS5jb25jYXQodGhpcy51bmVzY2FwZVN1ZmZpeCkuY29uY2F0KHRoaXMuc3VmZml4KTtcbiAgICAgIHRoaXMucmVnZXhwVW5lc2NhcGUgPSBuZXcgUmVnRXhwKHJlZ2V4cFVuZXNjYXBlU3RyLCAnZycpO1xuICAgICAgdmFyIG5lc3RpbmdSZWdleHBTdHIgPSBcIlwiLmNvbmNhdCh0aGlzLm5lc3RpbmdQcmVmaXgsIFwiKC4rPylcIikuY29uY2F0KHRoaXMubmVzdGluZ1N1ZmZpeCk7XG4gICAgICB0aGlzLm5lc3RpbmdSZWdleHAgPSBuZXcgUmVnRXhwKG5lc3RpbmdSZWdleHBTdHIsICdnJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImludGVycG9sYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGludGVycG9sYXRlKHN0ciwgZGF0YSwgbG5nLCBvcHRpb25zKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgbWF0Y2g7XG4gICAgICB2YXIgdmFsdWU7XG4gICAgICB2YXIgcmVwbGFjZXM7XG4gICAgICB2YXIgZGVmYXVsdERhdGEgPSB0aGlzLm9wdGlvbnMgJiYgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24gJiYgdGhpcy5vcHRpb25zLmludGVycG9sYXRpb24uZGVmYXVsdFZhcmlhYmxlcyB8fCB7fTtcblxuICAgICAgZnVuY3Rpb24gcmVnZXhTYWZlKHZhbCkge1xuICAgICAgICByZXR1cm4gdmFsLnJlcGxhY2UoL1xcJC9nLCAnJCQkJCcpO1xuICAgICAgfVxuXG4gICAgICB2YXIgaGFuZGxlRm9ybWF0ID0gZnVuY3Rpb24gaGFuZGxlRm9ybWF0KGtleSkge1xuICAgICAgICBpZiAoa2V5LmluZGV4T2YoX3RoaXMuZm9ybWF0U2VwYXJhdG9yKSA8IDApIHtcbiAgICAgICAgICB2YXIgcGF0aCA9IGdldFBhdGhXaXRoRGVmYXVsdHMoZGF0YSwgZGVmYXVsdERhdGEsIGtleSk7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLmFsd2F5c0Zvcm1hdCA/IF90aGlzLmZvcm1hdChwYXRoLCB1bmRlZmluZWQsIGxuZykgOiBwYXRoO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHAgPSBrZXkuc3BsaXQoX3RoaXMuZm9ybWF0U2VwYXJhdG9yKTtcbiAgICAgICAgdmFyIGsgPSBwLnNoaWZ0KCkudHJpbSgpO1xuICAgICAgICB2YXIgZiA9IHAuam9pbihfdGhpcy5mb3JtYXRTZXBhcmF0b3IpLnRyaW0oKTtcbiAgICAgICAgcmV0dXJuIF90aGlzLmZvcm1hdChnZXRQYXRoV2l0aERlZmF1bHRzKGRhdGEsIGRlZmF1bHREYXRhLCBrKSwgZiwgbG5nLCBvcHRpb25zKTtcbiAgICAgIH07XG5cbiAgICAgIHRoaXMucmVzZXRSZWdFeHAoKTtcbiAgICAgIHZhciBtaXNzaW5nSW50ZXJwb2xhdGlvbkhhbmRsZXIgPSBvcHRpb25zICYmIG9wdGlvbnMubWlzc2luZ0ludGVycG9sYXRpb25IYW5kbGVyIHx8IHRoaXMub3B0aW9ucy5taXNzaW5nSW50ZXJwb2xhdGlvbkhhbmRsZXI7XG4gICAgICB2YXIgc2tpcE9uVmFyaWFibGVzID0gb3B0aW9ucyAmJiBvcHRpb25zLmludGVycG9sYXRpb24gJiYgb3B0aW9ucy5pbnRlcnBvbGF0aW9uLnNraXBPblZhcmlhYmxlcyB8fCB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbi5za2lwT25WYXJpYWJsZXM7XG4gICAgICB2YXIgdG9kb3MgPSBbe1xuICAgICAgICByZWdleDogdGhpcy5yZWdleHBVbmVzY2FwZSxcbiAgICAgICAgc2FmZVZhbHVlOiBmdW5jdGlvbiBzYWZlVmFsdWUodmFsKSB7XG4gICAgICAgICAgcmV0dXJuIHJlZ2V4U2FmZSh2YWwpO1xuICAgICAgICB9XG4gICAgICB9LCB7XG4gICAgICAgIHJlZ2V4OiB0aGlzLnJlZ2V4cCxcbiAgICAgICAgc2FmZVZhbHVlOiBmdW5jdGlvbiBzYWZlVmFsdWUodmFsKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzLmVzY2FwZVZhbHVlID8gcmVnZXhTYWZlKF90aGlzLmVzY2FwZSh2YWwpKSA6IHJlZ2V4U2FmZSh2YWwpO1xuICAgICAgICB9XG4gICAgICB9XTtcbiAgICAgIHRvZG9zLmZvckVhY2goZnVuY3Rpb24gKHRvZG8pIHtcbiAgICAgICAgcmVwbGFjZXMgPSAwO1xuXG4gICAgICAgIHdoaWxlIChtYXRjaCA9IHRvZG8ucmVnZXguZXhlYyhzdHIpKSB7XG4gICAgICAgICAgdmFsdWUgPSBoYW5kbGVGb3JtYXQobWF0Y2hbMV0udHJpbSgpKTtcblxuICAgICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG1pc3NpbmdJbnRlcnBvbGF0aW9uSGFuZGxlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICB2YXIgdGVtcCA9IG1pc3NpbmdJbnRlcnBvbGF0aW9uSGFuZGxlcihzdHIsIG1hdGNoLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgdmFsdWUgPSB0eXBlb2YgdGVtcCA9PT0gJ3N0cmluZycgPyB0ZW1wIDogJyc7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNraXBPblZhcmlhYmxlcykge1xuICAgICAgICAgICAgICB2YWx1ZSA9IG1hdGNoWzBdO1xuICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIF90aGlzLmxvZ2dlci53YXJuKFwibWlzc2VkIHRvIHBhc3MgaW4gdmFyaWFibGUgXCIuY29uY2F0KG1hdGNoWzFdLCBcIiBmb3IgaW50ZXJwb2xhdGluZyBcIikuY29uY2F0KHN0cikpO1xuXG4gICAgICAgICAgICAgIHZhbHVlID0gJyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnICYmICFfdGhpcy51c2VSYXdWYWx1ZVRvRXNjYXBlKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IG1ha2VTdHJpbmcodmFsdWUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHN0ciA9IHN0ci5yZXBsYWNlKG1hdGNoWzBdLCB0b2RvLnNhZmVWYWx1ZSh2YWx1ZSkpO1xuICAgICAgICAgIHRvZG8ucmVnZXgubGFzdEluZGV4ID0gMDtcbiAgICAgICAgICByZXBsYWNlcysrO1xuXG4gICAgICAgICAgaWYgKHJlcGxhY2VzID49IF90aGlzLm1heFJlcGxhY2VzKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibmVzdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBuZXN0KHN0ciwgZmMpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG4gICAgICB2YXIgbWF0Y2g7XG4gICAgICB2YXIgdmFsdWU7XG5cbiAgICAgIHZhciBjbG9uZWRPcHRpb25zID0gX29iamVjdFNwcmVhZCh7fSwgb3B0aW9ucyk7XG5cbiAgICAgIGNsb25lZE9wdGlvbnMuYXBwbHlQb3N0UHJvY2Vzc29yID0gZmFsc2U7XG4gICAgICBkZWxldGUgY2xvbmVkT3B0aW9ucy5kZWZhdWx0VmFsdWU7XG5cbiAgICAgIGZ1bmN0aW9uIGhhbmRsZUhhc09wdGlvbnMoa2V5LCBpbmhlcml0ZWRPcHRpb25zKSB7XG4gICAgICAgIHZhciBzZXAgPSB0aGlzLm5lc3RpbmdPcHRpb25zU2VwYXJhdG9yO1xuICAgICAgICBpZiAoa2V5LmluZGV4T2Yoc2VwKSA8IDApIHJldHVybiBrZXk7XG4gICAgICAgIHZhciBjID0ga2V5LnNwbGl0KG5ldyBSZWdFeHAoXCJcIi5jb25jYXQoc2VwLCBcIlsgXSp7XCIpKSk7XG4gICAgICAgIHZhciBvcHRpb25zU3RyaW5nID0gXCJ7XCIuY29uY2F0KGNbMV0pO1xuICAgICAgICBrZXkgPSBjWzBdO1xuICAgICAgICBvcHRpb25zU3RyaW5nID0gdGhpcy5pbnRlcnBvbGF0ZShvcHRpb25zU3RyaW5nLCBjbG9uZWRPcHRpb25zKTtcbiAgICAgICAgb3B0aW9uc1N0cmluZyA9IG9wdGlvbnNTdHJpbmcucmVwbGFjZSgvJy9nLCAnXCInKTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIGNsb25lZE9wdGlvbnMgPSBKU09OLnBhcnNlKG9wdGlvbnNTdHJpbmcpO1xuICAgICAgICAgIGlmIChpbmhlcml0ZWRPcHRpb25zKSBjbG9uZWRPcHRpb25zID0gX29iamVjdFNwcmVhZCh7fSwgaW5oZXJpdGVkT3B0aW9ucywgY2xvbmVkT3B0aW9ucyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICB0aGlzLmxvZ2dlci53YXJuKFwiZmFpbGVkIHBhcnNpbmcgb3B0aW9ucyBzdHJpbmcgaW4gbmVzdGluZyBmb3Iga2V5IFwiLmNvbmNhdChrZXkpLCBlKTtcbiAgICAgICAgICByZXR1cm4gXCJcIi5jb25jYXQoa2V5KS5jb25jYXQoc2VwKS5jb25jYXQob3B0aW9uc1N0cmluZyk7XG4gICAgICAgIH1cblxuICAgICAgICBkZWxldGUgY2xvbmVkT3B0aW9ucy5kZWZhdWx0VmFsdWU7XG4gICAgICAgIHJldHVybiBrZXk7XG4gICAgICB9XG5cbiAgICAgIHdoaWxlIChtYXRjaCA9IHRoaXMubmVzdGluZ1JlZ2V4cC5leGVjKHN0cikpIHtcbiAgICAgICAgdmFyIGZvcm1hdHRlcnMgPSBbXTtcbiAgICAgICAgdmFyIGRvUmVkdWNlID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKG1hdGNoWzBdLmluY2x1ZGVzKHRoaXMuZm9ybWF0U2VwYXJhdG9yKSAmJiAhL3suKn0vLnRlc3QobWF0Y2hbMV0pKSB7XG4gICAgICAgICAgdmFyIHIgPSBtYXRjaFsxXS5zcGxpdCh0aGlzLmZvcm1hdFNlcGFyYXRvcikubWFwKGZ1bmN0aW9uIChlbGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbS50cmltKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgbWF0Y2hbMV0gPSByLnNoaWZ0KCk7XG4gICAgICAgICAgZm9ybWF0dGVycyA9IHI7XG4gICAgICAgICAgZG9SZWR1Y2UgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFsdWUgPSBmYyhoYW5kbGVIYXNPcHRpb25zLmNhbGwodGhpcywgbWF0Y2hbMV0udHJpbSgpLCBjbG9uZWRPcHRpb25zKSwgY2xvbmVkT3B0aW9ucyk7XG4gICAgICAgIGlmICh2YWx1ZSAmJiBtYXRjaFswXSA9PT0gc3RyICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHJldHVybiB2YWx1ZTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHZhbHVlID0gbWFrZVN0cmluZyh2YWx1ZSk7XG5cbiAgICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICAgIHRoaXMubG9nZ2VyLndhcm4oXCJtaXNzZWQgdG8gcmVzb2x2ZSBcIi5jb25jYXQobWF0Y2hbMV0sIFwiIGZvciBuZXN0aW5nIFwiKS5jb25jYXQoc3RyKSk7XG4gICAgICAgICAgdmFsdWUgPSAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkb1JlZHVjZSkge1xuICAgICAgICAgIHZhbHVlID0gZm9ybWF0dGVycy5yZWR1Y2UoZnVuY3Rpb24gKHYsIGYpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczIuZm9ybWF0KHYsIGYsIG9wdGlvbnMubG5nLCBvcHRpb25zKTtcbiAgICAgICAgICB9LCB2YWx1ZS50cmltKCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RyID0gc3RyLnJlcGxhY2UobWF0Y2hbMF0sIHZhbHVlKTtcbiAgICAgICAgdGhpcy5yZWdleHAubGFzdEluZGV4ID0gMDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSW50ZXJwb2xhdG9yO1xufSgpO1xuXG5mdW5jdGlvbiByZW1vdmUoYXJyLCB3aGF0KSB7XG4gIHZhciBmb3VuZCA9IGFyci5pbmRleE9mKHdoYXQpO1xuXG4gIHdoaWxlIChmb3VuZCAhPT0gLTEpIHtcbiAgICBhcnIuc3BsaWNlKGZvdW5kLCAxKTtcbiAgICBmb3VuZCA9IGFyci5pbmRleE9mKHdoYXQpO1xuICB9XG59XG5cbnZhciBDb25uZWN0b3IgPSBmdW5jdGlvbiAoX0V2ZW50RW1pdHRlcikge1xuICBfaW5oZXJpdHMoQ29ubmVjdG9yLCBfRXZlbnRFbWl0dGVyKTtcblxuICBmdW5jdGlvbiBDb25uZWN0b3IoYmFja2VuZCwgc3RvcmUsIHNlcnZpY2VzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbm5lY3Rvcik7XG5cbiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihDb25uZWN0b3IpLmNhbGwodGhpcykpO1xuXG4gICAgaWYgKGlzSUUxMCkge1xuICAgICAgRXZlbnRFbWl0dGVyLmNhbGwoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIH1cblxuICAgIF90aGlzLmJhY2tlbmQgPSBiYWNrZW5kO1xuICAgIF90aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgX3RoaXMuc2VydmljZXMgPSBzZXJ2aWNlcztcbiAgICBfdGhpcy5sYW5ndWFnZVV0aWxzID0gc2VydmljZXMubGFuZ3VhZ2VVdGlscztcbiAgICBfdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICBfdGhpcy5sb2dnZXIgPSBiYXNlTG9nZ2VyLmNyZWF0ZSgnYmFja2VuZENvbm5lY3RvcicpO1xuICAgIF90aGlzLnN0YXRlID0ge307XG4gICAgX3RoaXMucXVldWUgPSBbXTtcblxuICAgIGlmIChfdGhpcy5iYWNrZW5kICYmIF90aGlzLmJhY2tlbmQuaW5pdCkge1xuICAgICAgX3RoaXMuYmFja2VuZC5pbml0KHNlcnZpY2VzLCBvcHRpb25zLmJhY2tlbmQsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDb25uZWN0b3IsIFt7XG4gICAga2V5OiBcInF1ZXVlTG9hZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBxdWV1ZUxvYWQobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciB0b0xvYWQgPSBbXTtcbiAgICAgIHZhciBwZW5kaW5nID0gW107XG4gICAgICB2YXIgdG9Mb2FkTGFuZ3VhZ2VzID0gW107XG4gICAgICB2YXIgdG9Mb2FkTmFtZXNwYWNlcyA9IFtdO1xuICAgICAgbGFuZ3VhZ2VzLmZvckVhY2goZnVuY3Rpb24gKGxuZykge1xuICAgICAgICB2YXIgaGFzQWxsTmFtZXNwYWNlcyA9IHRydWU7XG4gICAgICAgIG5hbWVzcGFjZXMuZm9yRWFjaChmdW5jdGlvbiAobnMpIHtcbiAgICAgICAgICB2YXIgbmFtZSA9IFwiXCIuY29uY2F0KGxuZywgXCJ8XCIpLmNvbmNhdChucyk7XG5cbiAgICAgICAgICBpZiAoIW9wdGlvbnMucmVsb2FkICYmIF90aGlzMi5zdG9yZS5oYXNSZXNvdXJjZUJ1bmRsZShsbmcsIG5zKSkge1xuICAgICAgICAgICAgX3RoaXMyLnN0YXRlW25hbWVdID0gMjtcbiAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzMi5zdGF0ZVtuYW1lXSA8IDApIDsgZWxzZSBpZiAoX3RoaXMyLnN0YXRlW25hbWVdID09PSAxKSB7XG4gICAgICAgICAgICBpZiAocGVuZGluZy5pbmRleE9mKG5hbWUpIDwgMCkgcGVuZGluZy5wdXNoKG5hbWUpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBfdGhpczIuc3RhdGVbbmFtZV0gPSAxO1xuICAgICAgICAgICAgaGFzQWxsTmFtZXNwYWNlcyA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKHBlbmRpbmcuaW5kZXhPZihuYW1lKSA8IDApIHBlbmRpbmcucHVzaChuYW1lKTtcbiAgICAgICAgICAgIGlmICh0b0xvYWQuaW5kZXhPZihuYW1lKSA8IDApIHRvTG9hZC5wdXNoKG5hbWUpO1xuICAgICAgICAgICAgaWYgKHRvTG9hZE5hbWVzcGFjZXMuaW5kZXhPZihucykgPCAwKSB0b0xvYWROYW1lc3BhY2VzLnB1c2gobnMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghaGFzQWxsTmFtZXNwYWNlcykgdG9Mb2FkTGFuZ3VhZ2VzLnB1c2gobG5nKTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAodG9Mb2FkLmxlbmd0aCB8fCBwZW5kaW5nLmxlbmd0aCkge1xuICAgICAgICB0aGlzLnF1ZXVlLnB1c2goe1xuICAgICAgICAgIHBlbmRpbmc6IHBlbmRpbmcsXG4gICAgICAgICAgbG9hZGVkOiB7fSxcbiAgICAgICAgICBlcnJvcnM6IFtdLFxuICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFja1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdG9Mb2FkOiB0b0xvYWQsXG4gICAgICAgIHBlbmRpbmc6IHBlbmRpbmcsXG4gICAgICAgIHRvTG9hZExhbmd1YWdlczogdG9Mb2FkTGFuZ3VhZ2VzLFxuICAgICAgICB0b0xvYWROYW1lc3BhY2VzOiB0b0xvYWROYW1lc3BhY2VzXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2FkZWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZGVkKG5hbWUsIGVyciwgZGF0YSkge1xuICAgICAgdmFyIHMgPSBuYW1lLnNwbGl0KCd8Jyk7XG4gICAgICB2YXIgbG5nID0gc1swXTtcbiAgICAgIHZhciBucyA9IHNbMV07XG4gICAgICBpZiAoZXJyKSB0aGlzLmVtaXQoJ2ZhaWxlZExvYWRpbmcnLCBsbmcsIG5zLCBlcnIpO1xuXG4gICAgICBpZiAoZGF0YSkge1xuICAgICAgICB0aGlzLnN0b3JlLmFkZFJlc291cmNlQnVuZGxlKGxuZywgbnMsIGRhdGEpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnN0YXRlW25hbWVdID0gZXJyID8gLTEgOiAyO1xuICAgICAgdmFyIGxvYWRlZCA9IHt9O1xuICAgICAgdGhpcy5xdWV1ZS5mb3JFYWNoKGZ1bmN0aW9uIChxKSB7XG4gICAgICAgIHB1c2hQYXRoKHEubG9hZGVkLCBbbG5nXSwgbnMpO1xuICAgICAgICByZW1vdmUocS5wZW5kaW5nLCBuYW1lKTtcbiAgICAgICAgaWYgKGVycikgcS5lcnJvcnMucHVzaChlcnIpO1xuXG4gICAgICAgIGlmIChxLnBlbmRpbmcubGVuZ3RoID09PSAwICYmICFxLmRvbmUpIHtcbiAgICAgICAgICBPYmplY3Qua2V5cyhxLmxvYWRlZCkuZm9yRWFjaChmdW5jdGlvbiAobCkge1xuICAgICAgICAgICAgaWYgKCFsb2FkZWRbbF0pIGxvYWRlZFtsXSA9IFtdO1xuXG4gICAgICAgICAgICBpZiAocS5sb2FkZWRbbF0ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIHEubG9hZGVkW2xdLmZvckVhY2goZnVuY3Rpb24gKG5zKSB7XG4gICAgICAgICAgICAgICAgaWYgKGxvYWRlZFtsXS5pbmRleE9mKG5zKSA8IDApIGxvYWRlZFtsXS5wdXNoKG5zKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgcS5kb25lID0gdHJ1ZTtcblxuICAgICAgICAgIGlmIChxLmVycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHEuY2FsbGJhY2socS5lcnJvcnMpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBxLmNhbGxiYWNrKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZW1pdCgnbG9hZGVkJywgbG9hZGVkKTtcbiAgICAgIHRoaXMucXVldWUgPSB0aGlzLnF1ZXVlLmZpbHRlcihmdW5jdGlvbiAocSkge1xuICAgICAgICByZXR1cm4gIXEuZG9uZTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZWFkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlYWQobG5nLCBucywgZmNOYW1lKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIHRyaWVkID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAwO1xuICAgICAgdmFyIHdhaXQgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IDM1MDtcbiAgICAgIHZhciBjYWxsYmFjayA9IGFyZ3VtZW50cy5sZW5ndGggPiA1ID8gYXJndW1lbnRzWzVdIDogdW5kZWZpbmVkO1xuICAgICAgaWYgKCFsbmcubGVuZ3RoKSByZXR1cm4gY2FsbGJhY2sobnVsbCwge30pO1xuICAgICAgcmV0dXJuIHRoaXMuYmFja2VuZFtmY05hbWVdKGxuZywgbnMsIGZ1bmN0aW9uIChlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYgKGVyciAmJiBkYXRhICYmIHRyaWVkIDwgNSkge1xuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMzLnJlYWQuY2FsbChfdGhpczMsIGxuZywgbnMsIGZjTmFtZSwgdHJpZWQgKyAxLCB3YWl0ICogMiwgY2FsbGJhY2spO1xuICAgICAgICAgIH0sIHdhaXQpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNhbGxiYWNrKGVyciwgZGF0YSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicHJlcGFyZUxvYWRpbmdcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcHJlcGFyZUxvYWRpbmcobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9O1xuICAgICAgdmFyIGNhbGxiYWNrID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgPyBhcmd1bWVudHNbM10gOiB1bmRlZmluZWQ7XG5cbiAgICAgIGlmICghdGhpcy5iYWNrZW5kKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLndhcm4oJ05vIGJhY2tlbmQgd2FzIGFkZGVkIHZpYSBpMThuZXh0LnVzZS4gV2lsbCBub3QgbG9hZCByZXNvdXJjZXMuJyk7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxhbmd1YWdlcyA9PT0gJ3N0cmluZycpIGxhbmd1YWdlcyA9IHRoaXMubGFuZ3VhZ2VVdGlscy50b1Jlc29sdmVIaWVyYXJjaHkobGFuZ3VhZ2VzKTtcbiAgICAgIGlmICh0eXBlb2YgbmFtZXNwYWNlcyA9PT0gJ3N0cmluZycpIG5hbWVzcGFjZXMgPSBbbmFtZXNwYWNlc107XG4gICAgICB2YXIgdG9Mb2FkID0gdGhpcy5xdWV1ZUxvYWQobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzLCBvcHRpb25zLCBjYWxsYmFjayk7XG5cbiAgICAgIGlmICghdG9Mb2FkLnRvTG9hZC5sZW5ndGgpIHtcbiAgICAgICAgaWYgKCF0b0xvYWQucGVuZGluZy5sZW5ndGgpIGNhbGxiYWNrKCk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICB0b0xvYWQudG9Mb2FkLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgX3RoaXM0LmxvYWRPbmUobmFtZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwibG9hZFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsb2FkKGxhbmd1YWdlcywgbmFtZXNwYWNlcywgY2FsbGJhY2spIHtcbiAgICAgIHRoaXMucHJlcGFyZUxvYWRpbmcobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzLCB7fSwgY2FsbGJhY2spO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZWxvYWRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVsb2FkKGxhbmd1YWdlcywgbmFtZXNwYWNlcywgY2FsbGJhY2spIHtcbiAgICAgIHRoaXMucHJlcGFyZUxvYWRpbmcobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzLCB7XG4gICAgICAgIHJlbG9hZDogdHJ1ZVxuICAgICAgfSwgY2FsbGJhY2spO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2FkT25lXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWRPbmUobmFtZSkge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgIHZhciBwcmVmaXggPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnO1xuICAgICAgdmFyIHMgPSBuYW1lLnNwbGl0KCd8Jyk7XG4gICAgICB2YXIgbG5nID0gc1swXTtcbiAgICAgIHZhciBucyA9IHNbMV07XG4gICAgICB0aGlzLnJlYWQobG5nLCBucywgJ3JlYWQnLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICBpZiAoZXJyKSBfdGhpczUubG9nZ2VyLndhcm4oXCJcIi5jb25jYXQocHJlZml4LCBcImxvYWRpbmcgbmFtZXNwYWNlIFwiKS5jb25jYXQobnMsIFwiIGZvciBsYW5ndWFnZSBcIikuY29uY2F0KGxuZywgXCIgZmFpbGVkXCIpLCBlcnIpO1xuICAgICAgICBpZiAoIWVyciAmJiBkYXRhKSBfdGhpczUubG9nZ2VyLmxvZyhcIlwiLmNvbmNhdChwcmVmaXgsIFwibG9hZGVkIG5hbWVzcGFjZSBcIikuY29uY2F0KG5zLCBcIiBmb3IgbGFuZ3VhZ2UgXCIpLmNvbmNhdChsbmcpLCBkYXRhKTtcblxuICAgICAgICBfdGhpczUubG9hZGVkKG5hbWUsIGVyciwgZGF0YSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2F2ZU1pc3NpbmdcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2F2ZU1pc3NpbmcobGFuZ3VhZ2VzLCBuYW1lc3BhY2UsIGtleSwgZmFsbGJhY2tWYWx1ZSwgaXNVcGRhdGUpIHtcbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDUgJiYgYXJndW1lbnRzWzVdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNV0gOiB7fTtcblxuICAgICAgaWYgKHRoaXMuc2VydmljZXMudXRpbHMgJiYgdGhpcy5zZXJ2aWNlcy51dGlscy5oYXNMb2FkZWROYW1lc3BhY2UgJiYgIXRoaXMuc2VydmljZXMudXRpbHMuaGFzTG9hZGVkTmFtZXNwYWNlKG5hbWVzcGFjZSkpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIud2FybihcImRpZCBub3Qgc2F2ZSBrZXkgXFxcIlwiLmNvbmNhdChrZXksIFwiXFxcIiBhcyB0aGUgbmFtZXNwYWNlIFxcXCJcIikuY29uY2F0KG5hbWVzcGFjZSwgXCJcXFwiIHdhcyBub3QgeWV0IGxvYWRlZFwiKSwgJ1RoaXMgbWVhbnMgc29tZXRoaW5nIElTIFdST05HIGluIHlvdXIgc2V0dXAuIFlvdSBhY2Nlc3MgdGhlIHQgZnVuY3Rpb24gYmVmb3JlIGkxOG5leHQuaW5pdCAvIGkxOG5leHQubG9hZE5hbWVzcGFjZSAvIGkxOG5leHQuY2hhbmdlTGFuZ3VhZ2Ugd2FzIGRvbmUuIFdhaXQgZm9yIHRoZSBjYWxsYmFjayBvciBQcm9taXNlIHRvIHJlc29sdmUgYmVmb3JlIGFjY2Vzc2luZyBpdCEhIScpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChrZXkgPT09IHVuZGVmaW5lZCB8fCBrZXkgPT09IG51bGwgfHwga2V5ID09PSAnJykgcmV0dXJuO1xuXG4gICAgICBpZiAodGhpcy5iYWNrZW5kICYmIHRoaXMuYmFja2VuZC5jcmVhdGUpIHtcbiAgICAgICAgdGhpcy5iYWNrZW5kLmNyZWF0ZShsYW5ndWFnZXMsIG5hbWVzcGFjZSwga2V5LCBmYWxsYmFja1ZhbHVlLCBudWxsLCBfb2JqZWN0U3ByZWFkKHt9LCBvcHRpb25zLCB7XG4gICAgICAgICAgaXNVcGRhdGU6IGlzVXBkYXRlXG4gICAgICAgIH0pKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFsYW5ndWFnZXMgfHwgIWxhbmd1YWdlc1swXSkgcmV0dXJuO1xuICAgICAgdGhpcy5zdG9yZS5hZGRSZXNvdXJjZShsYW5ndWFnZXNbMF0sIG5hbWVzcGFjZSwga2V5LCBmYWxsYmFja1ZhbHVlKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ29ubmVjdG9yO1xufShFdmVudEVtaXR0ZXIpO1xuXG5mdW5jdGlvbiBnZXQoKSB7XG4gIHJldHVybiB7XG4gICAgZGVidWc6IGZhbHNlLFxuICAgIGluaXRJbW1lZGlhdGU6IHRydWUsXG4gICAgbnM6IFsndHJhbnNsYXRpb24nXSxcbiAgICBkZWZhdWx0TlM6IFsndHJhbnNsYXRpb24nXSxcbiAgICBmYWxsYmFja0xuZzogWydkZXYnXSxcbiAgICBmYWxsYmFja05TOiBmYWxzZSxcbiAgICB3aGl0ZWxpc3Q6IGZhbHNlLFxuICAgIG5vbkV4cGxpY2l0V2hpdGVsaXN0OiBmYWxzZSxcbiAgICBzdXBwb3J0ZWRMbmdzOiBmYWxzZSxcbiAgICBub25FeHBsaWNpdFN1cHBvcnRlZExuZ3M6IGZhbHNlLFxuICAgIGxvYWQ6ICdhbGwnLFxuICAgIHByZWxvYWQ6IGZhbHNlLFxuICAgIHNpbXBsaWZ5UGx1cmFsU3VmZml4OiB0cnVlLFxuICAgIGtleVNlcGFyYXRvcjogJy4nLFxuICAgIG5zU2VwYXJhdG9yOiAnOicsXG4gICAgcGx1cmFsU2VwYXJhdG9yOiAnXycsXG4gICAgY29udGV4dFNlcGFyYXRvcjogJ18nLFxuICAgIHBhcnRpYWxCdW5kbGVkTGFuZ3VhZ2VzOiBmYWxzZSxcbiAgICBzYXZlTWlzc2luZzogZmFsc2UsXG4gICAgdXBkYXRlTWlzc2luZzogZmFsc2UsXG4gICAgc2F2ZU1pc3NpbmdUbzogJ2ZhbGxiYWNrJyxcbiAgICBzYXZlTWlzc2luZ1BsdXJhbHM6IHRydWUsXG4gICAgbWlzc2luZ0tleUhhbmRsZXI6IGZhbHNlLFxuICAgIG1pc3NpbmdJbnRlcnBvbGF0aW9uSGFuZGxlcjogZmFsc2UsXG4gICAgcG9zdFByb2Nlc3M6IGZhbHNlLFxuICAgIHBvc3RQcm9jZXNzUGFzc1Jlc29sdmVkOiBmYWxzZSxcbiAgICByZXR1cm5OdWxsOiB0cnVlLFxuICAgIHJldHVybkVtcHR5U3RyaW5nOiB0cnVlLFxuICAgIHJldHVybk9iamVjdHM6IGZhbHNlLFxuICAgIGpvaW5BcnJheXM6IGZhbHNlLFxuICAgIHJldHVybmVkT2JqZWN0SGFuZGxlcjogZmFsc2UsXG4gICAgcGFyc2VNaXNzaW5nS2V5SGFuZGxlcjogZmFsc2UsXG4gICAgYXBwZW5kTmFtZXNwYWNlVG9NaXNzaW5nS2V5OiBmYWxzZSxcbiAgICBhcHBlbmROYW1lc3BhY2VUb0NJTW9kZTogZmFsc2UsXG4gICAgb3ZlcmxvYWRUcmFuc2xhdGlvbk9wdGlvbkhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZShhcmdzKSB7XG4gICAgICB2YXIgcmV0ID0ge307XG4gICAgICBpZiAoX3R5cGVvZihhcmdzWzFdKSA9PT0gJ29iamVjdCcpIHJldCA9IGFyZ3NbMV07XG4gICAgICBpZiAodHlwZW9mIGFyZ3NbMV0gPT09ICdzdHJpbmcnKSByZXQuZGVmYXVsdFZhbHVlID0gYXJnc1sxXTtcbiAgICAgIGlmICh0eXBlb2YgYXJnc1syXSA9PT0gJ3N0cmluZycpIHJldC50RGVzY3JpcHRpb24gPSBhcmdzWzJdO1xuXG4gICAgICBpZiAoX3R5cGVvZihhcmdzWzJdKSA9PT0gJ29iamVjdCcgfHwgX3R5cGVvZihhcmdzWzNdKSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSBhcmdzWzNdIHx8IGFyZ3NbMl07XG4gICAgICAgIE9iamVjdC5rZXlzKG9wdGlvbnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIHJldFtrZXldID0gb3B0aW9uc1trZXldO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJldDtcbiAgICB9LFxuICAgIGludGVycG9sYXRpb246IHtcbiAgICAgIGVzY2FwZVZhbHVlOiB0cnVlLFxuICAgICAgZm9ybWF0OiBmdW5jdGlvbiBmb3JtYXQodmFsdWUsIF9mb3JtYXQsIGxuZywgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9LFxuICAgICAgcHJlZml4OiAne3snLFxuICAgICAgc3VmZml4OiAnfX0nLFxuICAgICAgZm9ybWF0U2VwYXJhdG9yOiAnLCcsXG4gICAgICB1bmVzY2FwZVByZWZpeDogJy0nLFxuICAgICAgbmVzdGluZ1ByZWZpeDogJyR0KCcsXG4gICAgICBuZXN0aW5nU3VmZml4OiAnKScsXG4gICAgICBuZXN0aW5nT3B0aW9uc1NlcGFyYXRvcjogJywnLFxuICAgICAgbWF4UmVwbGFjZXM6IDEwMDAsXG4gICAgICBza2lwT25WYXJpYWJsZXM6IGZhbHNlXG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gdHJhbnNmb3JtT3B0aW9ucyhvcHRpb25zKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5ucyA9PT0gJ3N0cmluZycpIG9wdGlvbnMubnMgPSBbb3B0aW9ucy5uc107XG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5mYWxsYmFja0xuZyA9PT0gJ3N0cmluZycpIG9wdGlvbnMuZmFsbGJhY2tMbmcgPSBbb3B0aW9ucy5mYWxsYmFja0xuZ107XG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5mYWxsYmFja05TID09PSAnc3RyaW5nJykgb3B0aW9ucy5mYWxsYmFja05TID0gW29wdGlvbnMuZmFsbGJhY2tOU107XG5cbiAgaWYgKG9wdGlvbnMud2hpdGVsaXN0KSB7XG4gICAgaWYgKG9wdGlvbnMud2hpdGVsaXN0ICYmIG9wdGlvbnMud2hpdGVsaXN0LmluZGV4T2YoJ2NpbW9kZScpIDwgMCkge1xuICAgICAgb3B0aW9ucy53aGl0ZWxpc3QgPSBvcHRpb25zLndoaXRlbGlzdC5jb25jYXQoWydjaW1vZGUnXSk7XG4gICAgfVxuXG4gICAgb3B0aW9ucy5zdXBwb3J0ZWRMbmdzID0gb3B0aW9ucy53aGl0ZWxpc3Q7XG4gIH1cblxuICBpZiAob3B0aW9ucy5ub25FeHBsaWNpdFdoaXRlbGlzdCkge1xuICAgIG9wdGlvbnMubm9uRXhwbGljaXRTdXBwb3J0ZWRMbmdzID0gb3B0aW9ucy5ub25FeHBsaWNpdFdoaXRlbGlzdDtcbiAgfVxuXG4gIGlmIChvcHRpb25zLnN1cHBvcnRlZExuZ3MgJiYgb3B0aW9ucy5zdXBwb3J0ZWRMbmdzLmluZGV4T2YoJ2NpbW9kZScpIDwgMCkge1xuICAgIG9wdGlvbnMuc3VwcG9ydGVkTG5ncyA9IG9wdGlvbnMuc3VwcG9ydGVkTG5ncy5jb25jYXQoWydjaW1vZGUnXSk7XG4gIH1cblxuICByZXR1cm4gb3B0aW9ucztcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG5cbnZhciBJMThuID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKEkxOG4sIF9FdmVudEVtaXR0ZXIpO1xuXG4gIGZ1bmN0aW9uIEkxOG4oKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICAgIHZhciBjYWxsYmFjayA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEkxOG4pO1xuXG4gICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoSTE4bikuY2FsbCh0aGlzKSk7XG5cbiAgICBpZiAoaXNJRTEwKSB7XG4gICAgICBFdmVudEVtaXR0ZXIuY2FsbChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgfVxuXG4gICAgX3RoaXMub3B0aW9ucyA9IHRyYW5zZm9ybU9wdGlvbnMob3B0aW9ucyk7XG4gICAgX3RoaXMuc2VydmljZXMgPSB7fTtcbiAgICBfdGhpcy5sb2dnZXIgPSBiYXNlTG9nZ2VyO1xuICAgIF90aGlzLm1vZHVsZXMgPSB7XG4gICAgICBleHRlcm5hbDogW11cbiAgICB9O1xuXG4gICAgaWYgKGNhbGxiYWNrICYmICFfdGhpcy5pc0luaXRpYWxpemVkICYmICFvcHRpb25zLmlzQ2xvbmUpIHtcbiAgICAgIGlmICghX3RoaXMub3B0aW9ucy5pbml0SW1tZWRpYXRlKSB7XG4gICAgICAgIF90aGlzLmluaXQob3B0aW9ucywgY2FsbGJhY2spO1xuXG4gICAgICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgICAgfVxuXG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMuaW5pdChvcHRpb25zLCBjYWxsYmFjayk7XG4gICAgICB9LCAwKTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoSTE4biwgW3tcbiAgICBrZXk6IFwiaW5pdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgICAgIHZhciBjYWxsYmFjayA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY2FsbGJhY2sgPSBvcHRpb25zO1xuICAgICAgICBvcHRpb25zID0ge307XG4gICAgICB9XG5cbiAgICAgIGlmIChvcHRpb25zLndoaXRlbGlzdCAmJiAhb3B0aW9ucy5zdXBwb3J0ZWRMbmdzKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmRlcHJlY2F0ZSgnd2hpdGVsaXN0JywgJ29wdGlvbiBcIndoaXRlbGlzdFwiIHdpbGwgYmUgcmVuYW1lZCB0byBcInN1cHBvcnRlZExuZ3NcIiBpbiB0aGUgbmV4dCBtYWpvciAtIHBsZWFzZSBtYWtlIHN1cmUgdG8gcmVuYW1lIHRoaXMgb3B0aW9uIGFzYXAuJyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChvcHRpb25zLm5vbkV4cGxpY2l0V2hpdGVsaXN0ICYmICFvcHRpb25zLm5vbkV4cGxpY2l0U3VwcG9ydGVkTG5ncykge1xuICAgICAgICB0aGlzLmxvZ2dlci5kZXByZWNhdGUoJ3doaXRlbGlzdCcsICdvcHRpb25zIFwibm9uRXhwbGljaXRXaGl0ZWxpc3RcIiB3aWxsIGJlIHJlbmFtZWQgdG8gXCJub25FeHBsaWNpdFN1cHBvcnRlZExuZ3NcIiBpbiB0aGUgbmV4dCBtYWpvciAtIHBsZWFzZSBtYWtlIHN1cmUgdG8gcmVuYW1lIHRoaXMgb3B0aW9uIGFzYXAuJyk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMub3B0aW9ucyA9IF9vYmplY3RTcHJlYWQoe30sIGdldCgpLCB0aGlzLm9wdGlvbnMsIHRyYW5zZm9ybU9wdGlvbnMob3B0aW9ucykpO1xuICAgICAgdGhpcy5mb3JtYXQgPSB0aGlzLm9wdGlvbnMuaW50ZXJwb2xhdGlvbi5mb3JtYXQ7XG4gICAgICBpZiAoIWNhbGxiYWNrKSBjYWxsYmFjayA9IG5vb3A7XG5cbiAgICAgIGZ1bmN0aW9uIGNyZWF0ZUNsYXNzT25EZW1hbmQoQ2xhc3NPck9iamVjdCkge1xuICAgICAgICBpZiAoIUNsYXNzT3JPYmplY3QpIHJldHVybiBudWxsO1xuICAgICAgICBpZiAodHlwZW9mIENsYXNzT3JPYmplY3QgPT09ICdmdW5jdGlvbicpIHJldHVybiBuZXcgQ2xhc3NPck9iamVjdCgpO1xuICAgICAgICByZXR1cm4gQ2xhc3NPck9iamVjdDtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuaXNDbG9uZSkge1xuICAgICAgICBpZiAodGhpcy5tb2R1bGVzLmxvZ2dlcikge1xuICAgICAgICAgIGJhc2VMb2dnZXIuaW5pdChjcmVhdGVDbGFzc09uRGVtYW5kKHRoaXMubW9kdWxlcy5sb2dnZXIpLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGJhc2VMb2dnZXIuaW5pdChudWxsLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGx1ID0gbmV3IExhbmd1YWdlVXRpbCh0aGlzLm9wdGlvbnMpO1xuICAgICAgICB0aGlzLnN0b3JlID0gbmV3IFJlc291cmNlU3RvcmUodGhpcy5vcHRpb25zLnJlc291cmNlcywgdGhpcy5vcHRpb25zKTtcbiAgICAgICAgdmFyIHMgPSB0aGlzLnNlcnZpY2VzO1xuICAgICAgICBzLmxvZ2dlciA9IGJhc2VMb2dnZXI7XG4gICAgICAgIHMucmVzb3VyY2VTdG9yZSA9IHRoaXMuc3RvcmU7XG4gICAgICAgIHMubGFuZ3VhZ2VVdGlscyA9IGx1O1xuICAgICAgICBzLnBsdXJhbFJlc29sdmVyID0gbmV3IFBsdXJhbFJlc29sdmVyKGx1LCB7XG4gICAgICAgICAgcHJlcGVuZDogdGhpcy5vcHRpb25zLnBsdXJhbFNlcGFyYXRvcixcbiAgICAgICAgICBjb21wYXRpYmlsaXR5SlNPTjogdGhpcy5vcHRpb25zLmNvbXBhdGliaWxpdHlKU09OLFxuICAgICAgICAgIHNpbXBsaWZ5UGx1cmFsU3VmZml4OiB0aGlzLm9wdGlvbnMuc2ltcGxpZnlQbHVyYWxTdWZmaXhcbiAgICAgICAgfSk7XG4gICAgICAgIHMuaW50ZXJwb2xhdG9yID0gbmV3IEludGVycG9sYXRvcih0aGlzLm9wdGlvbnMpO1xuICAgICAgICBzLnV0aWxzID0ge1xuICAgICAgICAgIGhhc0xvYWRlZE5hbWVzcGFjZTogdGhpcy5oYXNMb2FkZWROYW1lc3BhY2UuYmluZCh0aGlzKVxuICAgICAgICB9O1xuICAgICAgICBzLmJhY2tlbmRDb25uZWN0b3IgPSBuZXcgQ29ubmVjdG9yKGNyZWF0ZUNsYXNzT25EZW1hbmQodGhpcy5tb2R1bGVzLmJhY2tlbmQpLCBzLnJlc291cmNlU3RvcmUsIHMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHMuYmFja2VuZENvbm5lY3Rvci5vbignKicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF90aGlzMi5lbWl0LmFwcGx5KF90aGlzMiwgW2V2ZW50XS5jb25jYXQoYXJncykpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAodGhpcy5tb2R1bGVzLmxhbmd1YWdlRGV0ZWN0b3IpIHtcbiAgICAgICAgICBzLmxhbmd1YWdlRGV0ZWN0b3IgPSBjcmVhdGVDbGFzc09uRGVtYW5kKHRoaXMubW9kdWxlcy5sYW5ndWFnZURldGVjdG9yKTtcbiAgICAgICAgICBzLmxhbmd1YWdlRGV0ZWN0b3IuaW5pdChzLCB0aGlzLm9wdGlvbnMuZGV0ZWN0aW9uLCB0aGlzLm9wdGlvbnMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMubW9kdWxlcy5pMThuRm9ybWF0KSB7XG4gICAgICAgICAgcy5pMThuRm9ybWF0ID0gY3JlYXRlQ2xhc3NPbkRlbWFuZCh0aGlzLm1vZHVsZXMuaTE4bkZvcm1hdCk7XG4gICAgICAgICAgaWYgKHMuaTE4bkZvcm1hdC5pbml0KSBzLmkxOG5Gb3JtYXQuaW5pdCh0aGlzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudHJhbnNsYXRvciA9IG5ldyBUcmFuc2xhdG9yKHRoaXMuc2VydmljZXMsIHRoaXMub3B0aW9ucyk7XG4gICAgICAgIHRoaXMudHJhbnNsYXRvci5vbignKicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMiA+IDEgPyBfbGVuMiAtIDEgOiAwKSwgX2tleTIgPSAxOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgICAgICBhcmdzW19rZXkyIC0gMV0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF90aGlzMi5lbWl0LmFwcGx5KF90aGlzMiwgW2V2ZW50XS5jb25jYXQoYXJncykpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5tb2R1bGVzLmV4dGVybmFsLmZvckVhY2goZnVuY3Rpb24gKG0pIHtcbiAgICAgICAgICBpZiAobS5pbml0KSBtLmluaXQoX3RoaXMyKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuZmFsbGJhY2tMbmcgJiYgIXRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3RvciAmJiAhdGhpcy5vcHRpb25zLmxuZykge1xuICAgICAgICB2YXIgY29kZXMgPSB0aGlzLnNlcnZpY2VzLmxhbmd1YWdlVXRpbHMuZ2V0RmFsbGJhY2tDb2Rlcyh0aGlzLm9wdGlvbnMuZmFsbGJhY2tMbmcpO1xuICAgICAgICBpZiAoY29kZXMubGVuZ3RoID4gMCAmJiBjb2Rlc1swXSAhPT0gJ2RldicpIHRoaXMub3B0aW9ucy5sbmcgPSBjb2Rlc1swXTtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IgJiYgIXRoaXMub3B0aW9ucy5sbmcpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIud2FybignaW5pdDogbm8gbGFuZ3VhZ2VEZXRlY3RvciBpcyB1c2VkIGFuZCBubyBsbmcgaXMgZGVmaW5lZCcpO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3RvcmVBcGkgPSBbJ2dldFJlc291cmNlJywgJ2hhc1Jlc291cmNlQnVuZGxlJywgJ2dldFJlc291cmNlQnVuZGxlJywgJ2dldERhdGFCeUxhbmd1YWdlJ107XG4gICAgICBzdG9yZUFwaS5mb3JFYWNoKGZ1bmN0aW9uIChmY05hbWUpIHtcbiAgICAgICAgX3RoaXMyW2ZjTmFtZV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIF90aGlzMiRzdG9yZTtcblxuICAgICAgICAgIHJldHVybiAoX3RoaXMyJHN0b3JlID0gX3RoaXMyLnN0b3JlKVtmY05hbWVdLmFwcGx5KF90aGlzMiRzdG9yZSwgYXJndW1lbnRzKTtcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgICAgdmFyIHN0b3JlQXBpQ2hhaW5lZCA9IFsnYWRkUmVzb3VyY2UnLCAnYWRkUmVzb3VyY2VzJywgJ2FkZFJlc291cmNlQnVuZGxlJywgJ3JlbW92ZVJlc291cmNlQnVuZGxlJ107XG4gICAgICBzdG9yZUFwaUNoYWluZWQuZm9yRWFjaChmdW5jdGlvbiAoZmNOYW1lKSB7XG4gICAgICAgIF90aGlzMltmY05hbWVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHZhciBfdGhpczIkc3RvcmUyO1xuXG4gICAgICAgICAgKF90aGlzMiRzdG9yZTIgPSBfdGhpczIuc3RvcmUpW2ZjTmFtZV0uYXBwbHkoX3RoaXMyJHN0b3JlMiwgYXJndW1lbnRzKTtcblxuICAgICAgICAgIHJldHVybiBfdGhpczI7XG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICAgIHZhciBkZWZlcnJlZCA9IGRlZmVyKCk7XG5cbiAgICAgIHZhciBsb2FkID0gZnVuY3Rpb24gbG9hZCgpIHtcbiAgICAgICAgdmFyIGZpbmlzaCA9IGZ1bmN0aW9uIGZpbmlzaChlcnIsIHQpIHtcbiAgICAgICAgICBpZiAoX3RoaXMyLmlzSW5pdGlhbGl6ZWQpIF90aGlzMi5sb2dnZXIud2FybignaW5pdDogaTE4bmV4dCBpcyBhbHJlYWR5IGluaXRpYWxpemVkLiBZb3Ugc2hvdWxkIGNhbGwgaW5pdCBqdXN0IG9uY2UhJyk7XG4gICAgICAgICAgX3RoaXMyLmlzSW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgIGlmICghX3RoaXMyLm9wdGlvbnMuaXNDbG9uZSkgX3RoaXMyLmxvZ2dlci5sb2coJ2luaXRpYWxpemVkJywgX3RoaXMyLm9wdGlvbnMpO1xuXG4gICAgICAgICAgX3RoaXMyLmVtaXQoJ2luaXRpYWxpemVkJywgX3RoaXMyLm9wdGlvbnMpO1xuXG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSh0KTtcbiAgICAgICAgICBjYWxsYmFjayhlcnIsIHQpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChfdGhpczIubGFuZ3VhZ2VzICYmIF90aGlzMi5vcHRpb25zLmNvbXBhdGliaWxpdHlBUEkgIT09ICd2MScgJiYgIV90aGlzMi5pc0luaXRpYWxpemVkKSByZXR1cm4gZmluaXNoKG51bGwsIF90aGlzMi50LmJpbmQoX3RoaXMyKSk7XG5cbiAgICAgICAgX3RoaXMyLmNoYW5nZUxhbmd1YWdlKF90aGlzMi5vcHRpb25zLmxuZywgZmluaXNoKTtcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMucmVzb3VyY2VzIHx8ICF0aGlzLm9wdGlvbnMuaW5pdEltbWVkaWF0ZSkge1xuICAgICAgICBsb2FkKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRUaW1lb3V0KGxvYWQsIDApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGVmZXJyZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImxvYWRSZXNvdXJjZXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZFJlc291cmNlcyhsYW5ndWFnZSkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciBjYWxsYmFjayA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogbm9vcDtcbiAgICAgIHZhciB1c2VkQ2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgIHZhciB1c2VkTG5nID0gdHlwZW9mIGxhbmd1YWdlID09PSAnc3RyaW5nJyA/IGxhbmd1YWdlIDogdGhpcy5sYW5ndWFnZTtcbiAgICAgIGlmICh0eXBlb2YgbGFuZ3VhZ2UgPT09ICdmdW5jdGlvbicpIHVzZWRDYWxsYmFjayA9IGxhbmd1YWdlO1xuXG4gICAgICBpZiAoIXRoaXMub3B0aW9ucy5yZXNvdXJjZXMgfHwgdGhpcy5vcHRpb25zLnBhcnRpYWxCdW5kbGVkTGFuZ3VhZ2VzKSB7XG4gICAgICAgIGlmICh1c2VkTG5nICYmIHVzZWRMbmcudG9Mb3dlckNhc2UoKSA9PT0gJ2NpbW9kZScpIHJldHVybiB1c2VkQ2FsbGJhY2soKTtcbiAgICAgICAgdmFyIHRvTG9hZCA9IFtdO1xuXG4gICAgICAgIHZhciBhcHBlbmQgPSBmdW5jdGlvbiBhcHBlbmQobG5nKSB7XG4gICAgICAgICAgaWYgKCFsbmcpIHJldHVybjtcblxuICAgICAgICAgIHZhciBsbmdzID0gX3RoaXMzLnNlcnZpY2VzLmxhbmd1YWdlVXRpbHMudG9SZXNvbHZlSGllcmFyY2h5KGxuZyk7XG5cbiAgICAgICAgICBsbmdzLmZvckVhY2goZnVuY3Rpb24gKGwpIHtcbiAgICAgICAgICAgIGlmICh0b0xvYWQuaW5kZXhPZihsKSA8IDApIHRvTG9hZC5wdXNoKGwpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIGlmICghdXNlZExuZykge1xuICAgICAgICAgIHZhciBmYWxsYmFja3MgPSB0aGlzLnNlcnZpY2VzLmxhbmd1YWdlVXRpbHMuZ2V0RmFsbGJhY2tDb2Rlcyh0aGlzLm9wdGlvbnMuZmFsbGJhY2tMbmcpO1xuICAgICAgICAgIGZhbGxiYWNrcy5mb3JFYWNoKGZ1bmN0aW9uIChsKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBwZW5kKGwpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFwcGVuZCh1c2VkTG5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMucHJlbG9hZCkge1xuICAgICAgICAgIHRoaXMub3B0aW9ucy5wcmVsb2FkLmZvckVhY2goZnVuY3Rpb24gKGwpIHtcbiAgICAgICAgICAgIHJldHVybiBhcHBlbmQobCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNlcnZpY2VzLmJhY2tlbmRDb25uZWN0b3IubG9hZCh0b0xvYWQsIHRoaXMub3B0aW9ucy5ucywgdXNlZENhbGxiYWNrKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHVzZWRDYWxsYmFjayhudWxsKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVsb2FkUmVzb3VyY2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbG9hZFJlc291cmNlcyhsbmdzLCBucywgY2FsbGJhY2spIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9IGRlZmVyKCk7XG4gICAgICBpZiAoIWxuZ3MpIGxuZ3MgPSB0aGlzLmxhbmd1YWdlcztcbiAgICAgIGlmICghbnMpIG5zID0gdGhpcy5vcHRpb25zLm5zO1xuICAgICAgaWYgKCFjYWxsYmFjaykgY2FsbGJhY2sgPSBub29wO1xuICAgICAgdGhpcy5zZXJ2aWNlcy5iYWNrZW5kQ29ubmVjdG9yLnJlbG9hZChsbmdzLCBucywgZnVuY3Rpb24gKGVycikge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKCk7XG4gICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidXNlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVzZShtb2R1bGUpIHtcbiAgICAgIGlmICghbW9kdWxlKSB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBhcmUgcGFzc2luZyBhbiB1bmRlZmluZWQgbW9kdWxlISBQbGVhc2UgY2hlY2sgdGhlIG9iamVjdCB5b3UgYXJlIHBhc3NpbmcgdG8gaTE4bmV4dC51c2UoKScpO1xuICAgICAgaWYgKCFtb2R1bGUudHlwZSkgdGhyb3cgbmV3IEVycm9yKCdZb3UgYXJlIHBhc3NpbmcgYSB3cm9uZyBtb2R1bGUhIFBsZWFzZSBjaGVjayB0aGUgb2JqZWN0IHlvdSBhcmUgcGFzc2luZyB0byBpMThuZXh0LnVzZSgpJyk7XG5cbiAgICAgIGlmIChtb2R1bGUudHlwZSA9PT0gJ2JhY2tlbmQnKSB7XG4gICAgICAgIHRoaXMubW9kdWxlcy5iYWNrZW5kID0gbW9kdWxlO1xuICAgICAgfVxuXG4gICAgICBpZiAobW9kdWxlLnR5cGUgPT09ICdsb2dnZXInIHx8IG1vZHVsZS5sb2cgJiYgbW9kdWxlLndhcm4gJiYgbW9kdWxlLmVycm9yKSB7XG4gICAgICAgIHRoaXMubW9kdWxlcy5sb2dnZXIgPSBtb2R1bGU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtb2R1bGUudHlwZSA9PT0gJ2xhbmd1YWdlRGV0ZWN0b3InKSB7XG4gICAgICAgIHRoaXMubW9kdWxlcy5sYW5ndWFnZURldGVjdG9yID0gbW9kdWxlO1xuICAgICAgfVxuXG4gICAgICBpZiAobW9kdWxlLnR5cGUgPT09ICdpMThuRm9ybWF0Jykge1xuICAgICAgICB0aGlzLm1vZHVsZXMuaTE4bkZvcm1hdCA9IG1vZHVsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1vZHVsZS50eXBlID09PSAncG9zdFByb2Nlc3NvcicpIHtcbiAgICAgICAgcG9zdFByb2Nlc3Nvci5hZGRQb3N0UHJvY2Vzc29yKG1vZHVsZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChtb2R1bGUudHlwZSA9PT0gJzNyZFBhcnR5Jykge1xuICAgICAgICB0aGlzLm1vZHVsZXMuZXh0ZXJuYWwucHVzaChtb2R1bGUpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY2hhbmdlTGFuZ3VhZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2hhbmdlTGFuZ3VhZ2UobG5nLCBjYWxsYmFjaykge1xuICAgICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICAgIHRoaXMuaXNMYW5ndWFnZUNoYW5naW5nVG8gPSBsbmc7XG4gICAgICB2YXIgZGVmZXJyZWQgPSBkZWZlcigpO1xuICAgICAgdGhpcy5lbWl0KCdsYW5ndWFnZUNoYW5naW5nJywgbG5nKTtcblxuICAgICAgdmFyIGRvbmUgPSBmdW5jdGlvbiBkb25lKGVyciwgbCkge1xuICAgICAgICBpZiAobCkge1xuICAgICAgICAgIF90aGlzNC5sYW5ndWFnZSA9IGw7XG4gICAgICAgICAgX3RoaXM0Lmxhbmd1YWdlcyA9IF90aGlzNC5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzLnRvUmVzb2x2ZUhpZXJhcmNoeShsKTtcblxuICAgICAgICAgIF90aGlzNC50cmFuc2xhdG9yLmNoYW5nZUxhbmd1YWdlKGwpO1xuXG4gICAgICAgICAgX3RoaXM0LmlzTGFuZ3VhZ2VDaGFuZ2luZ1RvID0gdW5kZWZpbmVkO1xuXG4gICAgICAgICAgX3RoaXM0LmVtaXQoJ2xhbmd1YWdlQ2hhbmdlZCcsIGwpO1xuXG4gICAgICAgICAgX3RoaXM0LmxvZ2dlci5sb2coJ2xhbmd1YWdlQ2hhbmdlZCcsIGwpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF90aGlzNC5pc0xhbmd1YWdlQ2hhbmdpbmdUbyA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczQudC5hcHBseShfdGhpczQsIGFyZ3VtZW50cyk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoY2FsbGJhY2spIGNhbGxiYWNrKGVyciwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczQudC5hcHBseShfdGhpczQsIGFyZ3VtZW50cyk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgdmFyIHNldExuZyA9IGZ1bmN0aW9uIHNldExuZyhsbmdzKSB7XG4gICAgICAgIHZhciBsID0gdHlwZW9mIGxuZ3MgPT09ICdzdHJpbmcnID8gbG5ncyA6IF90aGlzNC5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzLmdldEJlc3RNYXRjaEZyb21Db2RlcyhsbmdzKTtcblxuICAgICAgICBpZiAobCkge1xuICAgICAgICAgIGlmICghX3RoaXM0Lmxhbmd1YWdlKSB7XG4gICAgICAgICAgICBfdGhpczQubGFuZ3VhZ2UgPSBsO1xuICAgICAgICAgICAgX3RoaXM0Lmxhbmd1YWdlcyA9IF90aGlzNC5zZXJ2aWNlcy5sYW5ndWFnZVV0aWxzLnRvUmVzb2x2ZUhpZXJhcmNoeShsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoIV90aGlzNC50cmFuc2xhdG9yLmxhbmd1YWdlKSBfdGhpczQudHJhbnNsYXRvci5jaGFuZ2VMYW5ndWFnZShsKTtcbiAgICAgICAgICBpZiAoX3RoaXM0LnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IpIF90aGlzNC5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yLmNhY2hlVXNlckxhbmd1YWdlKGwpO1xuICAgICAgICB9XG5cbiAgICAgICAgX3RoaXM0LmxvYWRSZXNvdXJjZXMobCwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgIGRvbmUoZXJyLCBsKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICBpZiAoIWxuZyAmJiB0aGlzLnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IgJiYgIXRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3Rvci5hc3luYykge1xuICAgICAgICBzZXRMbmcodGhpcy5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yLmRldGVjdCgpKTtcbiAgICAgIH0gZWxzZSBpZiAoIWxuZyAmJiB0aGlzLnNlcnZpY2VzLmxhbmd1YWdlRGV0ZWN0b3IgJiYgdGhpcy5zZXJ2aWNlcy5sYW5ndWFnZURldGVjdG9yLmFzeW5jKSB7XG4gICAgICAgIHRoaXMuc2VydmljZXMubGFuZ3VhZ2VEZXRlY3Rvci5kZXRlY3Qoc2V0TG5nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldExuZyhsbmcpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGVmZXJyZWQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEZpeGVkVFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGaXhlZFQobG5nLCBucykge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgIHZhciBmaXhlZFQgPSBmdW5jdGlvbiBmaXhlZFQoa2V5LCBvcHRzKSB7XG4gICAgICAgIHZhciBvcHRpb25zO1xuXG4gICAgICAgIGlmIChfdHlwZW9mKG9wdHMpICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgIGZvciAodmFyIF9sZW4zID0gYXJndW1lbnRzLmxlbmd0aCwgcmVzdCA9IG5ldyBBcnJheShfbGVuMyA+IDIgPyBfbGVuMyAtIDIgOiAwKSwgX2tleTMgPSAyOyBfa2V5MyA8IF9sZW4zOyBfa2V5MysrKSB7XG4gICAgICAgICAgICByZXN0W19rZXkzIC0gMl0gPSBhcmd1bWVudHNbX2tleTNdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIG9wdGlvbnMgPSBfdGhpczUub3B0aW9ucy5vdmVybG9hZFRyYW5zbGF0aW9uT3B0aW9uSGFuZGxlcihba2V5LCBvcHRzXS5jb25jYXQocmVzdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG9wdGlvbnMgPSBfb2JqZWN0U3ByZWFkKHt9LCBvcHRzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIG9wdGlvbnMubG5nID0gb3B0aW9ucy5sbmcgfHwgZml4ZWRULmxuZztcbiAgICAgICAgb3B0aW9ucy5sbmdzID0gb3B0aW9ucy5sbmdzIHx8IGZpeGVkVC5sbmdzO1xuICAgICAgICBvcHRpb25zLm5zID0gb3B0aW9ucy5ucyB8fCBmaXhlZFQubnM7XG4gICAgICAgIHJldHVybiBfdGhpczUudChrZXksIG9wdGlvbnMpO1xuICAgICAgfTtcblxuICAgICAgaWYgKHR5cGVvZiBsbmcgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGZpeGVkVC5sbmcgPSBsbmc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmaXhlZFQubG5ncyA9IGxuZztcbiAgICAgIH1cblxuICAgICAgZml4ZWRULm5zID0gbnM7XG4gICAgICByZXR1cm4gZml4ZWRUO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHQoKSB7XG4gICAgICB2YXIgX3RoaXMkdHJhbnNsYXRvcjtcblxuICAgICAgcmV0dXJuIHRoaXMudHJhbnNsYXRvciAmJiAoX3RoaXMkdHJhbnNsYXRvciA9IHRoaXMudHJhbnNsYXRvcikudHJhbnNsYXRlLmFwcGx5KF90aGlzJHRyYW5zbGF0b3IsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImV4aXN0c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBleGlzdHMoKSB7XG4gICAgICB2YXIgX3RoaXMkdHJhbnNsYXRvcjI7XG5cbiAgICAgIHJldHVybiB0aGlzLnRyYW5zbGF0b3IgJiYgKF90aGlzJHRyYW5zbGF0b3IyID0gdGhpcy50cmFuc2xhdG9yKS5leGlzdHMuYXBwbHkoX3RoaXMkdHJhbnNsYXRvcjIsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldERlZmF1bHROYW1lc3BhY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0RGVmYXVsdE5hbWVzcGFjZShucykge1xuICAgICAgdGhpcy5vcHRpb25zLmRlZmF1bHROUyA9IG5zO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYXNMb2FkZWROYW1lc3BhY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzTG9hZGVkTmFtZXNwYWNlKG5zKSB7XG4gICAgICB2YXIgX3RoaXM2ID0gdGhpcztcblxuICAgICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gICAgICBpZiAoIXRoaXMuaXNJbml0aWFsaXplZCkge1xuICAgICAgICB0aGlzLmxvZ2dlci53YXJuKCdoYXNMb2FkZWROYW1lc3BhY2U6IGkxOG5leHQgd2FzIG5vdCBpbml0aWFsaXplZCcsIHRoaXMubGFuZ3VhZ2VzKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMubGFuZ3VhZ2VzIHx8ICF0aGlzLmxhbmd1YWdlcy5sZW5ndGgpIHtcbiAgICAgICAgdGhpcy5sb2dnZXIud2FybignaGFzTG9hZGVkTmFtZXNwYWNlOiBpMThuLmxhbmd1YWdlcyB3ZXJlIHVuZGVmaW5lZCBvciBlbXB0eScsIHRoaXMubGFuZ3VhZ2VzKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICB2YXIgbG5nID0gdGhpcy5sYW5ndWFnZXNbMF07XG4gICAgICB2YXIgZmFsbGJhY2tMbmcgPSB0aGlzLm9wdGlvbnMgPyB0aGlzLm9wdGlvbnMuZmFsbGJhY2tMbmcgOiBmYWxzZTtcbiAgICAgIHZhciBsYXN0TG5nID0gdGhpcy5sYW5ndWFnZXNbdGhpcy5sYW5ndWFnZXMubGVuZ3RoIC0gMV07XG4gICAgICBpZiAobG5nLnRvTG93ZXJDYXNlKCkgPT09ICdjaW1vZGUnKSByZXR1cm4gdHJ1ZTtcblxuICAgICAgdmFyIGxvYWROb3RQZW5kaW5nID0gZnVuY3Rpb24gbG9hZE5vdFBlbmRpbmcobCwgbikge1xuICAgICAgICB2YXIgbG9hZFN0YXRlID0gX3RoaXM2LnNlcnZpY2VzLmJhY2tlbmRDb25uZWN0b3Iuc3RhdGVbXCJcIi5jb25jYXQobCwgXCJ8XCIpLmNvbmNhdChuKV07XG5cbiAgICAgICAgcmV0dXJuIGxvYWRTdGF0ZSA9PT0gLTEgfHwgbG9hZFN0YXRlID09PSAyO1xuICAgICAgfTtcblxuICAgICAgaWYgKG9wdGlvbnMucHJlY2hlY2spIHtcbiAgICAgICAgdmFyIHByZVJlc3VsdCA9IG9wdGlvbnMucHJlY2hlY2sodGhpcywgbG9hZE5vdFBlbmRpbmcpO1xuICAgICAgICBpZiAocHJlUmVzdWx0ICE9PSB1bmRlZmluZWQpIHJldHVybiBwcmVSZXN1bHQ7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLmhhc1Jlc291cmNlQnVuZGxlKGxuZywgbnMpKSByZXR1cm4gdHJ1ZTtcbiAgICAgIGlmICghdGhpcy5zZXJ2aWNlcy5iYWNrZW5kQ29ubmVjdG9yLmJhY2tlbmQpIHJldHVybiB0cnVlO1xuICAgICAgaWYgKGxvYWROb3RQZW5kaW5nKGxuZywgbnMpICYmICghZmFsbGJhY2tMbmcgfHwgbG9hZE5vdFBlbmRpbmcobGFzdExuZywgbnMpKSkgcmV0dXJuIHRydWU7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImxvYWROYW1lc3BhY2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWROYW1lc3BhY2VzKG5zLCBjYWxsYmFjaykge1xuICAgICAgdmFyIF90aGlzNyA9IHRoaXM7XG5cbiAgICAgIHZhciBkZWZlcnJlZCA9IGRlZmVyKCk7XG5cbiAgICAgIGlmICghdGhpcy5vcHRpb25zLm5zKSB7XG4gICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBucyA9PT0gJ3N0cmluZycpIG5zID0gW25zXTtcbiAgICAgIG5zLmZvckVhY2goZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgaWYgKF90aGlzNy5vcHRpb25zLm5zLmluZGV4T2YobikgPCAwKSBfdGhpczcub3B0aW9ucy5ucy5wdXNoKG4pO1xuICAgICAgfSk7XG4gICAgICB0aGlzLmxvYWRSZXNvdXJjZXMoZnVuY3Rpb24gKGVycikge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKCk7XG4gICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2soZXJyKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJsb2FkTGFuZ3VhZ2VzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxvYWRMYW5ndWFnZXMobG5ncywgY2FsbGJhY2spIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9IGRlZmVyKCk7XG4gICAgICBpZiAodHlwZW9mIGxuZ3MgPT09ICdzdHJpbmcnKSBsbmdzID0gW2xuZ3NdO1xuICAgICAgdmFyIHByZWxvYWRlZCA9IHRoaXMub3B0aW9ucy5wcmVsb2FkIHx8IFtdO1xuICAgICAgdmFyIG5ld0xuZ3MgPSBsbmdzLmZpbHRlcihmdW5jdGlvbiAobG5nKSB7XG4gICAgICAgIHJldHVybiBwcmVsb2FkZWQuaW5kZXhPZihsbmcpIDwgMDtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoIW5ld0xuZ3MubGVuZ3RoKSB7XG4gICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2soKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLm9wdGlvbnMucHJlbG9hZCA9IHByZWxvYWRlZC5jb25jYXQobmV3TG5ncyk7XG4gICAgICB0aGlzLmxvYWRSZXNvdXJjZXMoZnVuY3Rpb24gKGVycikge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKCk7XG4gICAgICAgIGlmIChjYWxsYmFjaykgY2FsbGJhY2soZXJyKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkaXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGlyKGxuZykge1xuICAgICAgaWYgKCFsbmcpIGxuZyA9IHRoaXMubGFuZ3VhZ2VzICYmIHRoaXMubGFuZ3VhZ2VzLmxlbmd0aCA+IDAgPyB0aGlzLmxhbmd1YWdlc1swXSA6IHRoaXMubGFuZ3VhZ2U7XG4gICAgICBpZiAoIWxuZykgcmV0dXJuICdydGwnO1xuICAgICAgdmFyIHJ0bExuZ3MgPSBbJ2FyJywgJ3NodScsICdzcXInLCAnc3NoJywgJ3hhYScsICd5aGQnLCAneXVkJywgJ2FhbycsICdhYmgnLCAnYWJ2JywgJ2FjbScsICdhY3EnLCAnYWN3JywgJ2FjeCcsICdhY3knLCAnYWRmJywgJ2FkcycsICdhZWInLCAnYWVjJywgJ2FmYicsICdhanAnLCAnYXBjJywgJ2FwZCcsICdhcmInLCAnYXJxJywgJ2FycycsICdhcnknLCAnYXJ6JywgJ2F1eicsICdhdmwnLCAnYXloJywgJ2F5bCcsICdheW4nLCAnYXlwJywgJ2JieicsICdwZ2EnLCAnaGUnLCAnaXcnLCAncHMnLCAncGJ0JywgJ3BidScsICdwc3QnLCAncHJwJywgJ3ByZCcsICd1ZycsICd1cicsICd5ZGQnLCAneWRzJywgJ3lpaCcsICdqaScsICd5aScsICdoYm8nLCAnbWVuJywgJ3htbicsICdmYScsICdqcHInLCAncGVvJywgJ3BlcycsICdwcnMnLCAnZHYnLCAnc2FtJ107XG4gICAgICByZXR1cm4gcnRsTG5ncy5pbmRleE9mKHRoaXMuc2VydmljZXMubGFuZ3VhZ2VVdGlscy5nZXRMYW5ndWFnZVBhcnRGcm9tQ29kZShsbmcpKSA+PSAwID8gJ3J0bCcgOiAnbHRyJztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY3JlYXRlSW5zdGFuY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICAgIHJldHVybiBuZXcgSTE4bihvcHRpb25zLCBjYWxsYmFjayk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNsb25lSW5zdGFuY2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xvbmVJbnN0YW5jZSgpIHtcbiAgICAgIHZhciBfdGhpczggPSB0aGlzO1xuXG4gICAgICB2YXIgb3B0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gICAgICB2YXIgY2FsbGJhY2sgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IG5vb3A7XG5cbiAgICAgIHZhciBtZXJnZWRPcHRpb25zID0gX29iamVjdFNwcmVhZCh7fSwgdGhpcy5vcHRpb25zLCBvcHRpb25zLCB7XG4gICAgICAgIGlzQ2xvbmU6IHRydWVcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgY2xvbmUgPSBuZXcgSTE4bihtZXJnZWRPcHRpb25zKTtcbiAgICAgIHZhciBtZW1iZXJzVG9Db3B5ID0gWydzdG9yZScsICdzZXJ2aWNlcycsICdsYW5ndWFnZSddO1xuICAgICAgbWVtYmVyc1RvQ29weS5mb3JFYWNoKGZ1bmN0aW9uIChtKSB7XG4gICAgICAgIGNsb25lW21dID0gX3RoaXM4W21dO1xuICAgICAgfSk7XG4gICAgICBjbG9uZS5zZXJ2aWNlcyA9IF9vYmplY3RTcHJlYWQoe30sIHRoaXMuc2VydmljZXMpO1xuICAgICAgY2xvbmUuc2VydmljZXMudXRpbHMgPSB7XG4gICAgICAgIGhhc0xvYWRlZE5hbWVzcGFjZTogY2xvbmUuaGFzTG9hZGVkTmFtZXNwYWNlLmJpbmQoY2xvbmUpXG4gICAgICB9O1xuICAgICAgY2xvbmUudHJhbnNsYXRvciA9IG5ldyBUcmFuc2xhdG9yKGNsb25lLnNlcnZpY2VzLCBjbG9uZS5vcHRpb25zKTtcbiAgICAgIGNsb25lLnRyYW5zbGF0b3Iub24oJyonLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgZm9yICh2YXIgX2xlbjQgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW40ID4gMSA/IF9sZW40IC0gMSA6IDApLCBfa2V5NCA9IDE7IF9rZXk0IDwgX2xlbjQ7IF9rZXk0KyspIHtcbiAgICAgICAgICBhcmdzW19rZXk0IC0gMV0gPSBhcmd1bWVudHNbX2tleTRdO1xuICAgICAgICB9XG5cbiAgICAgICAgY2xvbmUuZW1pdC5hcHBseShjbG9uZSwgW2V2ZW50XS5jb25jYXQoYXJncykpO1xuICAgICAgfSk7XG4gICAgICBjbG9uZS5pbml0KG1lcmdlZE9wdGlvbnMsIGNhbGxiYWNrKTtcbiAgICAgIGNsb25lLnRyYW5zbGF0b3Iub3B0aW9ucyA9IGNsb25lLm9wdGlvbnM7XG4gICAgICBjbG9uZS50cmFuc2xhdG9yLmJhY2tlbmRDb25uZWN0b3Iuc2VydmljZXMudXRpbHMgPSB7XG4gICAgICAgIGhhc0xvYWRlZE5hbWVzcGFjZTogY2xvbmUuaGFzTG9hZGVkTmFtZXNwYWNlLmJpbmQoY2xvbmUpXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGNsb25lO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBJMThuO1xufShFdmVudEVtaXR0ZXIpO1xuXG52YXIgaTE4bmV4dCA9IG5ldyBJMThuKCk7XG5cbmV4cG9ydCBkZWZhdWx0IGkxOG5leHQ7XG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuY29uc3QgbGFuZ3VhZ2VzID0gWydlbicsICd2aSddO1xyXG5jb25zdCBuYW1lc3BhY2VzID0gWydicm93c2UnLCAnaGVhZGVyJywgJ2NvdXJzZScsICdwb3B1cCddO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYnVpbGRSZXNvdXJjZXMobGFuZ3VhZ2VzLCBuYW1lc3BhY2VzKTtcclxuXHJcblxyXG5mdW5jdGlvbiBidWlsZFJlc291cmNlcyhsYW5ndWFnZXMsIG5hbWVzcGFjZXMpIHtcclxuICBjb25zdCByZXNvdXJjZXMgPSB7fTtcclxuICBsYW5ndWFnZXMuZm9yRWFjaChsYW5nID0+IHtcclxuICAgIHJlc291cmNlc1tsYW5nXSA9IHt9O1xyXG4gICAgbmFtZXNwYWNlcy5mb3JFYWNoKG5zID0+IHtcclxuICAgICAgcmVzb3VyY2VzW2xhbmddW25zXSA9IHJlcXVpcmUoYC4vJHtsYW5nfS8ke25zfS5qc29uYCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxuICByZXR1cm4gcmVzb3VyY2VzO1xyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgaTE4biBmcm9tIFwiaTE4bmV4dFwiO1xyXG5pbXBvcnQgeyBpbml0UmVhY3RJMThuZXh0IH0gZnJvbSBcInJlYWN0LWkxOG5leHRcIjtcclxuaW1wb3J0IHJlc291cmNlcyBmcm9tICcuL3Jlc291cmNlcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgX19sYW5ndWFnZTogJ2VuJyxcclxuXHJcbiAgc2V0TGFuZ3VhZ2UobGFuZ3VhZ2UpIHtcclxuICAgIGlmIChsYW5ndWFnZSkgeyB0aGlzLl9fbGFuZ3VhZ2UgPSBsYW5ndWFnZTsgfVxyXG4gICAgcmV0dXJuIHRoaXM7XHJcbiAgfSxcclxuXHJcbiAgaW5pdCgpIHtcclxuICAgIGkxOG5cclxuICAgIC51c2UoaW5pdFJlYWN0STE4bmV4dCkgLy8gcGFzc2VzIGkxOG4gZG93biB0byByZWFjdC1pMThuZXh0XHJcbiAgICAuaW5pdCh7XHJcbiAgICAgIHJlc291cmNlcyxcclxuICAgICAgbG5nOiB0aGlzLl9fbGFuZ3VhZ2UsXHJcbiAgICAgIGZhbGxiYWNrTG5nOiBcImVuXCIsXHJcbiAgICAgIGludGVycG9sYXRpb246IHsgZXNjYXBlVmFsdWU6IGZhbHNlIH1cclxuICAgIH0pO1xyXG4gIH0sXHJcblxyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gbWFwQ291cnNlTGV2ZWxUb1N0cmluZyhsZXZlbCkge1xyXG4gIGNvbnN0IG1hcHBlciA9IFsnRm91bmRhdGlvbicsICdBZHZhbmNlZCcsICdNYXN0ZXInXTtcclxuICByZXR1cm4gbWFwcGVyW2xldmVsIC0gMV07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb3Vyc2VMZXZlbEluZGljYXRvcihsZXZlbCkge1xyXG4gIHJldHVybiBbZmFsc2UsIGZhbHNlLCBmYWxzZV0ubWFwKChfLCBpbmRleCkgPT4gKGluZGV4ID09PSBsZXZlbCAtIDEpPyB0cnVlIDogZmFsc2UgKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGxvY2FsZVN0cmluZyh4LCBzZXAsIGdycCkge1xyXG4gIGNvbnN0IHN4ID0gKCcnK3gpLnNwbGl0KCcuJyk7XHJcbiAgbGV0IHMgPSAnJztcclxuICBsZXQgaSwgajtcclxuICBzZXAgfHwgKHNlcCA9ICcuJyk7IC8vIGRlZmF1bHQgc2VwZXJhdG9yXHJcbiAgZ3JwIHx8IGdycCA9PT0gMCB8fCAoZ3JwID0gMyk7IC8vIGRlZmF1bHQgZ3JvdXBpbmdcclxuICBpID0gc3hbMF0ubGVuZ3RoO1xyXG4gIHdoaWxlIChpID4gZ3JwKSB7XHJcbiAgICAgIGogPSBpIC0gZ3JwO1xyXG4gICAgICBzID0gc2VwICsgc3hbMF0uc2xpY2UoaiwgaSkgKyBzO1xyXG4gICAgICBpID0gajtcclxuICB9XHJcbiAgcyA9IHN4WzBdLnNsaWNlKDAsIGkpICsgcztcclxuICBzeFswXSA9IHM7XHJcbiAgcmV0dXJuIHN4LmpvaW4oJy4nKTtcclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmltcG9ydCB7IG1hcENvdXJzZUxldmVsVG9TdHJpbmcsIGNyZWF0ZUNvdXJzZUxldmVsSW5kaWNhdG9yIH0gZnJvbSAnLi4vLi4vLi4vbGliL2dlbmVyYWwudXRpbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoeyBsZXZlbCB9KSB7XHJcblxyXG4gIGNvbnN0IGxldmVsSW5kaWNhdG9ycyA9IGNyZWF0ZUNvdXJzZUxldmVsSW5kaWNhdG9yKGxldmVsKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwidzMtY29udGFpbmVyXCIgPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInczLWJhci1pdGVtICB3My1yaWdodFwiPlxyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICBsZXZlbEluZGljYXRvcnMubWFwKCh2YWwsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgICAgY29uc3QgX2NvbG9yID0gdmFsID8gJ3czLWdyZWVuJyA6ICd3My1ncmV5IHczLW9wYWNpdHknXHJcbiAgICAgICAgICAgICAgcmV0dXJuICg8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT17X2NvbG9yfSBzdHlsZT17e3dpZHRoOiAnOHB4JywgaGVpZ2h0OiAnOHB4JywgbWFyZ2luTGVmdDogJzJweCcsIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snfX0gLz4pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3czLXNtYWxsJz4geyBtYXBDb3Vyc2VMZXZlbFRvU3RyaW5nKGxldmVsKSB9IDwvc3Bhbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG5cclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuY29uc3QgZGljdCA9IHtcclxuICBcImRpc2NvdW50XCI6IFwic2FsZVwiLFxyXG4gIFwiZ2lmdFwiOiBcImdpZnRcIixcclxuICBcIm5ld1wiOiBcIm5ld1wiLFxyXG4gIFwiYmVzdFwiOiBcImJlc3QgY2hvaWNlXCJcclxufTtcclxuXHJcbmNvbnN0IHRhZ0NvbG9yID0ge1xyXG4gIFwic2FsZVwiOiBcInJlZFwiLFxyXG4gIFwiZ2lmdFwiOiBcImJsdWVcIixcclxuICBcIm5ld1wiOiBcInllbGxvd1wiLFxyXG4gIFwiYmVzdCBjaG9pY2VcIjogXCJ5ZWxsb3dcIlxyXG59XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRhZyhjb3Vyc2VzLCBwcm9tb3Rpb25zKSB7XHJcbiAgaWYgKEFycmF5LmlzQXJyYXkoY291cnNlcykpIHtcclxuICAgIGNvbnN0IHRhZ3MgPSB7fTtcclxuICAgIGNvdXJzZXMuZm9yRWFjaChjb3Vyc2UgPT4gIHRhZ3NbY291cnNlLmlkXSA9IGNyZWF0ZVRhZ0ZvckNvdXJzZShjb3Vyc2UsIHByb21vdGlvbnMpKTtcclxuICAgIHJldHVybiB0YWdzO1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gY3JlYXRlVGFnRm9yQ291cnNlKGNvdXJzZXMsIHByb21vdGlvbnMpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlVGFnRm9yQ291cnNlKGNvdXJzZSwgcHJvbW90aW9ucykge1xyXG4gIGNvbnN0IF90YWdzID0gcHJvbW90aW9ucy5tYXAocCA9PiBjcmVhdGVQcm9tb3Rpb25UYWcoY291cnNlLCBwKSkuZmlsdGVyKHRhZyA9PiB0YWcpO1xyXG4gICAgaWYgKGNvdXJzZS50YWdzKSB7XHJcbiAgICAgIF90YWdzLnB1c2goLi4uY291cnNlLnRhZ3MubWFwKHRhZyA9PiBkaWN0W3RhZ10gfHwgdGFnKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gX3RhZ3MuZmlsdGVyKCh0YWcsIGluZGV4KSA9PiBfdGFncy5pbmRleE9mKHRhZykgPT09IGluZGV4KTsgIC8vIHJlbW92ZSBkdXBsaWNhdGUgaXRlbXNcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlUHJvbW90aW9uVGFnKGNvdXJzZSwgcHJvbW90aW9uKSB7XHJcbiAgcmV0dXJuIHByb21vdGlvbi5zY29wZXMuZmluZChpdGVtID0+IGl0ZW0uY291cnNlSWQgPT09IGNvdXJzZS5pZCk/IGRpY3RbcHJvbW90aW9uLnR5cGVdIDogdW5kZWZpbmVkO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY29sb3JUYWcodGFnKSB7XHJcbiAgcmV0dXJuIHRhZ0NvbG9yW3RhZ107XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5pbXBvcnQgeyBjb2xvclRhZyB9IGZyb20gJy4uLy4uL2xpYi90YWcudXRpbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7IHRhZ3MgfSkge1xyXG5cclxuICBpZiAoIXRhZ3MgfHwgdGFncy5sZW5ndGggPT09IDApIHsgcmV0dXJuIG51bGw7IH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxzcGFuPlxyXG4gICAgICB7XHJcbiAgICAgICAgdGFncy5tYXAodGFnID0+IChcclxuICAgICAgICAgICAgPGxhYmVsIGtleT17dGFnfSBjbGFzc05hbWU9e2B3My10YWcgdzMtJHtjb2xvclRhZyh0YWcpfWB9IHN0eWxlPXt7bWFyZ2luUmlnaHQ6ICc0cHgnfX0+IHt0YWcudG9VcHBlckNhc2UoKX0gPC9sYWJlbD5cclxuICAgICAgICApKVxyXG4gICAgICB9XHJcbiAgICA8L3NwYW4+XHJcbiAgKTtcclxuXHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoeyBza2lsbHN9KSB7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICB7XHJcbiAgICAgICAgc2tpbGxzLm1hcChza2lsbCA9PiAoXHJcbiAgICAgICAgICA8c3BhbiBrZXk9e3NraWxsfSA+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInczLXRhZyB3My1yb3VuZCB3My1sZWZ0LWFsaWduIHczLWdyZWVuXCIgc3R5bGU9e3ttYXJnaW46ICc0cHggMCd9fT5cclxuICAgICAgICAgICAgICA8aSBjbGFzc05hbWUgPSBcImZhcyBmYS1hd2FyZCB3My10ZXh0LXllbGxvd1wiIC8+IHtza2lsbH1cclxuICAgICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgICB7J1xcdTAwQTAnfVxyXG4gICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICkpXHJcbiAgICAgIH1cclxuICAgICAgPGJyIC8+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG5cclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgbmF2IH0gZnJvbSAnQHJlYWxtanMvcmVhY3QtbmF2aSc7XHJcblxyXG5pbXBvcnQgVGFncyBmcm9tICcuLi8uLi8uLi9XaWRnZXQvQ29tbW9uL1RhZ3MnO1xyXG5pbXBvcnQgU2tpbGxMaXN0IGZyb20gJy4uLy4uLy4uL1dpZGdldC9Db21tb24vU2tpbGxMaXN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHsgY291cnNlLCB0YWcgfSkge1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9XCJ3My1iYXItaXRlbVwiPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInczLWNlbGwtcm93XCI+XHJcblxyXG4gICAgICAgIDxpbWcgc3JjPXtjb3Vyc2UudGh1bWJuYWlsfSBjbGFzc05hbWU9XCJ3My1jb250YWluZXIgdzMtY2VsbCB3My1oaWRlLXNtYWxsXCIgc3R5bGU9e3t3aWR0aDonMTUwcHgnLCBib3JkZXJSYWRpdXM6ICcyNHB4J319IC8+XHJcblxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidzMtY2VsbFwiIHN0eWxlPXt7bWF4V2lkdGg6ICc1MzBweCd9fT5cclxuICAgICAgICAgIDxUYWdzIHRhZ3MgPSB7dGFnfSAvPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjdXJzb3ItcG9pbnRlciB3My10ZXh0LWRhcmstZ3JleVwiIHN0eWxlPXt7Zm9udFdlaWdodDogJ2JvbGQnLCBwYWRkaW5nOiAnMCAwIDRweCAwJ319PlxyXG4gICAgICAgICAgICA8YSAgaHJlZj17YC9jb3Vyc2UvJHtjb3Vyc2UuaWR9YH1cclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInczLWhvdmVyLXRleHQtYmx1ZVwiXHJcbiAgICAgICAgICAgICAgICBzdHlsZT17e3RleHREZWNvcmF0aW9uOiAnbm9uZSd9fVxyXG4gICAgICAgICAgICAgICAgb25DbGljayA9IHtuYXZpZ2F0ZX1cclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgIHtjb3Vyc2UudGl0bGV9XHJcbiAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidzMtc21hbGwgdzMtdGV4dC1kYXJrLWdyZXlcIiBzdHlsZT17e2ZvbnRTdHlsZTogJ2l0YWxpYycsIHBhZGRpbmc6ICcwIDAgOHB4IDAnfX0+IHtjb3Vyc2Uuc25pcHBldH0gPC9kaXY+XHJcblxyXG4gICAgICAgICAgPFNraWxsTGlzdCBza2lsbHMgPSB7Y291cnNlLnNraWxsc30gLz5cclxuXHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxuXHJcbiAgZnVuY3Rpb24gbmF2aWdhdGUoZSkge1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGNvbnN0IGNpZCA9IGNvdXJzZS5pZDtcclxuICAgIG5hdi5uYXZpZ2F0ZSgnY291cnNlJywgeyBwYXJhbXM6IHtjaWR9IH0pO1xyXG4gIH1cclxuXHJcbn0iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JztcclxuaW1wb3J0IHsgbmF2IH0gZnJvbSAnQHJlYWxtanMvcmVhY3QtbmF2aSc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoeyBjb3Vyc2UsIG5hdmlnYXRlIH0pIHtcclxuXHJcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3My1iYXItaXRlbSB3My1oaWRlLWxhcmdlXCIgc3R5bGU9e3t3aWR0aDogJzEwMCUnfX0+XHJcbiAgICAgICAgPGRpdiAgY2xhc3NOYW1lPVwidzMtaGlkZS1zbWFsbFwiIHN0eWxlPXt7d2lkdGg6ICcxNTBweCcsIGhlaWdodDogJzEwcHgnLCBkaXNwbGF5OiAnaW5saW5lLWJsb2NrJ319IC8+XHJcbiAgICAgICAgeycgJ31cclxuICAgICAgICA8YSAgaHJlZj17YC9jb3Vyc2UvJHtjb3Vyc2UuaWR9YH1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidzMtYnV0dG9uIHczLXJvdW5kIHczLWJsdWUgdzMtY2FyZC00IHczLXJpZ2h0XCJcclxuICAgICAgICAgICAgb25DbGljayA9IHtuYXZpZ2F0ZX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICB7dChcImJyb3dzZTpWaWV3IENvdXJzZVwiKX1cclxuICAgICAgICA8L2E+XHJcbiAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3My1iYXItaXRlbSB3My1yaWdodCB3My1oaWRlLW1lZGl1bSB3My1oaWRlLXNtYWxsXCI+XHJcbiAgICAgICAgPGEgIGhyZWY9e2AvY291cnNlLyR7Y291cnNlLmlkfWB9XHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInczLWJ1dHRvbiB3My1yb3VuZCB3My1ibHVlIHczLWNhcmQtNFwiXHJcbiAgICAgICAgICAgIG9uQ2xpY2sgPSB7bmF2aWdhdGV9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAge3QoXCJicm93c2U6VmlldyBDb3Vyc2VcIil9XHJcbiAgICAgICAgPC9hPlxyXG4gICAgICAgIDxiciAvPiA8YnIgLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG5cclxuICBmdW5jdGlvbiBuYXZpZ2F0ZShlKSB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgY29uc3QgY2lkID0gY291cnNlLmlkO1xyXG4gICAgbmF2Lm5hdmlnYXRlKCdjb3Vyc2UnLCB7IHBhcmFtczoge2NpZH0gfSk7XHJcbiAgfVxyXG5cclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmltcG9ydCBMZXZlbEluZGljYXRvcnMgZnJvbSAnLi9MZXZlbEluZGljYXRvcnMnO1xyXG5pbXBvcnQgQ291cnNlSW5mbyBmcm9tICcuL0NvdXJzZUluZm8nO1xyXG5pbXBvcnQgQWN0aW9uQnV0dG9ucyBmcm9tICcuL0FjdGlvbkJ1dHRvbnMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeyBjb3Vyc2UsIHRhZyB9KSB7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8TGV2ZWxJbmRpY2F0b3JzIGxldmVsID0ge2NvdXJzZS5sZXZlbH0gLz5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3My1iYXJcIj5cclxuICAgICAgICA8Q291cnNlSW5mbyBjb3Vyc2UgPSB7Y291cnNlfSB0YWcgPSB7dGFnfSAvPlxyXG4gICAgICAgIDxBY3Rpb25CdXR0b25zIGNvdXJzZSA9IHtjb3Vyc2V9IC8+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxuXHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5pbXBvcnQgeyBtYXBDb3Vyc2VMZXZlbFRvU3RyaW5nIH0gZnJvbSAnLi4vLi4vLi4vbGliL2dlbmVyYWwudXRpbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7IGNvdXJzZSB9KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIDxoMiBzdHlsZSA9IHt7IGZvbnRXZWlnaHQ6ICdib2xkJywgZm9udEZhbWlseTogJ1JhbGV3YXknLCBtYXJnaW46ICcwIDAgMTBweCAwJyB9fT4ge2NvdXJzZS50aXRsZX0gPC9oMj5cclxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidzMtdGFnIHczLWdyZWVuXCI+ICB7bWFwQ291cnNlTGV2ZWxUb1N0cmluZyhjb3Vyc2UubGV2ZWwpfSA8L3NwYW4+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnO1xyXG5cclxuaW1wb3J0IFNraWxsTGlzdCBmcm9tICcuLi8uLi8uLi9XaWRnZXQvQ29tbW9uL1NraWxsTGlzdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoeyBjb3Vyc2UgfSkge1xyXG5cclxuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8cCBzdHlsZSA9IHt7IHRleHRBbGlnbjogJ2p1c3RpZnknLCBtYXJnaW5SaWdodDogJzE2cHgnIH19PlxyXG4gICAgICAgIHtjb3Vyc2UuZGVzY3JpcHRpb259XHJcbiAgICAgIDwvcD5cclxuICAgICAgPHAgY2xhc3NOYW1lID0gXCJ0ZXh0LWJvbGRcIj4ge3QoXCJjb3Vyc2U6S25vd2xlZGdlXCIpfSA8L3A+XHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAgPFNraWxsTGlzdCBza2lsbHMgPSB7Y291cnNlLnNraWxsc30gLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG5cclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICh7IGNvdXJzZSB9KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZW1iZWQtcmVzcG9uc2l2ZVwiIHN0eWxlID0ge3sgdGV4dEFsaWduOiAnY2VudGVyJyB9fT5cclxuICAgICAgPGlmcmFtZSBzcmMgPSB7Y291cnNlLnZpZGVvfSAvPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcblwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRW5yb2xsQnV0dG9uKHsgZW5yb2xsIH0pIHtcclxuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCk7XHJcbiAgcmV0dXJuIChcclxuICAgIDxidXR0b24gY2xhc3NOYW1lID0gXCJ3My1idXR0b24gdzMtY2FyZCB3My1yZWRcIiBvbkNsaWNrID0ge2Vucm9sbH0gPlxyXG4gICAgICA8aSBjbGFzc05hbWUgPSBcImZhcyBmYS10aHVtYnMtdXBcIiBzdHlsZT17e21hcmdpblJpZ2h0OiAnNnB4J319Lz4ge3QoXCJjb3Vyc2U6RW5yb2xsIE5vd1wiKX1cclxuICAgIDwvYnV0dG9uPlxyXG4gICk7XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XHJcblxyXG5pbXBvcnQgRW5yb2xsQnV0dG9uIGZyb20gJy4vRW5yb2xsQnV0dG9uJztcclxuXHJcbmltcG9ydCB7IGxvY2FsZVN0cmluZyB9IGZyb20gJy4uLy4uLy4uL2xpYi9nZW5lcmFsLnV0aWwnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2FsZUJhcih7IHByaWNlLCB2aXNpYmxlLCBlbnJvbGwsIGhlYWRlclBhZGRpbmcgfSkge1xyXG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWUgPSBcInczLWJvcmRlci1ib3R0b20gdzMtYm9yZGVyLWdyYXkgc3RpY2t5IHczLXdoaXRlIHczLWFuaW1hdGUtb3BhY2l0eVwiIHN0eWxlID0ge3t0b3A6IGAke2hlYWRlclBhZGRpbmd9cHhgLCB6SW5kZXg6IDEsIGRpc3BsYXk6IHZpc2libGU/ICdibG9jaycgOiAnbm9uZSd9fSA+XHJcbiAgICAgIDxkaXYgc3R5bGUgPSB7e21heFdpZHRoOiAnMTIwMHB4JywgbWFyZ2luOiAnYXV0byd9fT5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtdGV4dC1ncmF5XCIgc3R5bGUgPSB7eyBwYWRkaW5nTGVmdDogJzE2cHgnfX0+eyBwcmljZS5kaXNjb3VudCA/IHQoXCJjb3Vyc2U6TGltaXRlZC1UaW1lIE9mZmVyXCIpIDogbnVsbCB9PC9kaXY+XHJcbiAgICAgICAgPGRpdiBzdHlsZSA9IHt7dGV4dEFsaWduOiAncmlnaHQnLCBwYWRkaW5nOiAnOHB4IDE2cHgnfX0+XHJcbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWUgPSBcInczLXhsYXJnZSB3My10ZXh0LWdyYXlcIiBzdHlsZSA9IHt7dGV4dERlY29yYXRpb246IFwibGluZS10aHJvdWdoXCIsIG1hcmdpblJpZ2h0OiAnNnB4J319PlxyXG4gICAgICAgICAgICB7IHByaWNlLmRpc2NvdW50ID8gPHNwYW4+IHtsb2NhbGVTdHJpbmcocHJpY2Uub3JpZ2luKX0gxJEgPC9zcGFuPiA6IG51bGwgfVxyXG4gICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lID0gXCJ3My1sYXJnZSB3My10ZXh0LXJlZFwiIHN0eWxlID0ge3ttYXJnaW5SaWdodDogJzRweCd9fSA+XHJcbiAgICAgICAgICAgIHsgcHJpY2UuZGlzY291bnQ/IGxvY2FsZVN0cmluZyhwcmljZS5zYWxlKSA6IGxvY2FsZVN0cmluZyhwcmljZS5vcmlnaW4pIH0gxJFcclxuICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgIDxFbnJvbGxCdXR0b24gZW5yb2xsID0ge2Vucm9sbH0gLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnO1xyXG5cclxuaW1wb3J0IEVucm9sbEJ1dHRvbiBmcm9tICcuL0Vucm9sbEJ1dHRvbic7XHJcblxyXG5pbXBvcnQgeyBsb2NhbGVTdHJpbmcgfSBmcm9tICcuLi8uLi8uLi9saWIvZ2VuZXJhbC51dGlsJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNhbGVCb3goeyBwcmljZSwgZW5yb2xsIH0pIHtcclxuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCk7XHJcbiAgcmV0dXJuIChcclxuICAgIDxwPlxyXG4gICAgICA8c3BhbiBjbGFzc05hbWUgPSBcInczLXRleHQtZ3JheVwiPnsgcHJpY2UuZGlzY291bnQgPyB0KFwiY291cnNlOkxpbWl0ZWQtVGltZSBPZmZlclwiKSA6IG51bGwgfTwvc3Bhbj5cclxuICAgICAgeyBwcmljZS5kaXNjb3VudCA/IDxiciAvPiA6IG51bGwgfVxyXG4gICAgICA8c3BhbiBjbGFzc05hbWUgPSBcInczLXhsYXJnZSB3My10ZXh0LWdyYXlcIiBzdHlsZSA9IHt7dGV4dERlY29yYXRpb246IFwibGluZS10aHJvdWdoXCIsIG1hcmdpblJpZ2h0OiAnNnB4J319PlxyXG4gICAgICAgIHsgcHJpY2UuZGlzY291bnQgPyA8c3Bhbj4ge2xvY2FsZVN0cmluZyhwcmljZS5vcmlnaW4pfSDEkSA8L3NwYW4+IDogbnVsbCB9XHJcbiAgICAgIDwvc3Bhbj5cclxuICAgICAgPHNwYW4gY2xhc3NOYW1lID0gXCJ3My1sYXJnZSB3My10ZXh0LXJlZFwiID5cclxuICAgICAgICB7IHByaWNlLmRpc2NvdW50PyBsb2NhbGVTdHJpbmcocHJpY2Uuc2FsZSkgOiBsb2NhbGVTdHJpbmcocHJpY2Uub3JpZ2luKSB9IMSRXHJcbiAgICAgIDwvc3Bhbj5cclxuICAgICAgPGJyIC8+XHJcbiAgICAgIDxFbnJvbGxCdXR0b24gZW5yb2xsID0ge2Vucm9sbH0gLz5cclxuICAgIDwvcD5cclxuICApO1xyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7IGNvdXJzZSB9KSB7XHJcblxyXG4gIGNvbnN0IFtkZXRhaWxWaXNpYmxlLCBzZXREZXRhaWxWaXNpYmxlXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcclxuXHJcbiAgY29uc3QgYmVuZWZpdHMgPSBjb3Vyc2UuYmVuZWZpdHMgfHwgW107XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8aDMgY2xhc3NOYW1lID0gXCJjdXJzb3ItcG9pbnRlclwiIHN0eWxlID0ge3sgZm9udEZhbWlseTogJ1JhbGV3YXknfX0gb25DbGljayA9IHt0b2dnbGVEZXRhaWxWaXNpYmxlfT5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtYmx1ZVwiIHN0eWxlID0ge3sgZGlzcGxheTogJ2lubGluZS1ibG9jaycsIHBhZGRpbmc6ICcwIDhweCd9fSA+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtY2VsbFwiPiA8aSBjbGFzc05hbWU9e2BmYXMgZmEtY2FyZXQtJHtkZXRhaWxWaXNpYmxlPyAndXAnIDogJ2Rvd24nfWB9IHN0eWxlID0ge3ttYXJnaW5SaWdodDogJzhweCd9fSAvPiA8L2Rpdj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jZWxsXCI+IHt0KFwiY291cnNlOkJlbmVmaXRcIil9IDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2gzPlxyXG4gICAgICA8ZGl2IHN0eWxlID0ge3sgZGlzcGxheTogZGV0YWlsVmlzaWJsZT8gJ2Jsb2NrJyA6ICdub25lJyB9fT5cclxuICAgICAgICB7XHJcbiAgICAgICAgICBiZW5lZml0cy5tYXAoICh7aGVhZGluZywgZGV0YWlsLCBpbWFnZX0sIGluZGV4KSA9PiAoXHJcbiAgICAgICAgICAgIDxHcmlkIGtleSA9IHtpbmRleH0gaGVhZGluZyA9IHtoZWFkaW5nfSBkZXRhaWwgPSB7ZGV0YWlsfSBpbWFnZSA9IHtpbWFnZX0gdHlwZSA9IHtpbmRleCAlIDJ9IC8+XHJcbiAgICAgICAgICApKVxyXG4gICAgICAgIH1cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG5cclxuICBmdW5jdGlvbiB0b2dnbGVEZXRhaWxWaXNpYmxlKCkge1xyXG4gICAgc2V0RGV0YWlsVmlzaWJsZSghZGV0YWlsVmlzaWJsZSk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBHcmlkKHtoZWFkaW5nLCBkZXRhaWwsIGltYWdlLCB0eXBlfSkge1xyXG4gIGNvbnN0IGJnQ29sb3IgPSB0eXBlID09PSAwPyBcInczLXdoaXRlXCIgOiBcInczLWxpZ2h0LWdyYXlcIjtcclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWUgPSB7YHczLXJvdy1wYWRkaW5nIHczLXBhZGRpbmctMzIgdzMtY29udGFpbmVyICR7YmdDb2xvcn1gfT5cclxuICAgICAgPGRpdiBjbGFzc05hbWUgPSBcInczLWNvbnRlbnRcIj5cclxuICAgICAgICB7IHR5cGUgPT09IDA/IDxCZW5lZml0VGV4dCBoZWFkaW5nID0ge2hlYWRpbmd9IGRldGFpbCA9IHtkZXRhaWx9IC8+IDogPEJlbmVmaXRJbWFnZSBpbWFnZSA9IHtpbWFnZX0gLz4gfVxyXG4gICAgICAgIHsgdHlwZSA9PT0gMD8gPEJlbmVmaXRJbWFnZSBpbWFnZSA9IHtpbWFnZX0gLz4gOiA8QmVuZWZpdFRleHQgaGVhZGluZyA9IHtoZWFkaW5nfSBkZXRhaWwgPSB7ZGV0YWlsfSAvPiB9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG5cclxuZnVuY3Rpb24gQmVuZWZpdFRleHQoeyBoZWFkaW5nLCBkZXRhaWwgfSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtdHdvdGhpcmRcIiBzdHlsZSA9IHt7cGFkZGluZzogJzE2cHgnfX0+XHJcbiAgICAgIDxoNSBzdHlsZSA9IHt7IGZvbnRGYW1pbHk6ICdSYWxld2F5JywgdGV4dEFsaWduOiAnanVzdGlmeSd9fT57aGVhZGluZ308L2g1PlxyXG4gICAgICB7XHJcbiAgICAgICAgZGV0YWlsLm1hcCgodGV4dCwgaW5kZXgpID0+IDxwIGtleSA9IHtpbmRleH0gY2xhc3NOYW1lPVwidzMtdGV4dC1ncmV5XCIgc3R5bGUgPSB7e3RleHRBbGlnbjogJ2p1c3RpZnknfX0+e3RleHR9PC9wPilcclxuICAgICAgfVxyXG4gICAgPC9kaXY+XHJcbiAgKVxyXG59XHJcblxyXG5mdW5jdGlvbiBCZW5lZml0SW1hZ2UoeyBpbWFnZSB9KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My10aGlyZCB3My1jZW50ZXJcIiBzdHlsZSA9IHt7cGFkZGluZzogJzI0cHggMCd9fT5cclxuICAgICAgPGltZyBzcmMgPSB7aW1hZ2V9IHdpZHRoID0gezIwMH0gLz5cclxuICAgIDwvZGl2PlxyXG4gIClcclxufSIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7IGNvdXJzZSB9KSB7XHJcblxyXG4gIGNvbnN0IFtkZXRhaWxWaXNpYmxlLCBzZXREZXRhaWxWaXNpYmxlXSA9IHVzZVN0YXRlKHRydWUpO1xyXG5cclxuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCk7XHJcblxyXG4gIGNvbnN0IGNvbnRlbnQgPSBjb3Vyc2UuY29udGVudCB8fCBbXTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIDxoMyBjbGFzc05hbWUgPSBcImN1cnNvci1wb2ludGVyXCIgc3R5bGUgPSB7eyBmb250RmFtaWx5OiAnUmFsZXdheScsIH19IG9uQ2xpY2sgPSB7dG9nZ2xlRGV0YWlsVmlzaWJsZX0+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWUgPSBcInczLWJsdWVcIiBzdHlsZSA9IHt7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLCBwYWRkaW5nOiAnMCA4cHgnfX0gPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWUgPSBcInczLWNlbGxcIj4gPGkgY2xhc3NOYW1lPXtgZmFzIGZhLWNhcmV0LSR7ZGV0YWlsVmlzaWJsZT8gJ3VwJyA6ICdkb3duJ31gfSBzdHlsZSA9IHt7bWFyZ2luUmlnaHQ6ICc4cHgnfX0gLz4gPC9kaXY+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtY2VsbFwiPiB7dChcImNvdXJzZTpDb250ZW50XCIpfSA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9oMz5cclxuICAgICAgPGRpdiBzdHlsZSA9IHt7IGRpc3BsYXk6IGRldGFpbFZpc2libGU/ICdibG9jaycgOiAnbm9uZScgfX0+XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgY29udGVudC5tYXAoKHtoZWFkaW5nLCBkZXRhaWwsIG1lZGlhfSwgaW5kZXgpID0+IDxDb250ZW50IGtleSA9IHtpbmRleH0gaGVhZGluZyA9IHtoZWFkaW5nfSBkZXRhaWwgPSB7ZGV0YWlsfSBtZWRpYSA9IHttZWRpYX0gLz4pXHJcbiAgICAgICAgfVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG4gIGZ1bmN0aW9uIHRvZ2dsZURldGFpbFZpc2libGUoKSB7XHJcbiAgICBzZXREZXRhaWxWaXNpYmxlKCFkZXRhaWxWaXNpYmxlKTtcclxuICB9XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBDb250ZW50KHtoZWFkaW5nLCBkZXRhaWwsIG1lZGlhfSkge1xyXG4gIGNvbnN0IFtkZXRhaWxWaXNpYmxlLCBzZXREZXRhaWxWaXNpYmxlXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8aDQgY2xhc3NOYW1lID0gXCJjdXJzb3ItcG9pbnRlciB3My1ncmVlbiB3My1ib3JkZXIgdzMtYm9yZGVyLWdyYXkgdzMtY29udGFpbmVyXCIgc3R5bGUgPSB7eyBmb250RmFtaWx5OiAnUmFsZXdheScsIG1hcmdpbjogJzEwcHggMCAwIDAnfX0gb25DbGljayA9IHt0b2dnbGVEZXRhaWxWaXNpYmxlfT5cclxuICAgICAgICB7aGVhZGluZ30gPGkgY2xhc3NOYW1lPXtgdzMtcmlnaHQgZmFzIGZhLWNhcmV0LSR7ZGV0YWlsVmlzaWJsZT8gJ3VwJyA6ICdkb3duJ31gfSBzdHlsZSA9IHt7bWFyZ2luUmlnaHQ6ICc4cHgnfX0gLz5cclxuICAgICAgPC9oND5cclxuICAgICAgPGRpdiBjbGFzc05hbWUgPSBcInczLWNlbGwtcm93IHczLWNvbnRhaW5lciB3My1saWdodC1ncmF5XCIgc3R5bGUgPSB7eyBkaXNwbGF5OiBkZXRhaWxWaXNpYmxlPyAnYmxvY2snIDogJ25vbmUnIH19PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jZWxsXCI+XHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIGRldGFpbC5tYXAoICh0ZXh0LCBpbmRleCkgPT4gKCA8cCBrZXk9e2luZGV4fSBjbGFzc05hbWUgPSBcInczLXRleHQtZ3JheVwiPiB7dGV4dH0gPC9wPiApKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jZWxsXCI+XHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIG1lZGlhLm1hcCggKHR5cGUsIGluZGV4KSA9PiAoIDxNZWRpYUljb24ga2V5ID0ge2luZGV4fSB0eXBlID0ge3R5cGV9IC8+ICkpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxuXHJcbiAgZnVuY3Rpb24gdG9nZ2xlRGV0YWlsVmlzaWJsZSgpIHtcclxuICAgIHNldERldGFpbFZpc2libGUoIWRldGFpbFZpc2libGUpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gTWVkaWFJY29uKHsgdHlwZSB9KSB7XHJcblxyXG4gICAgY29uc3QgdHlwZU1hcCA9IHtcclxuICAgICAgXCJ2aWRlb1wiOiBcImZhcyBmYS1maWxtXCIsXHJcbiAgICAgIFwicXVpelwiOiBcImZhcyBmYS1wZW5jaWwtYWx0XCIsXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPGkgY2xhc3NOYW1lID0ge2B3My10ZXh0LWdyYXkgdzMtbGFyZ2UgJHt0eXBlTWFwW3R5cGVdfWB9IHN0eWxlID0ge3twYWRkaW5nOiAnNnB4J319IC8+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbn0iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHsgc2VsZiB9KSB7XHJcblxyXG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1wYW5lbCB3My1kaXNwbGF5LWNvbnRhaW5lciB3My1jYXJkIHczLXdoaXRlXCIgc3R5bGUgPSB7e3dpZHRoOiAnOTAlJywgbWF4V2lkdGg6ICc0ODBweCcsIG1hcmdpbjogJ2F1dG8nfX0+XHJcbiAgICAgIDxzcGFuIGNsYXNzTmFtZSA9IFwidzMtYnV0dG9uIHczLXhsYXJnZSB3My1kaXNwbGF5LXRvcHJpZ2h0IHczLXRleHQtcmVkXCIgb25DbGljayA9IHsoKSA9PiBzZWxmLnJlamVjdCgpfT4mdGltZXM7PC9zcGFuPlxyXG4gICAgICA8aDM+e3QoXCJwb3B1cDpPcHBzIVwiKX08L2gzPlxyXG4gICAgICA8ZGl2PlxyXG5cclxuICAgICAgICA8aDQ+e3QoXCJwb3B1cDpOZWVkIHNpZ25pblwiKX08L2g0PlxyXG5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtY2VsbC1yb3dcIiBzdHlsZSA9IHt7IG1hcmdpbjogJzMycHggMCAxNnB4IDAnIH19PlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWUgPSBcInczLWNlbGxcIiBzdHlsZSA9IHt7IHRleHRBbGlnbjogJ2NlbnRlcicgfX0+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lID0gXCJ3My1idXR0b24gdzMtYmx1ZVwiIG9uQ2xpY2sgPSB7c2lnbmlufSA+e3QoXCJwb3B1cDpTaWduLWluIE5vd1wiKX08L2J1dHRvbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWUgPSBcInczLWNlbGxcIiBzdHlsZSA9IHt7IHRleHRBbGlnbjogJ2NlbnRlcicgfX0+XHJcbiAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lID0gXCJ3My1idXR0b24gdzMtdGV4dC1vcmFuZ2VcIiBvbkNsaWNrID0ge3NpZ251cH0+e3QoXCJwb3B1cDpDcmVhdGUgYWNjb3VudFwiKX08L2J1dHRvbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgPC9kaXY+XHJcblxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxuXHJcbiAgZnVuY3Rpb24gc2lnbmluKCkge1xyXG4gICAgc2VsZi5yZXNvbHZlKCdzaWduaW4nKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHNpZ251cCgpIHtcclxuICAgIHNlbGYucmVzb2x2ZSgnc2lnbnVwJyk7XHJcbiAgfVxyXG5cclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IEhvbWUgZnJvbSAnLi9QYWdlL0hvbWUnO1xyXG5pbXBvcnQgRXJyb3IgZnJvbSAnLi9QYWdlL0Vycm9yJztcclxuXHJcbmltcG9ydCBCcm93c2UgZnJvbSAnLi9QYWdlL0Jyb3dzZSc7XHJcbmltcG9ydCBmZXRjaENvdXJzZXNCeVByb2dyYW0gZnJvbSAnLi9QYWdlL0Jyb3dzZS9kYXRhLnV0aWwnO1xyXG5cclxuaW1wb3J0IENvdXJzZSBmcm9tICcuL1BhZ2UvQ291cnNlJztcclxuaW1wb3J0IGZldGNoQ291cnNlIGZyb20gJy4vUGFnZS9Db3Vyc2UvZGF0YS51dGlsJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBob21lOiB7XHJcbiAgICBQYWdlOiBIb21lLCB1cmw6ICcvJyxcclxuICB9LFxyXG4gIGJyb3dzZToge1xyXG4gICAgUGFnZTogQnJvd3NlLCB1cmw6ICcvYnJvd3NlLzpwaWQnLFxyXG4gICAgdGl0bGU6IFwiQnJvd3NlOiB7e3Byb2dyYW0udGl0bGV9fVwiLFxyXG4gICAgZGF0YTogZmV0Y2hDb3Vyc2VzQnlQcm9ncmFtLFxyXG4gICAgcmVqZWN0OiAoe25hdn0pID0+IG5hdi5uYXZpZ2F0ZSgnZXJyb3I0MDQnKSxcclxuICB9LFxyXG4gIGNvdXJzZToge1xyXG4gICAgUGFnZTogQ291cnNlLCB1cmw6ICcvY291cnNlLzpjaWQnLFxyXG4gICAgdGl0bGU6IFwiQ291cnNlOiB7e2NvdXJzZS50aXRsZX19XCIsXHJcbiAgICBkYXRhOiBmZXRjaENvdXJzZSxcclxuICAgIHJlamVjdDogKHtuYXZ9KSA9PiBuYXYubmF2aWdhdGUoJ2Vycm9yNDA0JyksXHJcbiAgfSxcclxuICBlcnJvcjQwNDoge1xyXG4gICAgUGFnZTogRXJyb3IsIHVybDogJy9lcnJvci80MDQnLFxyXG4gICAgdGl0bGU6IFwiRXJyb3Ige3tjb2RlfX1cIixcclxuICAgIGRhdGE6IHtcclxuICAgICAgY29kZTogNDA0LFxyXG4gICAgICBtZXNzYWdlOiAnUGFnZSBub3QgZm91bmQnXHJcbiAgICB9XHJcbiAgfVxyXG59O1xyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoKSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jb250YWluZXJcIiBzdHlsZSA9IHt7IG1heFdpZHRoOiAnMTIwMHB4JywgbWFyZ2luOiAnYXV0bycsIHBhZGRpbmdUb3A6ICc2NHB4JyB9fT5cclxuICAgICAgPGgzPiBQYWdlIEhvbWUgPC9oMz5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5cclxuaW1wb3J0IENvdXJzZURpc3BsYXlJdGVtIGZyb20gJy4vQ29tcG9uZW50L0NvdXJzZURpc3BsYXlJdGVtJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEJyb3dzZSh7IHJvdXRlLCBoZWFkZXJQYWRkaW5nIH0pIHtcclxuICBjb25zdCB7IHByb2dyYW0sIGNvdXJzZXMsIHRhZ3MgfSA9IHJvdXRlLmRhdGE7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jb250YWluZXJcIiBzdHlsZSA9IHt7IG1heFdpZHRoOiAnMTIwMHB4JywgbWFyZ2luOiAnYXV0bycsIHBhZGRpbmdUb3A6IGAke2hlYWRlclBhZGRpbmd9cHhgIH19PlxyXG4gICAgICA8aDMgY2xhc3NOYW1lID0gXCJ3My1jb250YWluZXJcIj4ge3Byb2dyYW0udGl0bGV9IDwvaDM+XHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAgPHVsIGNsYXNzTmFtZT1cInczLXVsXCI+XHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgIGNvdXJzZXMubWFwKGNvdXJzZSA9PiAoXHJcbiAgICAgICAgICAgICAgPGxpIGtleSA9IHtjb3Vyc2UuaWR9PlxyXG4gICAgICAgICAgICAgICAgPENvdXJzZURpc3BsYXlJdGVtIGNvdXJzZSA9IHtjb3Vyc2V9ICB0YWcgPSB7dGFnc1tjb3Vyc2UuaWRdfSAvPlxyXG4gICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICkpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgPC91bD5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IHsgY3JlYXRlVGFnIH0gZnJvbSAnLi4vLi4vbGliL3RhZy51dGlsJztcclxuaW1wb3J0IHsgZmV0Y2ggfSBmcm9tICcuLi8uLi9saWIvZmV0Y2hlcic7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoeyBwYXJhbXMsIHByb3BzIH0pIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgY29uc3QgcHJvZ3JhbSA9IHByb3BzLnByb2dyYW1zLmZpbHRlcihwcm9ncmFtID0+IHByb2dyYW0uaWQgPT09IHBhcmFtcy5waWQpWzBdO1xyXG4gICAgaWYgKHByb2dyYW0pIHtcclxuICAgICAgUHJvbWlzZS5hbGwocHJvZ3JhbS5jb3Vyc2VzLm1hcChpZCA9PiBmZXRjaChgJHtwcm9wcy5lbmRwb2ludC5jb3Vyc2VzfS8ke2lkfWApKSlcclxuICAgICAgICAgICAgIC50aGVuKGNvdXJzZXMgPT4gIHJlc29sdmUoeyBwcm9ncmFtLCBjb3Vyc2VzLCB0YWdzOiBjcmVhdGVUYWcoY291cnNlcywgcHJvcHMucHJvbW90aW9ucykgfSkgKVxyXG4gICAgICAgICAgICAgLmNhdGNoKHJlamVjdCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZWplY3QoJ1Byb2dyYW0gaXMgbm90IGZvdW5kJyk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VSZWYsIHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcblxyXG5pbXBvcnQgVGFncyBmcm9tICcuLi8uLi9XaWRnZXQvQ29tbW9uL1RhZ3MnO1xyXG5cclxuaW1wb3J0IFRpdGxlIGZyb20gJy4vQ29tcG9uZW50L1RpdGxlJztcclxuaW1wb3J0IERlc2NyaXB0aW9uIGZyb20gJy4vQ29tcG9uZW50L0Rlc2NyaXB0aW9uJztcclxuaW1wb3J0IFZpZGVvIGZyb20gJy4vQ29tcG9uZW50L1ZpZGVvJztcclxuaW1wb3J0IFNhbGVCYXIgZnJvbSAnLi9Db21wb25lbnQvU2FsZUJhcic7XHJcbmltcG9ydCBTYWxlQm94IGZyb20gJy4vQ29tcG9uZW50L1NhbGVCb3gnO1xyXG5pbXBvcnQgQmVuZWZpdCBmcm9tICcuL0NvbXBvbmVudC9CZW5lZml0JztcclxuaW1wb3J0IENvbnRlbnQgZnJvbSAnLi9Db21wb25lbnQvQ29udGVudCc7XHJcblxyXG5pbXBvcnQgU2lnbmluUmVxdWVzdCBmcm9tICcuL1BvcHVwL1NpZ25pblJlcXVlc3QnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeyByb3V0ZSwgcGFnZSwgdXNlciwgYWNjb3VudENsaWVudCwgc2hvd0hlYWRlclNlcGFyYXRvciwgaGVhZGVyUGFkZGluZyB9KSB7XHJcblxyXG4gIGNvbnN0IHtjb3Vyc2UsIHByb21vdGlvbiwgdGFnc30gPSByb3V0ZS5kYXRhO1xyXG5cclxuICBjb25zdCBbc2FsZUJhclZpc2libGUsIHNldFNhbGVCYXJWaXNpYmxlXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCByZWYgPSB1c2VSZWYobnVsbCk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgaGFuZGxlU2Nyb2xsKTtcclxuICAgIHJldHVybiAoKSA9PiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGhhbmRsZVNjcm9sbCk7XHJcbiAgfSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiByb3V0ZS5pc0FjdGl2ZSAmJiBzaG93SGVhZGVyU2VwYXJhdG9yKCFzYWxlQmFyVmlzaWJsZSksIFtzYWxlQmFyVmlzaWJsZV0pO1xyXG5cclxuICBjb25zdCBwcmljZSA9IGNhbGN1bGF0ZVByaWNlKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IHN0eWxlID17e3BhZGRpbmdUb3A6IGAke2hlYWRlclBhZGRpbmd9cHhgIH19PlxyXG5cclxuICAgICAgPFNhbGVCYXIgcHJpY2UgPSB7cHJpY2V9IHZpc2libGUgPSB7c2FsZUJhclZpc2libGV9IGVucm9sbCA9IHtlbnJvbGx9IGhlYWRlclBhZGRpbmcgPSB7aGVhZGVyUGFkZGluZ30gLz5cclxuXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jb250YWluZXJcIiBzdHlsZSA9IHt7IG1heFdpZHRoOiAnMTIwMHB4JywgbWFyZ2luOiAnYXV0bycgfX0+XHJcblxyXG4gICAgICAgIDxkaXYgc3R5bGUgPSB7e21hcmdpblRvcDogJzEwcHgnfX0+PFRhZ3MgdGFncyA9IHt0YWdzfSAvPiA8L2Rpdj5cclxuICAgICAgICA8VGl0bGUgY291cnNlID0ge2NvdXJzZX0gLz5cclxuXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3My1yb3dcIj5cclxuXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtaGFsZlwiIHN0eWxlID17eyBtYXJnaW5Cb3R0b206ICczMnB4J319ID5cclxuICAgICAgICAgICAgPERlc2NyaXB0aW9uIGNvdXJzZSA9IHtjb3Vyc2V9IC8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInczLWhhbGYgXCIgc3R5bGU9e3ttYXhXaWR0aDogJzQ4MHB4JywgbWFyZ2luQm90dG9tOiAnMzJweCd9fT5cclxuICAgICAgICAgICAgPFZpZGVvIGNvdXJzZSA9IHtjb3Vyc2V9IC8+XHJcbiAgICAgICAgICAgIDxTYWxlQm94IHByaWNlID0ge3ByaWNlfSBlbnJvbGwgPSB7ZW5yb2xsfSAvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2IHJlZiA9IHtyZWZ9PlxyXG4gICAgICAgICAgPEJlbmVmaXQgY291cnNlID0ge2NvdXJzZX0gLz5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxDb250ZW50IGNvdXJzZSA9IHtjb3Vyc2V9IC8+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG4gIGZ1bmN0aW9uIGhhbmRsZVNjcm9sbCgpIHtcclxuICAgIGlmICghcm91dGUuaXNBY3RpdmUpIHsgcmV0dXJuIGZhbHNlOyB9XHJcbiAgICBpZiAocmVmLmN1cnJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wIDwgaGVhZGVyUGFkZGluZyoyKSB7XHJcbiAgICAgICFzYWxlQmFyVmlzaWJsZSAmJiBzZXRTYWxlQmFyVmlzaWJsZSh0cnVlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHNhbGVCYXJWaXNpYmxlICYmIHNldFNhbGVCYXJWaXNpYmxlKGZhbHNlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGNhbGN1bGF0ZVByaWNlKCkge1xyXG4gICAgY29uc3Qgc2FsZVByaWNlID0gKHByb21vdGlvbiAmJiBwcm9tb3Rpb24uZGlzY291bnQpPyBNYXRoLm1heCggcHJvbW90aW9uLmRpc2NvdW50LnJlZHVjZSgoYWNjLCBwKSA9PiBhY2MgLSBwLnZhbHVlLCBjb3Vyc2UucHJpY2UpLCAwICkgOiB1bmRlZmluZWQ7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBvcmlnaW46IGNvdXJzZS5wcmljZSxcclxuICAgICAgc2FsZTogc2FsZVByaWNlLFxyXG4gICAgICBkaXNjb3VudDogIShzYWxlUHJpY2UgPT09IHVuZGVmaW5lZCB8fCBzYWxlUHJpY2UgPT09IGNvdXJzZS5wcmljZSksXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZW5yb2xsKCkge1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHBhZ2UucG9wdXAoU2lnbmluUmVxdWVzdCwgeyBvdmVybGF5OiB0cnVlLCBvbkNsaWNrT3ZlcmxheTogc2VsZiA9PiBzZWxmLnJlamVjdCgpIH0pXHJcbiAgICAgICAgICAudGhlbihhdXRoZW50aWNhdGUpXHJcbiAgICAgICAgICAudGhlbihwcm9jZWVkRW5yb2xsKVxyXG4gICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKGUpe30pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcHJvY2VlZEVucm9sbCgpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBhdXRoZW50aWNhdGUoYWN0aW9uKSB7XHJcbiAgICByZXR1cm4gYWNjb3VudENsaWVudFthY3Rpb25dKCk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBwcm9jZWVkRW5yb2xsKCkge1xyXG4gICAgY29uc29sZS5sb2coJ1Byb2NlZWQgdG8gZW5yb2xsJylcclxuICB9XHJcblxyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgeyBmZXRjaCB9IGZyb20gJy4uLy4uL2xpYi9mZXRjaGVyJztcclxuaW1wb3J0IHsgY29tcG9zZVByb21vdGlvbiB9IGZyb20gJy4uLy4uL2xpYi9wcm9tb3Rpb24udXRpbCc7XHJcbmltcG9ydCB7IGNyZWF0ZVRhZyB9IGZyb20gJy4uLy4uL2xpYi90YWcudXRpbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoeyBwYXJhbXMsIHByb3BzIH0pIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMuY2lkKSB7XHJcbiAgICAgIGNvbnN0IHByb21vdGlvbiA9IGNvbXBvc2VQcm9tb3Rpb24ocGFyYW1zLmNpZCwgcHJvcHMucHJvbW90aW9ucyk7XHJcbiAgICAgIGZldGNoKGAke3Byb3BzLmVuZHBvaW50LmNvdXJzZXN9LyR7cGFyYW1zLmNpZH1gKVxyXG4gICAgICAgIC50aGVuKGNvdXJzZSA9PiByZXNvbHZlKHtjb3Vyc2UsIHByb21vdGlvbiwgdGFnczogY3JlYXRlVGFnKGNvdXJzZSwgcHJvcHMucHJvbW90aW9ucyl9KSlcclxuICAgICAgICAuY2F0Y2gocmVqZWN0KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnQmFkIHJlcXVlc3QnKTtcclxuICAgIH1cclxuICB9KTtcclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBvc2VQcm9tb3Rpb24oY291cnNlSWQsIHByb21vdGlvbnMpIHtcclxuICBjb25zdCBjb3Vyc2VQcm9tb3Rpb24gPSB7fTtcclxuICBwcm9tb3Rpb25zLmZvckVhY2gocCA9PiB7XHJcbiAgICBpZiAoIWNvdXJzZVByb21vdGlvbltwLnR5cGVdKSB7XHJcbiAgICAgIGNvdXJzZVByb21vdGlvbltwLnR5cGVdID0gW107XHJcbiAgICB9XHJcbiAgICBjb3Vyc2VQcm9tb3Rpb25bcC50eXBlXS5wdXNoKC4uLnAuc2NvcGVzLmZpbHRlcihpdGVtID0+IGl0ZW0uY291cnNlSWQgPT09IGNvdXJzZUlkKSk7XHJcbiAgfSk7XHJcbiAgcmV0dXJuIGNvdXJzZVByb21vdGlvbjtcclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVycm9yKHsgcm91dGUgfSkge1xyXG4gIGNvbnN0IHsgZGF0YSB9ID0gcm91dGU7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jb250YWluZXJcIj5cclxuICAgICAgPGgzIGNsYXNzTmFtZSA9IFwidzMtdGV4dC1yZWRcIj4gRXJyb3Ige2RhdGEuY29kZX0gPC9oMz5cclxuICAgICAgPHA+IHtkYXRhLm1lc3NhZ2V9IDwvcD5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QsICB7dXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuXHJcbmNvbnN0IEhlYWRlciA9IHtcclxuICBEZXNrdG9wOiByZXF1aXJlKFwiLi9IZWFkZXIuZGVza3RvcFwiKS5kZWZhdWx0LFxyXG4gIE1vYmlsZTogcmVxdWlyZShcIi4vSGVhZGVyLm1vYmlcIikuZGVmYXVsdCxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHByb3BzKSB7XHJcblxyXG4gIGNvbnN0IFtpc1Njcm9sbERvd24sIHNldElzU2Nyb2xsRG93bl0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdXBkYXRlSXNTY3JvbGxEb3duKTtcclxuICAgIHJldHVybiAoKSA9PiAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHVwZGF0ZUlzU2Nyb2xsRG93bik7XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtdG9wXCIgc3R5bGUgPSB7eyBkaXNwbGF5OiBwcm9wcy52aXNpYmxlPyAnYmxvY2snIDogJ25vbmUnIH19PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtaGlkZS1zbWFsbCB3My1oaWRlLW1lZGl1bVwiIHN0eWxlID0ge3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIG1hcmdpbkJvdHRvbTogYCR7cHJvcHMuaGVhZGVySGVpZ2h0LzJ9cHhgIH19PlxyXG4gICAgICAgIDxIZWFkZXIuRGVza3RvcCBpc1Njcm9sbERvd24gPSB7aXNTY3JvbGxEb3dufSB7Li4ucHJvcHN9IC8+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZSA9IFwidzMtaGlkZS1sYXJnZVwiIHN0eWxlID0ge3sgcG9zaXRpb246ICdyZWxhdGl2ZScsIG1hcmdpbkJvdHRvbTogYCR7cHJvcHMuaGVhZGVySGVpZ2h0LzJ9cHhgIH19PlxyXG4gICAgICAgIDxIZWFkZXIuTW9iaWxlIGlzU2Nyb2xsRG93biA9IHtpc1Njcm9sbERvd259IHsuLi5wcm9wc30gLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG5cclxuICBmdW5jdGlvbiB1cGRhdGVJc1Njcm9sbERvd24oKSB7XHJcbiAgICBpZiAod2luZG93LnBhZ2VZT2Zmc2V0ID4gMCkge1xyXG4gICAgICBpc1Njcm9sbERvd24gPT09IGZhbHNlICYmIHNldElzU2Nyb2xsRG93bih0cnVlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGlzU2Nyb2xsRG93biA9PT0gdHJ1ZSAmJiBzZXRJc1Njcm9sbERvd24oZmFsc2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7IHN0aWNrYWJsZSB9KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lID0ge2B3My13aGl0ZSB3My1ib3JkZXItdG9wIHczLWJvcmRlci1ncmF5ICR7c3RpY2thYmxlPyd3My1ib3R0b20nOicnfWB9IHN0eWxlID0ge3sgbWFyZ2luVG9wOiAnMzJweCcgfX0+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lID0gXCJ3My1jb250YWluZXJcIiBzdHlsZSA9IHt7IHBhZGRpbmc6ICcxNnB4JywgbWF4V2lkdGg6ICcxMjAwcHgnLCBtYXJnaW46ICdhdXRvJyB9fT5cclxuICAgICAgICBGb290ZXJcclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKCkge1xyXG5cclxuICBjb25zdCBbdmlzaWJsZSwgc2V0VmlzaWJsZV0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdXBkYXRlVmlzaWJsZSk7XHJcbiAgICByZXR1cm4gKCkgPT4gIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB1cGRhdGVWaXNpYmxlKTtcclxuICB9KTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgIGNsYXNzTmFtZSA9IFwidzMtYnV0dG9uIHczLWhvdmVyLW5vbmUgdzMtY2lyY2xlIHczLWJvcmRlciB3My1ib3JkZXItZ3JheSB3My1jYXJkIHczLWxpZ2h0LWdyYXkgdzMtYm90dG9tIHczLWFuaW1hdGUtb3BhY2l0eVwiXHJcbiAgICAgICAgICBzdHlsZSA9IHt7IHdpZHRoOiAnMzVweCcsIGhlaWdodDogJzM1cHgnLCByaWdodDogJzEwcHgnLCBib3R0b206ICczMCUnLCB0ZXh0QWxpZ246ICdjZW50ZXInLCBwYWRkaW5nOiAnNHB4IDAnLCBkaXNwbGF5OiB2aXNpYmxlPyAnYmxvY2snIDogJ25vbmUnIH19XHJcbiAgICAgICAgICBvbkNsaWNrPXtlID0+IHdpbmRvdy5zY3JvbGxUbyh7IHRvcDogMCwgYmVoYXZpb3I6ICdzbW9vdGgnIH0pfVxyXG4gICAgPlxyXG4gICAgICA8aSBjbGFzc05hbWUgPSBcImZhcyBmYS1hcnJvdy11cCB3My10ZXh0LWdyYXlcIiAvPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxuXHJcbiAgZnVuY3Rpb24gdXBkYXRlVmlzaWJsZSgpIHtcclxuICAgIGNvbnN0IHZpZXdIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDtcclxuICAgIGlmICh3aW5kb3cucGFnZVlPZmZzZXQgPiB2aWV3SGVpZ2h0IC8gMikge1xyXG4gICAgICB2aXNpYmxlID09PSBmYWxzZSAmJiBzZXRWaXNpYmxlKHRydWUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdmlzaWJsZSA9PT0gdHJ1ZSAmJiBzZXRWaXNpYmxlKGZhbHNlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgTmF2aWdhdG9yIH0gZnJvbSAnQHJlYWxtanMvcmVhY3QtbmF2aSc7XHJcbmltcG9ydCB7IFVzZXJQcm92aWRlciB9IGZyb20gJ0ByZWFsbWpzL3JlYWN0LXVzZXInO1xyXG5cclxuaW1wb3J0IHJvdXRlcyBmcm9tICcuL3JvdXRlcyc7XHJcblxyXG5pbXBvcnQgSGVhZGVyIGZyb20gJy4vV2lkZ2V0L0hlYWRlcic7XHJcbmltcG9ydCBGb290ZXIgZnJvbSAnLi9XaWRnZXQvRm9vdGVyJztcclxuaW1wb3J0IFNjcm9sbFRvcEJ1dHRvbiBmcm9tICcuL1dpZGdldC9Db21tb24vU2Nyb2xsVG9wQnV0dG9uJztcclxuXHJcbmNvbnN0IGhlYWRlckhlaWdodCA9IDY0O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gV2ViYXBwKHByb3BzKSB7XHJcblxyXG4gIGNvbnN0IFtoZWFkZXJWaXNpYmxlLCBzZXRIZWFkZXJWaXNpYmxlXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4gIGNvbnN0IFtoZWFkZXJDYXJkU3R5bGUsIHNldEhlYWRlckNhcmRTdHlsZV0gPSB1c2VTdGF0ZSh0cnVlKTtcclxuICBjb25zdCBbZm9vdGVyU3RpY2thYmxlLCBzZXRGb290ZXJTdGlja2FibGVdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIG9uV2luZG93UmVzaXplKTtcclxuICAgIHJldHVybiAoKSA9PiByZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCBvbldpbmRvd1Jlc2l6ZSk7XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8VXNlclByb3ZpZGVyIGFjY291bnRDbGllbnQgPSB7cHJvcHMuYWNjb3VudENsaWVudH0+XHJcbiAgICAgICAgPEhlYWRlciBwcm9ncmFtcyA9IHtwcm9wcy5wcm9ncmFtc30gdmlzaWJsZSA9IHtoZWFkZXJWaXNpYmxlfSBjYXJkU3R5bGUgPSB7aGVhZGVyQ2FyZFN0eWxlfSBoZWFkZXJIZWlnaHQgPSB7aGVhZGVySGVpZ2h0fSBlbmRwb2ludCA9IHtwcm9wcy5lbmRwb2ludH0gLz5cclxuICAgICAgICA8TmF2aWdhdG9yICByb3V0ZXMgPSB7cm91dGVzfVxyXG4gICAgICAgICAgICAgICAgICAgIGluaXRpYWxSb3V0ZSA9ICdob21lJ1xyXG4gICAgICAgICAgICAgICAgICAgIGZhbGxiYWNrUm91dGUgPSAnZXJyb3I0MDQnXHJcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2VSb3V0ZSA9IHtvbkNoYW5nZVJvdXRlfVxyXG4gICAgICAgICAgICAgICAgICAgIG9uRW50ZXJQYWdlID0ge29uRW50ZXJQYWdlfVxyXG4gICAgICAgICAgICAgICAgICAgIHsuLi5wcm9wc31cclxuICAgICAgICAgICAgICAgICAgICBzaG93SGVhZGVyU2VwYXJhdG9yID0ge3VwZGF0ZUhlYWRlckNhcmRTdHlsZX1cclxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJQYWRkaW5nID0ge2hlYWRlckhlaWdodH1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDxGb290ZXIgc3RpY2thYmxlID0ge2Zvb3RlclN0aWNrYWJsZX0gLz5cclxuICAgICAgPC9Vc2VyUHJvdmlkZXI+XHJcbiAgICAgIDxTY3JvbGxUb3BCdXR0b24gLz5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG4gIGZ1bmN0aW9uIG9uQ2hhbmdlUm91dGUocm91dGUpIHtcclxuICAgIHVwZGF0ZUhlYWRlclZpc2libGUocm91dGUpO1xyXG4gICAgd2luZG93LnNjcm9sbFRvKHsgdG9wOiAwIH0pO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdXBkYXRlSGVhZGVyVmlzaWJsZShyb3V0ZSkge1xyXG4gICAgaWYgKGhlYWRlclZpc2libGUgJiYgL2Vycm9yLy50ZXN0KHJvdXRlLnVybCkpIHtcclxuICAgICAgc2V0SGVhZGVyVmlzaWJsZShmYWxzZSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmICghaGVhZGVyVmlzaWJsZSAmJiAhL2Vycm9yLy50ZXN0KHJvdXRlLnVybCkpIHtcclxuICAgICAgc2V0SGVhZGVyVmlzaWJsZSh0cnVlKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdXBkYXRlSGVhZGVyQ2FyZFN0eWxlKHZhbHVlKSB7XHJcbiAgICBzZXRIZWFkZXJDYXJkU3R5bGUodmFsdWUpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gb25FbnRlclBhZ2UoKSB7XHJcbiAgICB1cGRhdGVGb290ZVN0aWNrYWJsZSgpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gb25XaW5kb3dSZXNpemUoKSB7XHJcbiAgICB1cGRhdGVGb290ZVN0aWNrYWJsZSgpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gdXBkYXRlRm9vdGVTdGlja2FibGUoKSB7XHJcbiAgICBpZiAoIGlzRXhjZWVkVmlld0hlaWdodCgpICkge1xyXG4gICAgICBzZXRGb290ZXJTdGlja2FibGUoZmFsc2UpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgc2V0Rm9vdGVyU3RpY2thYmxlKHRydWUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gaXNFeGNlZWRWaWV3SGVpZ2h0KCkge1xyXG4gICAgY29uc3Qgdmlld0hlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O1xyXG4gICAgY29uc3QgZG9jSGVpZ2h0ID0gZG9jdW1lbnQuYm9keS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XHJcbiAgICByZXR1cm4gZG9jSGVpZ2h0ID4gdmlld0hlaWdodDtcclxuICB9XHJcblxyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiXHJcblxyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdyZWFjdC1kb20nO1xyXG5cclxuaW1wb3J0IEFjY291bnRDbGllbnQgZnJvbSAnQHJlYWxtanMvYWNjb3VudC1jbGllbnQnO1xyXG5cclxuaW1wb3J0IGRhdGEgZnJvbSAnLi9kYXRhLmZldGNoZXIudXRpbCc7XHJcblxyXG5pbXBvcnQgbG9jYWxlcyBmcm9tICcuLi9sb2NhbGVzJztcclxuXHJcbmltcG9ydCBXZWJhcHAgZnJvbSAnLi4vV2ViYXBwJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHJcbiAgX19jb25maWdzOiBudWxsLFxyXG5cclxuICBjb25maWcoY29uZmlnKSB7XHJcbiAgICB0aGlzLl9fY29uZmlncyA9IGNvbmZpZztcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH0sXHJcblxyXG4gIHN0YXJ0KCkge1xyXG4gICAgdGhpcy52ZXJpZnlDb25maWdzKCk7XHJcblxyXG4gICAgbG9jYWxlcy5zZXRMYW5ndWFnZSh0aGlzLl9fY29uZmlncy5sYW5ndWFnZSkuaW5pdCgpO1xyXG5cclxuICAgIGNvbnN0IGFjY291bnQgPSBuZXcgQWNjb3VudENsaWVudCh7XHJcbiAgICAgIGFwcDogdGhpcy5fX2NvbmZpZ3MuYXBwLFxyXG4gICAgICBiYXNldXJsOiB0aGlzLl9fY29uZmlncy5lbmRwb2ludC5hY2NvdW50LFxyXG4gICAgICBzZXNzaW9uOiB0aGlzLl9fY29uZmlncy5hY2NvdW50U2Vzc2lvbk5hbWUgfHwgJ19yX3Nfc2Vzc18nLFxyXG4gICAgfSk7XHJcblxyXG4gICAgYWNjb3VudFxyXG4gICAgICAub24oJ2F1dGhlbnRpY2F0aW5nJywgKCkgPT4geyBjb25zb2xlLmxvZygnLS0+IGF1dGhlbnRpY2F0aW5nLi4uJyk7IH0pXHJcbiAgICAgIC5vbignYXV0aGVudGljYXRlZCcsIHVzZXIgPT4geyBjb25zb2xlLmxvZyhgLS0+IGF1dGhlbnRpY2F0ZWRgKTsgY29uc29sZS5sb2codXNlcik7IH0pXHJcbiAgICAgIC5vbigndW5hdXRoZW50aWNhdGVkJywgKCkgPT4geyBjb25zb2xlLmxvZygnLS0+IHVuYXV0aGVudGljYXRlZCcpOyB9KVxyXG5cclxuICAgIGFjY291bnQuc3NvKCk7XHJcblxyXG4gICAgZGF0YS5zZXRFbmRwb2ludCh0aGlzLl9fY29uZmlncy5lbmRwb2ludClcclxuICAgICAgICAuZmV0Y2goKVxyXG4gICAgICAgIC50aGVuKChbcHJvZ3JhbXMsIHByb21vdGlvbnNdKSA9PiB7XHJcbiAgICAgICAgICByZW5kZXIoXHJcbiAgICAgICAgICAgIDxXZWJhcHAgYWNjb3VudENsaWVudCA9IHthY2NvdW50fVxyXG4gICAgICAgICAgICAgICAgICAgIHByb2dyYW1zID0ge3Byb2dyYW1zfVxyXG4gICAgICAgICAgICAgICAgICAgIHByb21vdGlvbnMgPSB7cHJvbW90aW9uc31cclxuICAgICAgICAgICAgICAgICAgICBlbmRwb2ludCA9IHt0aGlzLl9fY29uZmlncy5lbmRwb2ludH1cclxuICAgICAgICAgICAgLz4sXHJcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JylcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XHJcblxyXG4gIH0sXHJcblxyXG4gIHZlcmlmeUNvbmZpZ3MoKSB7XHJcbiAgICBpZiAodGhpcy5fX2NvbmZpZ3MgPT09IG51bGwpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiIyBBcHBsaWNhdGlvbjogbWlzc2luZyBjb25maWdzXCIpO1xyXG4gICAgfVxyXG4gICAgaWYgKCF0aGlzLl9fY29uZmlncy5hcHApIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiIyBBcHBsaWNhdGlvbjogbWlzc2luZyBhcHAgaW4gY29uZmlnc1wiKTtcclxuICAgIH1cclxuICAgIGlmICghdGhpcy5fX2NvbmZpZ3MuZW5kcG9pbnQpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiIyBBcHBsaWNhdGlvbjogbWlzc2luZyBlbmRwb2ludCBpbiBjb25maWdzXCIpO1xyXG4gICAgfVxyXG4gICAgaWYgKCF0aGlzLl9fY29uZmlncy5lbmRwb2ludC5hY2NvdW50KSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIiMgQXBwbGljYXRpb246IG1pc3NpbmcgYWNjb3VudCBlbmRwb250IGluIGNvbmZpZ3NcIik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcblxyXG59O1xyXG4iLCJcInVzZSBzdHJpY3RcIlxyXG5cclxuaW1wb3J0IHNlcnZpY2VXb3JrZXIgZnJvbSAnLi4vbGliL3NlcnZpY2V3b3JrZXIudXRpbCc7XHJcbmltcG9ydCBhcHBsaWNhdGlvbiBmcm9tICcuLi9saWIvYXBwbGljYXRpb24udXRpbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoY29uZmlnKSB7XHJcbiAgc2VydmljZVdvcmtlci5pbml0KClcclxuICAgICAgICAgICAgICAudGhlbihyZWcgPT4gYXBwbGljYXRpb24uY29uZmlnKGNvbmZpZykuc3RhcnQoKSlcclxuICAgICAgICAgICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XHJcbn1cclxuIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBpbml0KCkge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcclxuICAgICAgICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKCcvc3cuanMnKS50aGVuIChyZWcgPT4ge1xyXG4gICAgICAgICAgICBpZiAocmVnLmluc3RhbGxpbmcpIHtcclxuICAgICAgICAgICAgICByZWcuaW5zdGFsbGluZy5hZGRFdmVudExpc3RlbmVyKCdzdGF0ZWNoYW5nZScsIGUgPT4gZS50YXJnZXQuc3RhdGUgPT09ICdhY3RpdmF0ZWQnICYmIHJlc29sdmUoKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gcmVzb2x2ZSgpKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiXCJ1c2Ugc3RyaWN0XCJcclxuXHJcbmNvbnN0IGNvbmZpZyA9IHtcclxuICBsYW5ndWFnZTogJ3ZpJyxcclxuICBhcHA6ICdkZXYnLFxyXG4gIGVuZHBvaW50OiB7XHJcbiAgICBhY2NvdW50OiAnaHR0cHM6Ly9zdHVkaWhhLmdpdGh1Yi5pbycsXHJcbiAgICBwcm9ncmFtczogJ2h0dHBzOi8vc3R1ZGloYS5naXRodWIuaW8vYXBpL3Byb2dyYW1zLmpzb24nLFxyXG4gICAgY291cnNlczogJ2h0dHBzOi8vc3R1ZGloYS5naXRodWIuaW8vYXBpL2NvdXJzZXMnLFxyXG4gICAgcHJvbW90aW9uczogJ2h0dHBzOi8vc3R1ZGloYS5naXRodWIuaW8vYXBpL3Byb21vdGlvbnMuanNvbicsXHJcbiAgICBsb2dvOiAnaHR0cHM6Ly9zdHVkaWhhLmdpdGh1Yi5pby9wdWJsaWMvaW1nL2xvZ28ucG5nJyxcclxuICB9LFxyXG59O1xyXG5cclxuaW1wb3J0IGFwcCBmcm9tICdAc3R1ZGloYS9jb3Vyc2VzdG9yZS13ZWJhcHAnO1xyXG5cclxuYXBwKGNvbmZpZyk7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=